#
#
#  Adaption of the delphi3d.net OpenGL units to FreePascal
#  Sebastian Guenther (sg@freepascal.org) in 2002
#  These units are free to use
#
#

#*************************************************
# *        OpenGL extension loading library        *
# * Generated by MetaGLext, written by Tom Nuydens *
# *  (tom@delphi3d.net -- http://www.delphi3d.net  *
# *************************************************
#*** Generated on 10/11/2002

when defined(windows): 
  {.push, callconv: stdcall.}
else: 
  {.push, callconv: cdecl.}
import 
  gl

type 
  GLcharARB* = Char
  TGLcharARB* = GLcharARB
  PGLcharARB* = ptr GLcharARB
  GLhandleARB* = Int
  TGLhandleARB* = GLhandleARB
  PGLhandleARB* = ptr GLhandleARB
  GLintptr* = Int
  TGLintptr* = GLintptr
  PGLintptr* = ptr GLintptr
  GLsizeiptr* = Int
  TGLsizeiptr* = GLsizeiptr
  PGLsizeiptr* = ptr GLsizeiptr
  GLchar* = Char
  TGLchar* = GLchar
  PGLchar* = Cstring          #***** GL_version_1_2 *****//

const 
  GlUnsignedByte332* = 0x00008032
  GlUnsignedShort4444* = 0x00008033
  GlUnsignedShort5551* = 0x00008034
  GlUnsignedInt8888* = 0x00008035
  GlUnsignedInt1010102* = 0x00008036
  GlRescaleNormal* = 0x0000803A
  GlUnsignedByte233Rev* = 0x00008362
  GlUnsignedShort565* = 0x00008363
  GlUnsignedShort565Rev* = 0x00008364
  GlUnsignedShort4444Rev* = 0x00008365
  GlUnsignedShort1555Rev* = 0x00008366
  GlUnsignedInt8888Rev* = 0x00008367
  GlUnsignedInt2101010Rev* = 0x00008368
  GlBgr* = 0x000080E0
  GlBgra* = 0x000080E1
  GlMaxElementsVertices* = 0x000080E8
  GlMaxElementsIndices* = 0x000080E9
  GlClampToEdge* = 0x0000812F
  GlTextureMinLod* = 0x0000813A
  GlTextureMaxLod* = 0x0000813B
  GlTextureBaseLevel* = 0x0000813C
  GlTextureMaxLevel* = 0x0000813D
  GlLightModelColorControl* = 0x000081F8
  GlSingleColor* = 0x000081F9
  GlSeparateSpecularColor* = 0x000081FA
  GlSmoothPointSizeRange* = 0x00000B12
  GlSmoothPointSizeGranularity* = 0x00000B13
  GlSmoothLineWidthRange* = 0x00000B22
  GlSmoothLineWidthGranularity* = 0x00000B23
  GlAliasedPointSizeRange* = 0x0000846D
  GlAliasedLineWidthRange* = 0x0000846E
  GlPackSkipImages* = 0x0000806B
  GlPackImageHeight* = 0x0000806C
  GlUnpackSkipImages* = 0x0000806D
  GlUnpackImageHeight* = 0x0000806E
  GlTexture3d* = 0x0000806F
  GlProxyTexture3d* = 0x00008070
  GlTextureDepth* = 0x00008071
  GlTextureWrapR* = 0x00008072
  GlMax3dTextureSize* = 0x00008073

proc glBlendColor*(red: TGLclampf, green: TGLclampf, blue: TGLclampf, 
                   alpha: TGLclampf){.dynlib: dllname, importc: "glBlendColor".}
proc glBlendEquation*(mode: TGLenum){.dynlib: dllname, 
                                      importc: "glBlendEquation".}
proc glDrawRangeElements*(mode: TGLenum, start: TGLuint, theend: TGLuint, 
                          count: TGLsizei, thetype: TGLenum, indices: PGLvoid){.
    dynlib: dllname, importc: "glDrawRangeElements".}
proc glColorTable*(target: TGLenum, internalformat: TGLenum, width: TGLsizei, 
                   format: TGLenum, thetype: TGLenum, table: PGLvoid){.
    dynlib: dllname, importc: "glColorTable".}
proc glColorTableParameterfv*(target: TGLenum, pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glColorTableParameterfv".}
proc glColorTableParameteriv*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glColorTableParameteriv".}
proc glCopyColorTable*(target: TGLenum, internalformat: TGLenum, x: TGLint, 
                       y: TGLint, width: TGLsizei){.dynlib: dllname, 
    importc: "glCopyColorTable".}
proc glGetColorTable*(target: TGLenum, format: TGLenum, thetype: TGLenum, 
                      table: PGLvoid){.dynlib: dllname, 
                                       importc: "glGetColorTable".}
proc glGetColorTableParameterfv*(target: TGLenum, pname: TGLenum, 
                                 params: PGLfloat){.dynlib: dllname, 
    importc: "glGetColorTableParameterfv".}
proc glGetColorTableParameteriv*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetColorTableParameteriv".}
proc glColorSubTable*(target: TGLenum, start: TGLsizei, count: TGLsizei, 
                      format: TGLenum, thetype: TGLenum, data: PGLvoid){.
    dynlib: dllname, importc: "glColorSubTable".}
proc glCopyColorSubTable*(target: TGLenum, start: TGLsizei, x: TGLint, 
                          y: TGLint, width: TGLsizei){.dynlib: dllname, 
    importc: "glCopyColorSubTable".}
proc glConvolutionFilter1D*(target: TGLenum, internalformat: TGLenum, 
                            width: TGLsizei, format: TGLenum, thetype: TGLenum, 
                            image: PGLvoid){.dynlib: dllname, 
    importc: "glConvolutionFilter1D".}
proc glConvolutionFilter2D*(target: TGLenum, internalformat: TGLenum, 
                            width: TGLsizei, height: TGLsizei, format: TGLenum, 
                            thetype: TGLenum, image: PGLvoid){.dynlib: dllname, 
    importc: "glConvolutionFilter2D".}
proc glConvolutionParameterf*(target: TGLenum, pname: TGLenum, params: TGLfloat){.
    dynlib: dllname, importc: "glConvolutionParameterf".}
proc glConvolutionParameterfv*(target: TGLenum, pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glConvolutionParameterfv".}
proc glConvolutionParameteri*(target: TGLenum, pname: TGLenum, params: TGLint){.
    dynlib: dllname, importc: "glConvolutionParameteri".}
proc glConvolutionParameteriv*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glConvolutionParameteriv".}
proc glCopyConvolutionFilter1D*(target: TGLenum, internalformat: TGLenum, 
                                x: TGLint, y: TGLint, width: TGLsizei){.
    dynlib: dllname, importc: "glCopyConvolutionFilter1D".}
proc glCopyConvolutionFilter2D*(target: TGLenum, internalformat: TGLenum, 
                                x: TGLint, y: TGLint, width: TGLsizei, 
                                height: TGLsizei){.dynlib: dllname, 
    importc: "glCopyConvolutionFilter2D".}
proc glGetConvolutionFilter*(target: TGLenum, format: TGLenum, thetype: TGLenum, 
                             image: PGLvoid){.dynlib: dllname, 
    importc: "glGetConvolutionFilter".}
proc glGetConvolutionParameterfv*(target: TGLenum, pname: TGLenum, 
                                  params: PGLfloat){.dynlib: dllname, 
    importc: "glGetConvolutionParameterfv".}
proc glGetConvolutionParameteriv*(target: TGLenum, pname: TGLenum, 
                                  params: PGLint){.dynlib: dllname, 
    importc: "glGetConvolutionParameteriv".}
proc glGetSeparableFilter*(target: TGLenum, format: TGLenum, thetype: TGLenum, 
                           row: PGLvoid, column: PGLvoid, span: PGLvoid){.
    dynlib: dllname, importc: "glGetSeparableFilter".}
proc glSeparableFilter2D*(target: TGLenum, internalformat: TGLenum, 
                          width: TGLsizei, height: TGLsizei, format: TGLenum, 
                          thetype: TGLenum, row: PGLvoid, column: PGLvoid){.
    dynlib: dllname, importc: "glSeparableFilter2D".}
proc glGetHistogram*(target: TGLenum, reset: TGLboolean, format: TGLenum, 
                     thetype: TGLenum, values: PGLvoid){.dynlib: dllname, 
    importc: "glGetHistogram".}
proc glGetHistogramParameterfv*(target: TGLenum, pname: TGLenum, 
                                params: PGLfloat){.dynlib: dllname, 
    importc: "glGetHistogramParameterfv".}
proc glGetHistogramParameteriv*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetHistogramParameteriv".}
proc glGetMinmax*(target: TGLenum, reset: TGLboolean, format: TGLenum, 
                  thetype: TGLenum, values: PGLvoid){.dynlib: dllname, 
    importc: "glGetMinmax".}
proc glGetMinmaxParameterfv*(target: TGLenum, pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glGetMinmaxParameterfv".}
proc glGetMinmaxParameteriv*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetMinmaxParameteriv".}
proc glHistogram*(target: TGLenum, width: TGLsizei, internalformat: TGLenum, 
                  sink: TGLboolean){.dynlib: dllname, importc: "glHistogram".}
proc glMinmax*(target: TGLenum, internalformat: TGLenum, sink: TGLboolean){.
    dynlib: dllname, importc: "glMinmax".}
proc glResetHistogram*(target: TGLenum){.dynlib: dllname, 
    importc: "glResetHistogram".}
proc glResetMinmax*(target: TGLenum){.dynlib: dllname, importc: "glResetMinmax".}
proc glTexImage3D*(target: TGLenum, level: TGLint, internalformat: TGLint, 
                   width: TGLsizei, height: TGLsizei, depth: TGLsizei, 
                   border: TGLint, format: TGLenum, thetype: TGLenum, 
                   pixels: PGLvoid){.dynlib: dllname, importc: "glTexImage3D".}
proc glTexSubImage3D*(target: TGLenum, level: TGLint, xoffset: TGLint, 
                      yoffset: TGLint, zoffset: TGLint, width: TGLsizei, 
                      height: TGLsizei, depth: TGLsizei, format: TGLenum, 
                      thetype: TGLenum, pixels: PGLvoid){.dynlib: dllname, 
    importc: "glTexSubImage3D".}
proc glCopyTexSubImage3D*(target: TGLenum, level: TGLint, xoffset: TGLint, 
                          yoffset: TGLint, zoffset: TGLint, x: TGLint, 
                          y: TGLint, width: TGLsizei, height: TGLsizei){.
    dynlib: dllname, importc: "glCopyTexSubImage3D".}
proc glActiveTextureARB*(texture: TGLenum){.dynlib: dllname, 
    importc: "glActiveTextureARB".}
proc glClientActiveTextureARB*(texture: TGLenum){.dynlib: dllname, 
    importc: "glClientActiveTextureARB".}
proc glMultiTexCoord1dARB*(target: TGLenum, s: TGLdouble){.dynlib: dllname, 
    importc: "glMultiTexCoord1dARB".}
proc glMultiTexCoord1dvARB*(target: TGLenum, v: PGLdouble){.dynlib: dllname, 
    importc: "glMultiTexCoord1dvARB".}
proc glMultiTexCoord1fARB*(target: TGLenum, s: TGLfloat){.dynlib: dllname, 
    importc: "glMultiTexCoord1fARB".}
proc glMultiTexCoord1fvARB*(target: TGLenum, v: PGLfloat){.dynlib: dllname, 
    importc: "glMultiTexCoord1fvARB".}
proc glMultiTexCoord1iARB*(target: TGLenum, s: TGLint){.dynlib: dllname, 
    importc: "glMultiTexCoord1iARB".}
proc glMultiTexCoord1ivARB*(target: TGLenum, v: PGLint){.dynlib: dllname, 
    importc: "glMultiTexCoord1ivARB".}
proc glMultiTexCoord1sARB*(target: TGLenum, s: TGLshort){.dynlib: dllname, 
    importc: "glMultiTexCoord1sARB".}
proc glMultiTexCoord1svARB*(target: TGLenum, v: PGLshort){.dynlib: dllname, 
    importc: "glMultiTexCoord1svARB".}
proc glMultiTexCoord2dARB*(target: TGLenum, s: TGLdouble, t: TGLdouble){.
    dynlib: dllname, importc: "glMultiTexCoord2dARB".}
proc glMultiTexCoord2dvARB*(target: TGLenum, v: PGLdouble){.dynlib: dllname, 
    importc: "glMultiTexCoord2dvARB".}
proc glMultiTexCoord2fARB*(target: TGLenum, s: TGLfloat, t: TGLfloat){.
    dynlib: dllname, importc: "glMultiTexCoord2fARB".}
proc glMultiTexCoord2fvARB*(target: TGLenum, v: PGLfloat){.dynlib: dllname, 
    importc: "glMultiTexCoord2fvARB".}
proc glMultiTexCoord2iARB*(target: TGLenum, s: TGLint, t: TGLint){.
    dynlib: dllname, importc: "glMultiTexCoord2iARB".}
proc glMultiTexCoord2ivARB*(target: TGLenum, v: PGLint){.dynlib: dllname, 
    importc: "glMultiTexCoord2ivARB".}
proc glMultiTexCoord2sARB*(target: TGLenum, s: TGLshort, t: TGLshort){.
    dynlib: dllname, importc: "glMultiTexCoord2sARB".}
proc glMultiTexCoord2svARB*(target: TGLenum, v: PGLshort){.dynlib: dllname, 
    importc: "glMultiTexCoord2svARB".}
proc glMultiTexCoord3dARB*(target: TGLenum, s: TGLdouble, t: TGLdouble, 
                           r: TGLdouble){.dynlib: dllname, 
    importc: "glMultiTexCoord3dARB".}
proc glMultiTexCoord3dvARB*(target: TGLenum, v: PGLdouble){.dynlib: dllname, 
    importc: "glMultiTexCoord3dvARB".}
proc glMultiTexCoord3fARB*(target: TGLenum, s: TGLfloat, t: TGLfloat, 
                           r: TGLfloat){.dynlib: dllname, 
    importc: "glMultiTexCoord3fARB".}
proc glMultiTexCoord3fvARB*(target: TGLenum, v: PGLfloat){.dynlib: dllname, 
    importc: "glMultiTexCoord3fvARB".}
proc glMultiTexCoord3iARB*(target: TGLenum, s: TGLint, t: TGLint, r: TGLint){.
    dynlib: dllname, importc: "glMultiTexCoord3iARB".}
proc glMultiTexCoord3ivARB*(target: TGLenum, v: PGLint){.dynlib: dllname, 
    importc: "glMultiTexCoord3ivARB".}
proc glMultiTexCoord3sARB*(target: TGLenum, s: TGLshort, t: TGLshort, 
                           r: TGLshort){.dynlib: dllname, 
    importc: "glMultiTexCoord3sARB".}
proc glMultiTexCoord3svARB*(target: TGLenum, v: PGLshort){.dynlib: dllname, 
    importc: "glMultiTexCoord3svARB".}
proc glMultiTexCoord4dARB*(target: TGLenum, s: TGLdouble, t: TGLdouble, 
                           r: TGLdouble, q: TGLdouble){.dynlib: dllname, 
    importc: "glMultiTexCoord4dARB".}
proc glMultiTexCoord4dvARB*(target: TGLenum, v: PGLdouble){.dynlib: dllname, 
    importc: "glMultiTexCoord4dvARB".}
proc glMultiTexCoord4fARB*(target: TGLenum, s: TGLfloat, t: TGLfloat, 
                           r: TGLfloat, q: TGLfloat){.dynlib: dllname, 
    importc: "glMultiTexCoord4fARB".}
proc glMultiTexCoord4fvARB*(target: TGLenum, v: PGLfloat){.dynlib: dllname, 
    importc: "glMultiTexCoord4fvARB".}
proc glMultiTexCoord4iARB*(target: TGLenum, s: TGLint, t: TGLint, r: TGLint, 
                           q: TGLint){.dynlib: dllname, 
                                       importc: "glMultiTexCoord4iARB".}
proc glMultiTexCoord4ivARB*(target: TGLenum, v: PGLint){.dynlib: dllname, 
    importc: "glMultiTexCoord4ivARB".}
proc glMultiTexCoord4sARB*(target: TGLenum, s: TGLshort, t: TGLshort, 
                           r: TGLshort, q: TGLshort){.dynlib: dllname, 
    importc: "glMultiTexCoord4sARB".}
proc glMultiTexCoord4svARB*(target: TGLenum, v: PGLshort){.dynlib: dllname, 
    importc: "glMultiTexCoord4svARB".}
proc glSampleCoverageARB*(value: TGLclampf, invert: TGLboolean){.
    dynlib: dllname, importc: "glSampleCoverageARB".}
  #***** GL_ARB_texture_env_add *****//
proc glWeightbvARB*(size: TGLint, weights: PGLbyte){.dynlib: dllname, 
    importc: "glWeightbvARB".}
proc glWeightsvARB*(size: TGLint, weights: PGLshort){.dynlib: dllname, 
    importc: "glWeightsvARB".}
proc glWeightivARB*(size: TGLint, weights: PGLint){.dynlib: dllname, 
    importc: "glWeightivARB".}
proc glWeightfvARB*(size: TGLint, weights: PGLfloat){.dynlib: dllname, 
    importc: "glWeightfvARB".}
proc glWeightdvARB*(size: TGLint, weights: PGLdouble){.dynlib: dllname, 
    importc: "glWeightdvARB".}
proc glWeightvARB*(size: TGLint, weights: PGLdouble){.dynlib: dllname, 
    importc: "glWeightvARB".}
proc glWeightubvARB*(size: TGLint, weights: PGLubyte){.dynlib: dllname, 
    importc: "glWeightubvARB".}
proc glWeightusvARB*(size: TGLint, weights: PGLushort){.dynlib: dllname, 
    importc: "glWeightusvARB".}
proc glWeightuivARB*(size: TGLint, weights: PGLuint){.dynlib: dllname, 
    importc: "glWeightuivARB".}
proc glWeightPointerARB*(size: TGLint, thetype: TGLenum, stride: TGLsizei, 
                         pointer: PGLvoid){.dynlib: dllname, 
    importc: "glWeightPointerARB".}
proc glVertexBlendARB*(count: TGLint){.dynlib: dllname, 
                                       importc: "glVertexBlendARB".}
proc glVertexAttrib1sARB*(index: TGLuint, x: TGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib1sARB".}
proc glVertexAttrib1fARB*(index: TGLuint, x: TGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib1fARB".}
proc glVertexAttrib1dARB*(index: TGLuint, x: TGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib1dARB".}
proc glVertexAttrib2sARB*(index: TGLuint, x: TGLshort, y: TGLshort){.
    dynlib: dllname, importc: "glVertexAttrib2sARB".}
proc glVertexAttrib2fARB*(index: TGLuint, x: TGLfloat, y: TGLfloat){.
    dynlib: dllname, importc: "glVertexAttrib2fARB".}
proc glVertexAttrib2dARB*(index: TGLuint, x: TGLdouble, y: TGLdouble){.
    dynlib: dllname, importc: "glVertexAttrib2dARB".}
proc glVertexAttrib3sARB*(index: TGLuint, x: TGLshort, y: TGLshort, z: TGLshort){.
    dynlib: dllname, importc: "glVertexAttrib3sARB".}
proc glVertexAttrib3fARB*(index: TGLuint, x: TGLfloat, y: TGLfloat, z: TGLfloat){.
    dynlib: dllname, importc: "glVertexAttrib3fARB".}
proc glVertexAttrib3dARB*(index: TGLuint, x: TGLdouble, y: TGLdouble, 
                          z: TGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib3dARB".}
proc glVertexAttrib4sARB*(index: TGLuint, x: TGLshort, y: TGLshort, z: TGLshort, 
                          w: TGLshort){.dynlib: dllname, 
                                        importc: "glVertexAttrib4sARB".}
proc glVertexAttrib4fARB*(index: TGLuint, x: TGLfloat, y: TGLfloat, z: TGLfloat, 
                          w: TGLfloat){.dynlib: dllname, 
                                        importc: "glVertexAttrib4fARB".}
proc glVertexAttrib4dARB*(index: TGLuint, x: TGLdouble, y: TGLdouble, 
                          z: TGLdouble, w: TGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib4dARB".}
proc glVertexAttrib4NubARB*(index: TGLuint, x: TGLubyte, y: TGLubyte, 
                            z: TGLubyte, w: TGLubyte){.dynlib: dllname, 
    importc: "glVertexAttrib4NubARB".}
proc glVertexAttrib1svARB*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib1svARB".}
proc glVertexAttrib1fvARB*(index: TGLuint, v: PGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib1fvARB".}
proc glVertexAttrib1dvARB*(index: TGLuint, v: PGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib1dvARB".}
proc glVertexAttrib2svARB*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib2svARB".}
proc glVertexAttrib2fvARB*(index: TGLuint, v: PGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib2fvARB".}
proc glVertexAttrib2dvARB*(index: TGLuint, v: PGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib2dvARB".}
proc glVertexAttrib3svARB*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib3svARB".}
proc glVertexAttrib3fvARB*(index: TGLuint, v: PGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib3fvARB".}
proc glVertexAttrib3dvARB*(index: TGLuint, v: PGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib3dvARB".}
proc glVertexAttrib4bvARB*(index: TGLuint, v: PGLbyte){.dynlib: dllname, 
    importc: "glVertexAttrib4bvARB".}
proc glVertexAttrib4svARB*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib4svARB".}
proc glVertexAttrib4ivARB*(index: TGLuint, v: PGLint){.dynlib: dllname, 
    importc: "glVertexAttrib4ivARB".}
proc glVertexAttrib4ubvARB*(index: TGLuint, v: PGLubyte){.dynlib: dllname, 
    importc: "glVertexAttrib4ubvARB".}
proc glVertexAttrib4usvARB*(index: TGLuint, v: PGLushort){.dynlib: dllname, 
    importc: "glVertexAttrib4usvARB".}
proc glVertexAttrib4uivARB*(index: TGLuint, v: PGLuint){.dynlib: dllname, 
    importc: "glVertexAttrib4uivARB".}
proc glVertexAttrib4fvARB*(index: TGLuint, v: PGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib4fvARB".}
proc glVertexAttrib4dvARB*(index: TGLuint, v: PGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib4dvARB".}
proc glVertexAttrib4NbvARB*(index: TGLuint, v: PGLbyte){.dynlib: dllname, 
    importc: "glVertexAttrib4NbvARB".}
proc glVertexAttrib4NsvARB*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib4NsvARB".}
proc glVertexAttrib4NivARB*(index: TGLuint, v: PGLint){.dynlib: dllname, 
    importc: "glVertexAttrib4NivARB".}
proc glVertexAttrib4NubvARB*(index: TGLuint, v: PGLubyte){.dynlib: dllname, 
    importc: "glVertexAttrib4NubvARB".}
proc glVertexAttrib4NusvARB*(index: TGLuint, v: PGLushort){.dynlib: dllname, 
    importc: "glVertexAttrib4NusvARB".}
proc glVertexAttrib4NuivARB*(index: TGLuint, v: PGLuint){.dynlib: dllname, 
    importc: "glVertexAttrib4NuivARB".}
proc glVertexAttribPointerARB*(index: TGLuint, size: TGLint, thetype: TGLenum, 
                               normalized: TGLboolean, stride: TGLsizei, 
                               pointer: PGLvoid){.dynlib: dllname, 
    importc: "glVertexAttribPointerARB".}
proc glEnableVertexAttribArrayARB*(index: TGLuint){.dynlib: dllname, 
    importc: "glEnableVertexAttribArrayARB".}
proc glDisableVertexAttribArrayARB*(index: TGLuint){.dynlib: dllname, 
    importc: "glDisableVertexAttribArrayARB".}
proc glProgramStringARB*(target: TGLenum, format: TGLenum, length: TGLsizei, 
                         str: PGLvoid){.dynlib: dllname, 
                                        importc: "glProgramStringARB".}
proc glBindProgramARB*(target: TGLenum, theProgram: TGLuint){.dynlib: dllname, 
    importc: "glBindProgramARB".}
proc glDeleteProgramsARB*(n: TGLsizei, programs: PGLuint){.dynlib: dllname, 
    importc: "glDeleteProgramsARB".}
proc glGenProgramsARB*(n: TGLsizei, programs: PGLuint){.dynlib: dllname, 
    importc: "glGenProgramsARB".}
proc glProgramEnvParameter4dARB*(target: TGLenum, index: TGLuint, x: TGLdouble, 
                                 y: TGLdouble, z: TGLdouble, w: TGLdouble){.
    dynlib: dllname, importc: "glProgramEnvParameter4dARB".}
proc glProgramEnvParameter4dvARB*(target: TGLenum, index: TGLuint, 
                                  params: PGLdouble){.dynlib: dllname, 
    importc: "glProgramEnvParameter4dvARB".}
proc glProgramEnvParameter4fARB*(target: TGLenum, index: TGLuint, x: TGLfloat, 
                                 y: TGLfloat, z: TGLfloat, w: TGLfloat){.
    dynlib: dllname, importc: "glProgramEnvParameter4fARB".}
proc glProgramEnvParameter4fvARB*(target: TGLenum, index: TGLuint, 
                                  params: PGLfloat){.dynlib: dllname, 
    importc: "glProgramEnvParameter4fvARB".}
proc glProgramLocalParameter4dARB*(target: TGLenum, index: TGLuint, 
                                   x: TGLdouble, y: TGLdouble, z: TGLdouble, 
                                   w: TGLdouble){.dynlib: dllname, 
    importc: "glProgramLocalParameter4dARB".}
proc glProgramLocalParameter4dvARB*(target: TGLenum, index: TGLuint, 
                                    params: PGLdouble){.dynlib: dllname, 
    importc: "glProgramLocalParameter4dvARB".}
proc glProgramLocalParameter4fARB*(target: TGLenum, index: TGLuint, x: TGLfloat, 
                                   y: TGLfloat, z: TGLfloat, w: TGLfloat){.
    dynlib: dllname, importc: "glProgramLocalParameter4fARB".}
proc glProgramLocalParameter4fvARB*(target: TGLenum, index: TGLuint, 
                                    params: PGLfloat){.dynlib: dllname, 
    importc: "glProgramLocalParameter4fvARB".}
proc glGetProgramEnvParameterdvARB*(target: TGLenum, index: TGLuint, 
                                    params: PGLdouble){.dynlib: dllname, 
    importc: "glGetProgramEnvParameterdvARB".}
proc glGetProgramEnvParameterfvARB*(target: TGLenum, index: TGLuint, 
                                    params: PGLfloat){.dynlib: dllname, 
    importc: "glGetProgramEnvParameterfvARB".}
proc glGetProgramLocalParameterdvARB*(target: TGLenum, index: TGLuint, 
                                      params: PGLdouble){.dynlib: dllname, 
    importc: "glGetProgramLocalParameterdvARB".}
proc glGetProgramLocalParameterfvARB*(target: TGLenum, index: TGLuint, 
                                      params: PGLfloat){.dynlib: dllname, 
    importc: "glGetProgramLocalParameterfvARB".}
proc glGetProgramivARB*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetProgramivARB".}
proc glGetProgramStringARB*(target: TGLenum, pname: TGLenum, str: PGLvoid){.
    dynlib: dllname, importc: "glGetProgramStringARB".}
proc glGetVertexAttribdvARB*(index: TGLuint, pname: TGLenum, params: PGLdouble){.
    dynlib: dllname, importc: "glGetVertexAttribdvARB".}
proc glGetVertexAttribfvARB*(index: TGLuint, pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glGetVertexAttribfvARB".}
proc glGetVertexAttribivARB*(index: TGLuint, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetVertexAttribivARB".}
proc glGetVertexAttribPointervARB*(index: TGLuint, pname: TGLenum, 
                                   pointer: PGLvoid){.dynlib: dllname, 
    importc: "glGetVertexAttribPointervARB".}
proc glIsProgramARB*(theProgram: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsProgramARB".}
  #***** GL_ARB_window_pos *****//
proc glWindowPos2dARB*(x: TGLdouble, y: TGLdouble){.dynlib: dllname, 
    importc: "glWindowPos2dARB".}
proc glWindowPos2fARB*(x: TGLfloat, y: TGLfloat){.dynlib: dllname, 
    importc: "glWindowPos2fARB".}
proc glWindowPos2iARB*(x: TGLint, y: TGLint){.dynlib: dllname, 
    importc: "glWindowPos2iARB".}
proc glWindowPos2sARB*(x: TGLshort, y: TGLshort){.dynlib: dllname, 
    importc: "glWindowPos2sARB".}
proc glWindowPos2dvARB*(p: PGLdouble){.dynlib: dllname, 
                                       importc: "glWindowPos2dvARB".}
proc glWindowPos2fvARB*(p: PGLfloat){.dynlib: dllname, 
                                      importc: "glWindowPos2fvARB".}
proc glWindowPos2ivARB*(p: PGLint){.dynlib: dllname, 
                                    importc: "glWindowPos2ivARB".}
proc glWindowPos2svARB*(p: PGLshort){.dynlib: dllname, 
                                      importc: "glWindowPos2svARB".}
proc glWindowPos3dARB*(x: TGLdouble, y: TGLdouble, z: TGLdouble){.
    dynlib: dllname, importc: "glWindowPos3dARB".}
proc glWindowPos3fARB*(x: TGLfloat, y: TGLfloat, z: TGLfloat){.dynlib: dllname, 
    importc: "glWindowPos3fARB".}
proc glWindowPos3iARB*(x: TGLint, y: TGLint, z: TGLint){.dynlib: dllname, 
    importc: "glWindowPos3iARB".}
proc glWindowPos3sARB*(x: TGLshort, y: TGLshort, z: TGLshort){.dynlib: dllname, 
    importc: "glWindowPos3sARB".}
proc glWindowPos3dvARB*(p: PGLdouble){.dynlib: dllname, 
                                       importc: "glWindowPos3dvARB".}
proc glWindowPos3fvARB*(p: PGLfloat){.dynlib: dllname, 
                                      importc: "glWindowPos3fvARB".}
proc glWindowPos3ivARB*(p: PGLint){.dynlib: dllname, 
                                    importc: "glWindowPos3ivARB".}
proc glWindowPos3svARB*(p: PGLshort){.dynlib: dllname, 
                                      importc: "glWindowPos3svARB".}
proc glBlendEquationSeparate*(modeRGB: TGLenum, modeAlpha: TGLenum){.
    dynlib: dllname, importc: "glBlendEquationSeparate".}
proc glDrawBuffers*(n: TGLsizei, bufs: PGLenum){.dynlib: dllname, 
    importc: "glDrawBuffers".}
proc glStencilOpSeparate*(face: TGLenum, sfail: TGLenum, dpfail: TGLenum, 
                          dppass: TGLenum){.dynlib: dllname, 
    importc: "glStencilOpSeparate".}
proc glStencilFuncSeparate*(frontfunc: TGLenum, backfunc: TGLenum, 
                            theRef: TGLint, mask: TGLuint){.dynlib: dllname, 
    importc: "glStencilFuncSeparate".}
proc glStencilMaskSeparate*(face: TGLenum, mask: TGLuint){.dynlib: dllname, 
    importc: "glStencilMaskSeparate".}
proc glAttachShader*(theProgram: TGLuint, shader: TGLuint){.dynlib: dllname, 
    importc: "glAttachShader".}
proc glBindAttribLocation*(theProgram: TGLuint, index: TGLuint, name: PGLchar){.
    dynlib: dllname, importc: "glBindAttribLocation".}
proc glCompileShader*(shader: TGLuint){.dynlib: dllname, 
                                        importc: "glCompileShader".}
proc glCreateProgram*(): TGLuint{.dynlib: dllname, importc: "glCreateProgram".}
proc glCreateShader*(thetype: TGLenum): TGLuint{.dynlib: dllname, 
    importc: "glCreateShader".}
proc glDeleteProgram*(theProgram: TGLuint){.dynlib: dllname, 
    importc: "glDeleteProgram".}
proc glDeleteShader*(shader: TGLuint){.dynlib: dllname, 
                                       importc: "glDeleteShader".}
proc glDetachShader*(theProgram: TGLuint, shader: TGLuint){.dynlib: dllname, 
    importc: "glDetachShader".}
proc glDisableVertexAttribArray*(index: TGLuint){.dynlib: dllname, 
    importc: "glDisableVertexAttribArray".}
proc glEnableVertexAttribArray*(index: TGLuint){.dynlib: dllname, 
    importc: "glEnableVertexAttribArray".}
proc glGetActiveAttrib*(theProgram: TGLuint, index: TGLuint, bufSize: TGLsizei, 
                        len: PGLsizei, size: PGLint, thetype: PGLenum, 
                        name: PGLchar){.dynlib: dllname, 
                                        importc: "glGetActiveAttrib".}
proc glGetActiveUniform*(theProgram: TGLuint, index: TGLuint, bufSize: TGLsizei, 
                         len: PGLsizei, size: PGLint, thetype: PGLenum, 
                         name: PGLchar){.dynlib: dllname, 
    importc: "glGetActiveUniform".}
proc glGetAttachedShaders*(theProgram: TGLuint, maxCount: TGLsizei, 
                           count: PGLsizei, obj: PGLuint){.dynlib: dllname, 
    importc: "glGetAttachedShaders".}
proc glGetAttribLocation*(theProgram: TGLuint, name: PGLchar): TGLint{.
    dynlib: dllname, importc: "glGetAttribLocation".}
proc glGetProgramiv*(theProgram: TGLuint, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetProgramiv".}
proc glGetProgramInfoLog*(theProgram: TGLuint, bufSize: TGLsizei, len: PGLsizei, 
                          infoLog: PGLchar){.dynlib: dllname, 
    importc: "glGetProgramInfoLog".}
proc glGetShaderiv*(shader: TGLuint, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetShaderiv".}
proc glGetShaderInfoLog*(shader: TGLuint, bufSize: TGLsizei, len: PGLsizei, 
                         infoLog: PGLchar){.dynlib: dllname, 
    importc: "glGetShaderInfoLog".}
proc glGetShaderSource*(shader: TGLuint, bufSize: TGLsizei, len: PGLsizei, 
                        source: PGLchar){.dynlib: dllname, 
    importc: "glGetShaderSource".}
proc glGetUniformLocation*(theProgram: TGLuint, name: PGLchar): TGLint{.
    dynlib: dllname, importc: "glGetUniformLocation".}
proc glGetUniformfv*(theProgram: TGLuint, location: TGLint, params: PGLfloat){.
    dynlib: dllname, importc: "glGetUniformfv".}
proc glGetUniformiv*(theProgram: TGLuint, location: TGLint, params: PGLint){.
    dynlib: dllname, importc: "glGetUniformiv".}
proc glGetVertexAttribdv*(index: TGLuint, pname: TGLenum, params: PGLdouble){.
    dynlib: dllname, importc: "glGetVertexAttribdv".}
proc glGetVertexAttribfv*(index: TGLuint, pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glGetVertexAttribfv".}
proc glGetVertexAttribiv*(index: TGLuint, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetVertexAttribiv".}
proc glGetVertexAttribPointerv*(index: TGLuint, pname: TGLenum, pointer: PGLvoid){.
    dynlib: dllname, importc: "glGetVertexAttribPointerv".}
proc glIsProgram*(theProgram: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsProgram".}
proc glIsShader*(shader: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsShader".}
proc glLinkProgram*(theProgram: TGLuint){.dynlib: dllname, 
    importc: "glLinkProgram".}
proc glShaderSource*(shader: TGLuint, count: TGLsizei, str: PGLchar, len: PGLint){.
    dynlib: dllname, importc: "glShaderSource".}
proc glUseProgram*(theProgram: TGLuint){.dynlib: dllname, 
    importc: "glUseProgram".}
proc glUniform1f*(location: TGLint, v0: TGLfloat){.dynlib: dllname, 
    importc: "glUniform1f".}
proc glUniform2f*(location: TGLint, v0: TGLfloat, v1: TGLfloat){.
    dynlib: dllname, importc: "glUniform2f".}
proc glUniform3f*(location: TGLint, v0: TGLfloat, v1: TGLfloat, v2: TGLfloat){.
    dynlib: dllname, importc: "glUniform3f".}
proc glUniform4f*(location: TGLint, v0: TGLfloat, v1: TGLfloat, v2: TGLfloat, 
                  v3: TGLfloat){.dynlib: dllname, importc: "glUniform4f".}
proc glUniform1i*(location: TGLint, v0: TGLint){.dynlib: dllname, 
    importc: "glUniform1i".}
proc glUniform2i*(location: TGLint, v0: TGLint, v1: TGLint){.dynlib: dllname, 
    importc: "glUniform2i".}
proc glUniform3i*(location: TGLint, v0: TGLint, v1: TGLint, v2: TGLint){.
    dynlib: dllname, importc: "glUniform3i".}
proc glUniform4i*(location: TGLint, v0: TGLint, v1: TGLint, v2: TGLint, 
                  v3: TGLint){.dynlib: dllname, importc: "glUniform4i".}
proc glUniform1fv*(location: TGLint, count: TGLsizei, value: PGLfloat){.
    dynlib: dllname, importc: "glUniform1fv".}
proc glUniform2fv*(location: TGLint, count: TGLsizei, value: PGLfloat){.
    dynlib: dllname, importc: "glUniform2fv".}
proc glUniform3fv*(location: TGLint, count: TGLsizei, value: PGLfloat){.
    dynlib: dllname, importc: "glUniform3fv".}
proc glUniform4fv*(location: TGLint, count: TGLsizei, value: PGLfloat){.
    dynlib: dllname, importc: "glUniform4fv".}
proc glUniform1iv*(location: TGLint, count: TGLsizei, value: PGLint){.
    dynlib: dllname, importc: "glUniform1iv".}
proc glUniform2iv*(location: TGLint, count: TGLsizei, value: PGLint){.
    dynlib: dllname, importc: "glUniform2iv".}
proc glUniform3iv*(location: TGLint, count: TGLsizei, value: PGLint){.
    dynlib: dllname, importc: "glUniform3iv".}
proc glUniform4iv*(location: TGLint, count: TGLsizei, value: PGLint){.
    dynlib: dllname, importc: "glUniform4iv".}
proc glUniformMatrix2fv*(location: TGLint, count: TGLsizei, 
                         transpose: TGLboolean, value: PGLfloat){.
    dynlib: dllname, importc: "glUniformMatrix2fv".}
proc glUniformMatrix3fv*(location: TGLint, count: TGLsizei, 
                         transpose: TGLboolean, value: PGLfloat){.
    dynlib: dllname, importc: "glUniformMatrix3fv".}
proc glUniformMatrix4fv*(location: TGLint, count: TGLsizei, 
                         transpose: TGLboolean, value: PGLfloat){.
    dynlib: dllname, importc: "glUniformMatrix4fv".}
proc glValidateProgram*(theProgram: TGLuint){.dynlib: dllname, 
    importc: "glValidateProgram".}
proc glVertexAttrib1d*(index: TGLuint, x: TGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib1d".}
proc glVertexAttrib1dv*(index: TGLuint, v: PGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib1dv".}
proc glVertexAttrib1f*(index: TGLuint, x: TGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib1f".}
proc glVertexAttrib1fv*(index: TGLuint, v: PGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib1fv".}
proc glVertexAttrib1s*(index: TGLuint, x: TGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib1s".}
proc glVertexAttrib1sv*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib1sv".}
proc glVertexAttrib2d*(index: TGLuint, x: TGLdouble, y: TGLdouble){.
    dynlib: dllname, importc: "glVertexAttrib2d".}
proc glVertexAttrib2dv*(index: TGLuint, v: PGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib2dv".}
proc glVertexAttrib2f*(index: TGLuint, x: TGLfloat, y: TGLfloat){.
    dynlib: dllname, importc: "glVertexAttrib2f".}
proc glVertexAttrib2fv*(index: TGLuint, v: PGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib2fv".}
proc glVertexAttrib2s*(index: TGLuint, x: TGLshort, y: TGLshort){.
    dynlib: dllname, importc: "glVertexAttrib2s".}
proc glVertexAttrib2sv*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib2sv".}
proc glVertexAttrib3d*(index: TGLuint, x: TGLdouble, y: TGLdouble, z: TGLdouble){.
    dynlib: dllname, importc: "glVertexAttrib3d".}
proc glVertexAttrib3dv*(index: TGLuint, v: PGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib3dv".}
proc glVertexAttrib3f*(index: TGLuint, x: TGLfloat, y: TGLfloat, z: TGLfloat){.
    dynlib: dllname, importc: "glVertexAttrib3f".}
proc glVertexAttrib3fv*(index: TGLuint, v: PGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib3fv".}
proc glVertexAttrib3s*(index: TGLuint, x: TGLshort, y: TGLshort, z: TGLshort){.
    dynlib: dllname, importc: "glVertexAttrib3s".}
proc glVertexAttrib3sv*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib3sv".}
proc glVertexAttrib4Nbv*(index: TGLuint, v: PGLbyte){.dynlib: dllname, 
    importc: "glVertexAttrib4Nbv".}
proc glVertexAttrib4Niv*(index: TGLuint, v: PGLint){.dynlib: dllname, 
    importc: "glVertexAttrib4Niv".}
proc glVertexAttrib4Nsv*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib4Nsv".}
proc glVertexAttrib4Nub*(index: TGLuint, x: TGLubyte, y: TGLubyte, z: TGLubyte, 
                         w: TGLubyte){.dynlib: dllname, 
                                       importc: "glVertexAttrib4Nub".}
proc glVertexAttrib4Nubv*(index: TGLuint, v: PGLubyte){.dynlib: dllname, 
    importc: "glVertexAttrib4Nubv".}
proc glVertexAttrib4Nuiv*(index: TGLuint, v: PGLuint){.dynlib: dllname, 
    importc: "glVertexAttrib4Nuiv".}
proc glVertexAttrib4Nusv*(index: TGLuint, v: PGLushort){.dynlib: dllname, 
    importc: "glVertexAttrib4Nusv".}
proc glVertexAttrib4bv*(index: TGLuint, v: PGLbyte){.dynlib: dllname, 
    importc: "glVertexAttrib4bv".}
proc glVertexAttrib4d*(index: TGLuint, x: TGLdouble, y: TGLdouble, z: TGLdouble, 
                       w: TGLdouble){.dynlib: dllname, 
                                      importc: "glVertexAttrib4d".}
proc glVertexAttrib4dv*(index: TGLuint, v: PGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib4dv".}
proc glVertexAttrib4f*(index: TGLuint, x: TGLfloat, y: TGLfloat, z: TGLfloat, 
                       w: TGLfloat){.dynlib: dllname, 
                                     importc: "glVertexAttrib4f".}
proc glVertexAttrib4fv*(index: TGLuint, v: PGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib4fv".}
proc glVertexAttrib4iv*(index: TGLuint, v: PGLint){.dynlib: dllname, 
    importc: "glVertexAttrib4iv".}
proc glVertexAttrib4s*(index: TGLuint, x: TGLshort, y: TGLshort, z: TGLshort, 
                       w: TGLshort){.dynlib: dllname, 
                                     importc: "glVertexAttrib4s".}
proc glVertexAttrib4sv*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib4sv".}
proc glVertexAttrib4ubv*(index: TGLuint, v: PGLubyte){.dynlib: dllname, 
    importc: "glVertexAttrib4ubv".}
proc glVertexAttrib4uiv*(index: TGLuint, v: PGLuint){.dynlib: dllname, 
    importc: "glVertexAttrib4uiv".}
proc glVertexAttrib4usv*(index: TGLuint, v: PGLushort){.dynlib: dllname, 
    importc: "glVertexAttrib4usv".}
proc glVertexAttribPointer*(index: TGLuint, size: TGLint, thetype: TGLenum, 
                            normalized: TGLboolean, stride: TGLsizei, 
                            pointer: PGLvoid){.dynlib: dllname, 
    importc: "glVertexAttribPointer".}
const 
  GlConstantColor* = 0x00008001
  GlOneMinusConstantColor* = 0x00008002
  GlConstantAlpha* = 0x00008003
  GlOneMinusConstantAlpha* = 0x00008004
  constGLBLENDCOLOR* = 0x00008005
  GlFuncAdd* = 0x00008006
  GlMin* = 0x00008007
  GlMax* = 0x00008008
  constGLBLENDEQUATION* = 0x00008009
  GlFuncSubtract* = 0x0000800A
  GlFuncReverseSubtract* = 0x0000800B
  GlConvolution1d* = 0x00008010
  GlConvolution2d* = 0x00008011
  GlSeparable2d* = 0x00008012
  GlConvolutionBorderMode* = 0x00008013
  GlConvolutionFilterScale* = 0x00008014
  GlConvolutionFilterBias* = 0x00008015
  GlReduce* = 0x00008016
  GlConvolutionFormat* = 0x00008017
  GlConvolutionWidth* = 0x00008018
  GlConvolutionHeight* = 0x00008019
  GlMaxConvolutionWidth* = 0x0000801A
  GlMaxConvolutionHeight* = 0x0000801B
  GlPostConvolutionRedScale* = 0x0000801C
  GlPostConvolutionGreenScale* = 0x0000801D
  GlPostConvolutionBlueScale* = 0x0000801E
  GlPostConvolutionAlphaScale* = 0x0000801F
  GlPostConvolutionRedBias* = 0x00008020
  GlPostConvolutionGreenBias* = 0x00008021
  GlPostConvolutionBlueBias* = 0x00008022
  GlPostConvolutionAlphaBias* = 0x00008023
  constGLHISTOGRAM* = 0x00008024
  GlProxyHistogram* = 0x00008025
  GlHistogramWidth* = 0x00008026
  GlHistogramFormat* = 0x00008027
  GlHistogramRedSize* = 0x00008028
  GlHistogramGreenSize* = 0x00008029
  GlHistogramBlueSize* = 0x0000802A
  GlHistogramAlphaSize* = 0x0000802B
  GlHistogramLuminanceSize* = 0x0000802C
  GlHistogramSink* = 0x0000802D
  constGLMINMAX* = 0x0000802E
  GlMinmaxFormat* = 0x0000802F
  GlMinmaxSink* = 0x00008030
  GlTableTooLarge* = 0x00008031
  GlColorMatrix* = 0x000080B1
  GlColorMatrixStackDepth* = 0x000080B2
  GlMaxColorMatrixStackDepth* = 0x000080B3
  GlPostColorMatrixRedScale* = 0x000080B4
  GlPostColorMatrixGreenScale* = 0x000080B5
  GlPostColorMatrixBlueScale* = 0x000080B6
  GlPostColorMatrixAlphaScale* = 0x000080B7
  GlPostColorMatrixRedBias* = 0x000080B8
  GlPostColorMatrixGreenBias* = 0x000080B9
  GlPostColorMatrixBlueBias* = 0x000080BA
  GlPostColorMatixAlphaBias* = 0x000080BB
  constGLCOLORTABLE* = 0x000080D0
  GlPostConvolutionColorTable* = 0x000080D1
  GlPostColorMatrixColorTable* = 0x000080D2
  GlProxyColorTable* = 0x000080D3
  GlProxyPostConvolutionColorTable* = 0x000080D4
  GlProxyPostColorMatrixColorTable* = 0x000080D5
  GlColorTableScale* = 0x000080D6
  GlColorTableBias* = 0x000080D7
  GlColorTableFormat* = 0x000080D8
  GlColorTableWidth* = 0x000080D9
  GlColorTableRedSize* = 0x000080DA
  GlColorTableGreenSize* = 0x000080DB
  GlColorTableBlueSize* = 0x000080DC
  GlColorTableAlphaSize* = 0x000080DD
  GlColorTableLuminanceSize* = 0x000080DE
  GlColorTableIntensitySize* = 0x000080DF
  GlIgnoreBorder* = 0x00008150
  GlConstantBorder* = 0x00008151
  GlWrapBorder* = 0x00008152
  GlReplicateBorder* = 0x00008153
  GlConvolutionBorderColor* = 0x00008154

proc glActiveTexture*(texture: TGLenum){.dynlib: dllname, 
    importc: "glActiveTexture".}
proc glClientActiveTexture*(texture: TGLenum){.dynlib: dllname, 
    importc: "glClientActiveTexture".}
proc glMultiTexCoord1d*(target: TGLenum, s: TGLdouble){.dynlib: dllname, 
    importc: "glMultiTexCoord1d".}
proc glMultiTexCoord1dv*(target: TGLenum, v: PGLdouble){.dynlib: dllname, 
    importc: "glMultiTexCoord1dv".}
proc glMultiTexCoord1f*(target: TGLenum, s: TGLfloat){.dynlib: dllname, 
    importc: "glMultiTexCoord1f".}
proc glMultiTexCoord1fv*(target: TGLenum, v: PGLfloat){.dynlib: dllname, 
    importc: "glMultiTexCoord1fv".}
proc glMultiTexCoord1i*(target: TGLenum, s: TGLint){.dynlib: dllname, 
    importc: "glMultiTexCoord1i".}
proc glMultiTexCoord1iv*(target: TGLenum, v: PGLint){.dynlib: dllname, 
    importc: "glMultiTexCoord1iv".}
proc glMultiTexCoord1s*(target: TGLenum, s: TGLshort){.dynlib: dllname, 
    importc: "glMultiTexCoord1s".}
proc glMultiTexCoord1sv*(target: TGLenum, v: PGLshort){.dynlib: dllname, 
    importc: "glMultiTexCoord1sv".}
proc glMultiTexCoord2d*(target: TGLenum, s: TGLdouble, t: TGLdouble){.
    dynlib: dllname, importc: "glMultiTexCoord2d".}
proc glMultiTexCoord2dv*(target: TGLenum, v: PGLdouble){.dynlib: dllname, 
    importc: "glMultiTexCoord2dv".}
proc glMultiTexCoord2f*(target: TGLenum, s: TGLfloat, t: TGLfloat){.
    dynlib: dllname, importc: "glMultiTexCoord2f".}
proc glMultiTexCoord2fv*(target: TGLenum, v: PGLfloat){.dynlib: dllname, 
    importc: "glMultiTexCoord2fv".}
proc glMultiTexCoord2i*(target: TGLenum, s: TGLint, t: TGLint){.dynlib: dllname, 
    importc: "glMultiTexCoord2i".}
proc glMultiTexCoord2iv*(target: TGLenum, v: PGLint){.dynlib: dllname, 
    importc: "glMultiTexCoord2iv".}
proc glMultiTexCoord2s*(target: TGLenum, s: TGLshort, t: TGLshort){.
    dynlib: dllname, importc: "glMultiTexCoord2s".}
proc glMultiTexCoord2sv*(target: TGLenum, v: PGLshort){.dynlib: dllname, 
    importc: "glMultiTexCoord2sv".}
proc glMultiTexCoord3d*(target: TGLenum, s: TGLdouble, t: TGLdouble, 
                        r: TGLdouble){.dynlib: dllname, 
                                       importc: "glMultiTexCoord3d".}
proc glMultiTexCoord3dv*(target: TGLenum, v: PGLdouble){.dynlib: dllname, 
    importc: "glMultiTexCoord3dv".}
proc glMultiTexCoord3f*(target: TGLenum, s: TGLfloat, t: TGLfloat, r: TGLfloat){.
    dynlib: dllname, importc: "glMultiTexCoord3f".}
proc glMultiTexCoord3fv*(target: TGLenum, v: PGLfloat){.dynlib: dllname, 
    importc: "glMultiTexCoord3fv".}
proc glMultiTexCoord3i*(target: TGLenum, s: TGLint, t: TGLint, r: TGLint){.
    dynlib: dllname, importc: "glMultiTexCoord3i".}
proc glMultiTexCoord3iv*(target: TGLenum, v: PGLint){.dynlib: dllname, 
    importc: "glMultiTexCoord3iv".}
proc glMultiTexCoord3s*(target: TGLenum, s: TGLshort, t: TGLshort, r: TGLshort){.
    dynlib: dllname, importc: "glMultiTexCoord3s".}
proc glMultiTexCoord3sv*(target: TGLenum, v: PGLshort){.dynlib: dllname, 
    importc: "glMultiTexCoord3sv".}
proc glMultiTexCoord4d*(target: TGLenum, s: TGLdouble, t: TGLdouble, 
                        r: TGLdouble, q: TGLdouble){.dynlib: dllname, 
    importc: "glMultiTexCoord4d".}
proc glMultiTexCoord4dv*(target: TGLenum, v: PGLdouble){.dynlib: dllname, 
    importc: "glMultiTexCoord4dv".}
proc glMultiTexCoord4f*(target: TGLenum, s: TGLfloat, t: TGLfloat, r: TGLfloat, 
                        q: TGLfloat){.dynlib: dllname, 
                                      importc: "glMultiTexCoord4f".}
proc glMultiTexCoord4fv*(target: TGLenum, v: PGLfloat){.dynlib: dllname, 
    importc: "glMultiTexCoord4fv".}
proc glMultiTexCoord4i*(target: TGLenum, s: TGLint, t: TGLint, r: TGLint, 
                        q: TGLint){.dynlib: dllname, 
                                    importc: "glMultiTexCoord4i".}
proc glMultiTexCoord4iv*(target: TGLenum, v: PGLint){.dynlib: dllname, 
    importc: "glMultiTexCoord4iv".}
proc glMultiTexCoord4s*(target: TGLenum, s: TGLshort, t: TGLshort, r: TGLshort, 
                        q: TGLshort){.dynlib: dllname, 
                                      importc: "glMultiTexCoord4s".}
proc glMultiTexCoord4sv*(target: TGLenum, v: PGLshort){.dynlib: dllname, 
    importc: "glMultiTexCoord4sv".}
proc glLoadTransposeMatrixf*(m: PGLfloat){.dynlib: dllname, 
    importc: "glLoadTransposeMatrixf".}
proc glLoadTransposeMatrixd*(m: PGLdouble){.dynlib: dllname, 
    importc: "glLoadTransposeMatrixd".}
proc glMultTransposeMatrixf*(m: PGLfloat){.dynlib: dllname, 
    importc: "glMultTransposeMatrixf".}
proc glMultTransposeMatrixd*(m: PGLdouble){.dynlib: dllname, 
    importc: "glMultTransposeMatrixd".}
proc glSampleCoverage*(value: TGLclampf, invert: TGLboolean){.dynlib: dllname, 
    importc: "glSampleCoverage".}
proc glCompressedTexImage3D*(target: TGLenum, level: TGLint, 
                             internalformat: TGLenum, width: TGLsizei, 
                             height: TGLsizei, depth: TGLsizei, border: TGLint, 
                             imageSize: TGLsizei, data: PGLvoid){.
    dynlib: dllname, importc: "glCompressedTexImage3D".}
proc glCompressedTexImage2D*(target: TGLenum, level: TGLint, 
                             internalformat: TGLenum, width: TGLsizei, 
                             height: TGLsizei, border: TGLint, 
                             imageSize: TGLsizei, data: PGLvoid){.
    dynlib: dllname, importc: "glCompressedTexImage2D".}
proc glCompressedTexImage1D*(target: TGLenum, level: TGLint, 
                             internalformat: TGLenum, width: TGLsizei, 
                             border: TGLint, imageSize: TGLsizei, data: PGLvoid){.
    dynlib: dllname, importc: "glCompressedTexImage1D".}
proc glCompressedTexSubImage3D*(target: TGLenum, level: TGLint, xoffset: TGLint, 
                                yoffset: TGLint, zoffset: TGLint, 
                                width: TGLsizei, height: TGLsizei, 
                                depth: TGLsizei, format: TGLenum, 
                                imageSize: TGLsizei, data: PGLvoid){.
    dynlib: dllname, importc: "glCompressedTexSubImage3D".}
proc glCompressedTexSubImage2D*(target: TGLenum, level: TGLint, xoffset: TGLint, 
                                yoffset: TGLint, width: TGLsizei, 
                                height: TGLsizei, format: TGLenum, 
                                imageSize: TGLsizei, data: PGLvoid){.
    dynlib: dllname, importc: "glCompressedTexSubImage2D".}
proc glCompressedTexSubImage1D*(target: TGLenum, level: TGLint, xoffset: TGLint, 
                                width: TGLsizei, format: TGLenum, 
                                imageSize: TGLsizei, data: PGLvoid){.
    dynlib: dllname, importc: "glCompressedTexSubImage1D".}
proc glGetCompressedTexImage*(target: TGLenum, level: TGLint, img: PGLvoid){.
    dynlib: dllname, importc: "glGetCompressedTexImage".}
  #***** GL_version_1_3 *****//
const 
  GlTexture0* = 0x000084C0
  GlTexture1* = 0x000084C1
  GlTexture2* = 0x000084C2
  GlTexture3* = 0x000084C3
  GlTexture4* = 0x000084C4
  GlTexture5* = 0x000084C5
  GlTexture6* = 0x000084C6
  GlTexture7* = 0x000084C7
  GlTexture8* = 0x000084C8
  GlTexture9* = 0x000084C9
  GlTexture10* = 0x000084CA
  GlTexture11* = 0x000084CB
  GlTexture12* = 0x000084CC
  GlTexture13* = 0x000084CD
  GlTexture14* = 0x000084CE
  GlTexture15* = 0x000084CF
  GlTexture16* = 0x000084D0
  GlTexture17* = 0x000084D1
  GlTexture18* = 0x000084D2
  GlTexture19* = 0x000084D3
  GlTexture20* = 0x000084D4
  GlTexture21* = 0x000084D5
  GlTexture22* = 0x000084D6
  GlTexture23* = 0x000084D7
  GlTexture24* = 0x000084D8
  GlTexture25* = 0x000084D9
  GlTexture26* = 0x000084DA
  GlTexture27* = 0x000084DB
  GlTexture28* = 0x000084DC
  GlTexture29* = 0x000084DD
  GlTexture30* = 0x000084DE
  GlTexture31* = 0x000084DF
  constGLACTIVETEXTURE* = 0x000084E0
  constGLCLIENTACTIVETEXTURE* = 0x000084E1
  GlMaxTextureUnits* = 0x000084E2
  GlTransposeModelviewMatrix* = 0x000084E3
  GlTransposeProjectionMatrix* = 0x000084E4
  GlTransposeTextureMatrix* = 0x000084E5
  GlTransposeColorMatrix* = 0x000084E6
  GlMultisample* = 0x0000809D
  GlSampleAlphaToCoverage* = 0x0000809E
  GlSampleAlphaToOne* = 0x0000809F
  constGLSAMPLECOVERAGE* = 0x000080A0
  GlSampleBuffers* = 0x000080A8
  GlSamples* = 0x000080A9
  GlSampleCoverageValue* = 0x000080AA
  GlSampleCoverageInvert* = 0x000080AB
  GlMultisampleBit* = 0x20000000
  GlNormalMap* = 0x00008511
  GlReflectionMap* = 0x00008512
  GlTextureCubeMap* = 0x00008513
  GlTextureBindingCubeMap* = 0x00008514
  GlTextureCubeMapPositiveX* = 0x00008515
  GlTextureCubeMapNegativeX* = 0x00008516
  GlTextureCubeMapPositiveY* = 0x00008517
  GlTextureCubeMapNegativeY* = 0x00008518
  GlTextureCubeMapPositiveZ* = 0x00008519
  GlTextureCubeMapNegativeZ* = 0x0000851A
  GlProxyTextureCubeMap* = 0x0000851B
  GlMaxCubeMapTextureSize* = 0x0000851C
  GlCompressedAlpha* = 0x000084E9
  GlCompressedLuminance* = 0x000084EA
  GlCompressedLuminanceAlpha* = 0x000084EB
  GlCompressedIntensity* = 0x000084EC
  GlCompressedRgb* = 0x000084ED
  GlCompressedRgba* = 0x000084EE
  GlTextureCompressionHint* = 0x000084EF
  GlTextureCompressedImageSize* = 0x000086A0
  GlTextureCompressed* = 0x000086A1
  GlNumCompressedTextureFormats* = 0x000086A2
  GlCompressedTextureFormats* = 0x000086A3
  GlClampToBorder* = 0x0000812D
  GlClampToBorderSgis* = 0x0000812D
  GlCombine* = 0x00008570
  GlCombineRgb* = 0x00008571
  GlCombineAlpha* = 0x00008572
  GlSource0Rgb* = 0x00008580
  GlSource1Rgb* = 0x00008581
  GlSource2Rgb* = 0x00008582
  GlSource0Alpha* = 0x00008588
  GlSource1Alpha* = 0x00008589
  GlSource2Alpha* = 0x0000858A
  GlOperand0Rgb* = 0x00008590
  GlOperand1Rgb* = 0x00008591
  GlOperand2Rgb* = 0x00008592
  GlOperand0Alpha* = 0x00008598
  GlOperand1Alpha* = 0x00008599
  GlOperand2Alpha* = 0x0000859A
  GlRgbScale* = 0x00008573
  GlAddSigned* = 0x00008574
  GlInterpolate* = 0x00008575
  GlSubtract* = 0x000084E7
  GlConstant* = 0x00008576
  GlPrimaryColor* = 0x00008577
  GlPrevious* = 0x00008578
  GlDot3Rgb* = 0x000086AE
  GlDot3Rgba* = 0x000086AF

const 
  GlTexture0Arb* = 0x000084C0
  GlTexture1Arb* = 0x000084C1
  GlTexture2Arb* = 0x000084C2
  GlTexture3Arb* = 0x000084C3
  GlTexture4Arb* = 0x000084C4
  GlTexture5Arb* = 0x000084C5
  GlTexture6Arb* = 0x000084C6
  GlTexture7Arb* = 0x000084C7
  GlTexture8Arb* = 0x000084C8
  GlTexture9Arb* = 0x000084C9
  GlTexture10Arb* = 0x000084CA
  GlTexture11Arb* = 0x000084CB
  GlTexture12Arb* = 0x000084CC
  GlTexture13Arb* = 0x000084CD
  GlTexture14Arb* = 0x000084CE
  GlTexture15Arb* = 0x000084CF
  GlTexture16Arb* = 0x000084D0
  GlTexture17Arb* = 0x000084D1
  GlTexture18Arb* = 0x000084D2
  GlTexture19Arb* = 0x000084D3
  GlTexture20Arb* = 0x000084D4
  GlTexture21Arb* = 0x000084D5
  GlTexture22Arb* = 0x000084D6
  GlTexture23Arb* = 0x000084D7
  GlTexture24Arb* = 0x000084D8
  GlTexture25Arb* = 0x000084D9
  GlTexture26Arb* = 0x000084DA
  GlTexture27Arb* = 0x000084DB
  GlTexture28Arb* = 0x000084DC
  GlTexture29Arb* = 0x000084DD
  GlTexture30Arb* = 0x000084DE
  GlTexture31Arb* = 0x000084DF
  constGLACTIVETEXTUREARB* = 0x000084E0
  constGLCLIENTACTIVETEXTUREARB* = 0x000084E1
  GlMaxTextureUnitsArb* = 0x000084E2
  #***** GL_ARB_transpose_matrix *****//

const 
  GlTransposeModelviewMatrixArb* = 0x000084E3
  GlTransposeProjectionMatrixArb* = 0x000084E4
  GlTransposeTextureMatrixArb* = 0x000084E5
  GlTransposeColorMatrixArb* = 0x000084E6

proc glLoadTransposeMatrixfARB*(m: PGLfloat){.dynlib: dllname, 
    importc: "glLoadTransposeMatrixfARB".}
proc glLoadTransposeMatrixdARB*(m: PGLdouble){.dynlib: dllname, 
    importc: "glLoadTransposeMatrixdARB".}
proc glMultTransposeMatrixfARB*(m: PGLfloat){.dynlib: dllname, 
    importc: "glMultTransposeMatrixfARB".}
proc glMultTransposeMatrixdARB*(m: PGLdouble){.dynlib: dllname, 
    importc: "glMultTransposeMatrixdARB".}
const 
  WglSampleBuffersArb* = 0x00002041
  WglSamplesArb* = 0x00002042
  GlMultisampleArb* = 0x0000809D
  GlSampleAlphaToCoverageArb* = 0x0000809E
  GlSampleAlphaToOneArb* = 0x0000809F
  constGLSAMPLECOVERAGEARB* = 0x000080A0
  GlMultisampleBitArb* = 0x20000000
  GlSampleBuffersArb* = 0x000080A8
  GlSamplesArb* = 0x000080A9
  GlSampleCoverageValueArb* = 0x000080AA
  GlSampleCoverageInvertArb* = 0x000080AB

const 
  GlNormalMapArb* = 0x00008511
  GlReflectionMapArb* = 0x00008512
  GlTextureCubeMapArb* = 0x00008513
  GlTextureBindingCubeMapArb* = 0x00008514
  GlTextureCubeMapPositiveXArb* = 0x00008515
  GlTextureCubeMapNegativeXArb* = 0x00008516
  GlTextureCubeMapPositiveYArb* = 0x00008517
  GlTextureCubeMapNegativeYArb* = 0x00008518
  GlTextureCubeMapPositiveZArb* = 0x00008519
  GlTextureCubeMapNegativeZArb* = 0x0000851A
  GlProxyTextureCubeMapArb* = 0x0000851B
  GlMaxCubeMapTextureSizeArb* = 0x0000851C

const 
  GlDepthComponent16Arb* = 0x000081A5
  GlDepthComponent24Arb* = 0x000081A6
  GlDepthComponent32Arb* = 0x000081A7
  GlTextureDepthSizeArb* = 0x0000884A
  GlDepthTextureModeArb* = 0x0000884B
  #***** GL_ARB_point_parameters *****//

const 
  GlPointSizeMinArb* = 0x00008126
  GlPointSizeMaxArb* = 0x00008127
  GlPointFadeThresholdSizeArb* = 0x00008128
  GlPointDistanceAttenuationArb* = 0x00008129

proc glPointParameterfARB*(pname: TGLenum, param: TGLfloat){.dynlib: dllname, 
    importc: "glPointParameterfARB".}
proc glPointParameterfvARB*(pname: TGLenum, params: PGLfloat){.dynlib: dllname, 
    importc: "glPointParameterfvARB".}
const 
  GlTextureCompareModeArb* = 0x0000884C
  GlTextureCompareFuncArb* = 0x0000884D
  GlCompareRToTextureArb* = 0x0000884E

const 
  GlTextureCompareFailValueArb* = 0x000080BF
  GlClampToBorderArb* = 0x0000812D

const 
  GlCompressedAlphaArb* = 0x000084E9
  GlCompressedLuminanceArb* = 0x000084EA
  GlCompressedLuminanceAlphaArb* = 0x000084EB
  GlCompressedIntensityArb* = 0x000084EC
  GlCompressedRgbArb* = 0x000084ED
  GlCompressedRgbaArb* = 0x000084EE
  GlTextureCompressionHintArb* = 0x000084EF
  GlTextureCompressedImageSizeArb* = 0x000086A0
  GlTextureCompressedArb* = 0x000086A1
  GlNumCompressedTextureFormatsArb* = 0x000086A2
  GlCompressedTextureFormatsArb* = 0x000086A3

proc glCompressedTexImage3DARB*(target: TGLenum, level: TGLint, 
                                internalformat: TGLenum, width: TGLsizei, 
                                height: TGLsizei, depth: TGLsizei, 
                                border: TGLint, imageSize: TGLsizei, 
                                data: PGLvoid){.dynlib: dllname, 
    importc: "glCompressedTexImage3DARB".}
proc glCompressedTexImage2DARB*(target: TGLenum, level: TGLint, 
                                internalformat: TGLenum, width: TGLsizei, 
                                height: TGLsizei, border: TGLint, 
                                imageSize: TGLsizei, data: PGLvoid){.
    dynlib: dllname, importc: "glCompressedTexImage2DARB".}
proc glCompressedTexImage1DARB*(target: TGLenum, level: TGLint, 
                                internalformat: TGLenum, width: TGLsizei, 
                                border: TGLint, imageSize: TGLsizei, 
                                data: PGLvoid){.dynlib: dllname, 
    importc: "glCompressedTexImage1DARB".}
proc glCompressedTexSubImage3DARB*(target: TGLenum, level: TGLint, 
                                   xoffset: TGLint, yoffset: TGLint, 
                                   zoffset: TGLint, width: TGLsizei, 
                                   height: TGLsizei, depth: TGLsizei, 
                                   format: TGLenum, imageSize: TGLsizei, 
                                   data: PGLvoid){.dynlib: dllname, 
    importc: "glCompressedTexSubImage3DARB".}
proc glCompressedTexSubImage2DARB*(target: TGLenum, level: TGLint, 
                                   xoffset: TGLint, yoffset: TGLint, 
                                   width: TGLsizei, height: TGLsizei, 
                                   format: TGLenum, imageSize: TGLsizei, 
                                   data: PGLvoid){.dynlib: dllname, 
    importc: "glCompressedTexSubImage2DARB".}
proc glCompressedTexSubImage1DARB*(target: TGLenum, level: TGLint, 
                                   xoffset: TGLint, width: TGLsizei, 
                                   format: TGLenum, imageSize: TGLsizei, 
                                   data: PGLvoid){.dynlib: dllname, 
    importc: "glCompressedTexSubImage1DARB".}
proc glGetCompressedTexImageARB*(target: TGLenum, lod: TGLint, img: PGLvoid){.
    dynlib: dllname, importc: "glGetCompressedTexImageARB".}
  #***** GL_ARB_texture_env_combine *****//
const 
  GlCombineArb* = 0x00008570
  GlCombineRgbArb* = 0x00008571
  GlCombineAlphaArb* = 0x00008572
  GlSource0RgbArb* = 0x00008580
  GlSource1RgbArb* = 0x00008581
  GlSource2RgbArb* = 0x00008582
  GlSource0AlphaArb* = 0x00008588
  GlSource1AlphaArb* = 0x00008589
  GlSource2AlphaArb* = 0x0000858A
  GlOperand0RgbArb* = 0x00008590
  GlOperand1RgbArb* = 0x00008591
  GlOperand2RgbArb* = 0x00008592
  GlOperand0AlphaArb* = 0x00008598
  GlOperand1AlphaArb* = 0x00008599
  GlOperand2AlphaArb* = 0x0000859A
  GlRgbScaleArb* = 0x00008573
  GlAddSignedArb* = 0x00008574
  GlInterpolateArb* = 0x00008575
  GlSubtractArb* = 0x000084E7
  GlConstantArb* = 0x00008576
  GlPrimaryColorArb* = 0x00008577
  GlPreviousArb* = 0x00008578
  #***** GL_ARB_texture_env_crossbar *****//
  #***** GL_ARB_texture_env_dot3 *****//

const 
  GlDot3RgbArb* = 0x000086AE
  GlDot3RgbaArb* = 0x000086AF
  #***** GL_ARB_texture_mirrored_repeat *****//

const 
  GlMirroredRepeatArb* = 0x00008370
  #***** GL_ARB_vertex_blend *****//

const 
  GlMaxVertexUnitsArb* = 0x000086A4
  GlActiveVertexUnitsArb* = 0x000086A5
  GlWeightSumUnityArb* = 0x000086A6
  constGLVERTEXBLENDARB* = 0x000086A7
  GlModelview0Arb* = 0x00001700
  GlModelview1Arb* = 0x0000850A
  GlModelview2Arb* = 0x00008722
  GlModelview3Arb* = 0x00008723
  GlModelview4Arb* = 0x00008724
  GlModelview5Arb* = 0x00008725
  GlModelview6Arb* = 0x00008726
  GlModelview7Arb* = 0x00008727
  GlModelview8Arb* = 0x00008728
  GlModelview9Arb* = 0x00008729
  GlModelview10Arb* = 0x0000872A
  GlModelview11Arb* = 0x0000872B
  GlModelview12Arb* = 0x0000872C
  GlModelview13Arb* = 0x0000872D
  GlModelview14Arb* = 0x0000872E
  GlModelview15Arb* = 0x0000872F
  GlModelview16Arb* = 0x00008730
  GlModelview17Arb* = 0x00008731
  GlModelview18Arb* = 0x00008732
  GlModelview19Arb* = 0x00008733
  GlModelview20Arb* = 0x00008734
  GlModelview21Arb* = 0x00008735
  GlModelview22Arb* = 0x00008736
  GlModelview23Arb* = 0x00008737
  GlModelview24Arb* = 0x00008738
  GlModelview25Arb* = 0x00008739
  GlModelview26Arb* = 0x0000873A
  GlModelview27Arb* = 0x0000873B
  GlModelview28Arb* = 0x0000873C
  GlModelview29Arb* = 0x0000873D
  GlModelview30Arb* = 0x0000873E
  GlModelview31Arb* = 0x0000873F
  GlCurrentWeightArb* = 0x000086A8
  GlWeightArrayTypeArb* = 0x000086A9
  GlWeightArrayStrideArb* = 0x000086AA
  GlWeightArraySizeArb* = 0x000086AB
  GlWeightArrayPointerArb* = 0x000086AC
  GlWeightArrayArb* = 0x000086AD

const 
  GlVertexProgramArb* = 0x00008620
  GlVertexProgramPointSizeArb* = 0x00008642
  GlVertexProgramTwoSideArb* = 0x00008643
  GlColorSumArb* = 0x00008458
  GlProgramFormatAsciiArb* = 0x00008875
  GlVertexAttribArrayEnabledArb* = 0x00008622
  GlVertexAttribArraySizeArb* = 0x00008623
  GlVertexAttribArrayStrideArb* = 0x00008624
  GlVertexAttribArrayTypeArb* = 0x00008625
  GlVertexAttribArrayNormalizedArb* = 0x0000886A
  GlCurrentVertexAttribArb* = 0x00008626
  GlVertexAttribArrayPointerArb* = 0x00008645
  GlProgramLengthArb* = 0x00008627
  GlProgramFormatArb* = 0x00008876
  GlProgramBindingArb* = 0x00008677
  GlProgramInstructionsArb* = 0x000088A0
  GlMaxProgramInstructionsArb* = 0x000088A1
  GlProgramNativeInstructionsArb* = 0x000088A2
  GlMaxProgramNativeInstructionsArb* = 0x000088A3
  GlProgramTemporariesArb* = 0x000088A4
  GlMaxProgramTemporariesArb* = 0x000088A5
  GlProgramNativeTemporariesArb* = 0x000088A6
  GlMaxProgramNativeTemporariesArb* = 0x000088A7
  GlProgramParametersArb* = 0x000088A8
  GlMaxProgramParametersArb* = 0x000088A9
  GlProgramNativeParametersArb* = 0x000088AA
  GlMaxProgramNativeParametersArb* = 0x000088AB
  GlProgramAttribsArb* = 0x000088AC
  GlMaxProgramAttribsArb* = 0x000088AD
  GlProgramNativeAttribsArb* = 0x000088AE
  GlMaxProgramNativeAttribsArb* = 0x000088AF
  GlProgramAddressRegistersArb* = 0x000088B0
  GlMaxProgramAddressRegistersArb* = 0x000088B1
  GlProgramNativeAddressRegistersArb* = 0x000088B2
  GlMaxProgramNativeAddressRegistersArb* = 0x000088B3
  GlMaxProgramLocalParametersArb* = 0x000088B4
  GlMaxProgramEnvParametersArb* = 0x000088B5
  GlProgramUnderNativeLimitsArb* = 0x000088B6
  constGLPROGRAMSTRINGARB* = 0x00008628
  GlProgramErrorPositionArb* = 0x0000864B
  GlCurrentMatrixArb* = 0x00008641
  GlTransposeCurrentMatrixArb* = 0x000088B7
  GlCurrentMatrixStackDepthArb* = 0x00008640
  GlMaxVertexAttribsArb* = 0x00008869
  GlMaxProgramMatricesArb* = 0x0000862F
  GlMaxProgramMatrixStackDepthArb* = 0x0000862E
  GlProgramErrorStringArb* = 0x00008874
  GlMatrix0Arb* = 0x000088C0
  GlMatrix1Arb* = 0x000088C1
  GlMatrix2Arb* = 0x000088C2
  GlMatrix3Arb* = 0x000088C3
  GlMatrix4Arb* = 0x000088C4
  GlMatrix5Arb* = 0x000088C5
  GlMatrix6Arb* = 0x000088C6
  GlMatrix7Arb* = 0x000088C7
  GlMatrix8Arb* = 0x000088C8
  GlMatrix9Arb* = 0x000088C9
  GlMatrix10Arb* = 0x000088CA
  GlMatrix11Arb* = 0x000088CB
  GlMatrix12Arb* = 0x000088CC
  GlMatrix13Arb* = 0x000088CD
  GlMatrix14Arb* = 0x000088CE
  GlMatrix15Arb* = 0x000088CF
  GlMatrix16Arb* = 0x000088D0
  GlMatrix17Arb* = 0x000088D1
  GlMatrix18Arb* = 0x000088D2
  GlMatrix19Arb* = 0x000088D3
  GlMatrix20Arb* = 0x000088D4
  GlMatrix21Arb* = 0x000088D5
  GlMatrix22Arb* = 0x000088D6
  GlMatrix23Arb* = 0x000088D7
  GlMatrix24Arb* = 0x000088D8
  GlMatrix25Arb* = 0x000088D9
  GlMatrix26Arb* = 0x000088DA
  GlMatrix27Arb* = 0x000088DB
  GlMatrix28Arb* = 0x000088DC
  GlMatrix29Arb* = 0x000088DD
  GlMatrix30Arb* = 0x000088DE
  GlMatrix31Arb* = 0x000088DF

const 
  Gl422Ext* = 0x000080CC
  Gl422RevExt* = 0x000080CD
  Gl422AverageExt* = 0x000080CE
  Gl422RevAverageExt* = 0x000080CF
  #***** GL_EXT_abgr *****//

const 
  GlAbgrExt* = 0x00008000
  #***** GL_EXT_bgra *****//

const 
  GlBgrExt* = 0x000080E0
  GlBgraExt* = 0x000080E1
  #***** GL_EXT_blend_color *****//

const 
  GlConstantColorExt* = 0x00008001
  GlOneMinusConstantColorExt* = 0x00008002
  GlConstantAlphaExt* = 0x00008003
  GlOneMinusConstantAlphaExt* = 0x00008004
  constGLBLENDCOLOREXT* = 0x00008005

proc glBlendColorEXT*(red: TGLclampf, green: TGLclampf, blue: TGLclampf, 
                      alpha: TGLclampf){.dynlib: dllname, 
    importc: "glBlendColorEXT".}
  #***** GL_EXT_blend_func_separate *****//
const 
  GlBlendDstRgbExt* = 0x000080C8
  GlBlendSrcRgbExt* = 0x000080C9
  GlBlendDstAlphaExt* = 0x000080CA
  GlBlendSrcAlphaExt* = 0x000080CB

proc glBlendFuncSeparateEXT*(sfactorRGB: TGLenum, dfactorRGB: TGLenum, 
                             sfactorAlpha: TGLenum, dfactorAlpha: TGLenum){.
    dynlib: dllname, importc: "glBlendFuncSeparateEXT".}
  #***** GL_EXT_blend_logic_op *****//
  #***** GL_EXT_blend_minmax *****//
const 
  GlFuncAddExt* = 0x00008006
  GlMinExt* = 0x00008007
  GlMaxExt* = 0x00008008
  constGLBLENDEQUATIONEXT* = 0x00008009

proc glBlendEquationEXT*(mode: TGLenum){.dynlib: dllname, 
    importc: "glBlendEquationEXT".}
  #***** GL_EXT_blend_subtract *****//
const 
  GlFuncSubtractExt* = 0x0000800A
  GlFuncReverseSubtractExt* = 0x0000800B
  #***** GL_EXT_clip_volume_hint *****//

const 
  GlClipVolumeClippingHintExt* = 0x000080F0
  #***** GL_EXT_color_subtable *****//

proc glColorSubTableEXT*(target: TGLenum, start: TGLsizei, count: TGLsizei, 
                         format: TGLenum, thetype: TGLenum, data: PGLvoid){.
    dynlib: dllname, importc: "glColorSubTableEXT".}
proc glCopyColorSubTableEXT*(target: TGLenum, start: TGLsizei, x: TGLint, 
                             y: TGLint, width: TGLsizei){.dynlib: dllname, 
    importc: "glCopyColorSubTableEXT".}
  #***** GL_EXT_compiled_vertex_array *****//
const 
  GlArrayElementLockFirstExt* = 0x000081A8
  GlArrayElementLockCountExt* = 0x000081A9

proc glLockArraysEXT*(first: TGLint, count: TGLsizei){.dynlib: dllname, 
    importc: "glLockArraysEXT".}
proc glUnlockArraysEXT*(){.dynlib: dllname, importc: "glUnlockArraysEXT".}
  #***** GL_EXT_convolution *****//
const 
  GlConvolution1dExt* = 0x00008010
  GlConvolution2dExt* = 0x00008011
  GlSeparable2dExt* = 0x00008012
  GlConvolutionBorderModeExt* = 0x00008013
  GlConvolutionFilterScaleExt* = 0x00008014
  GlConvolutionFilterBiasExt* = 0x00008015
  GlReduceExt* = 0x00008016
  GlConvolutionFormatExt* = 0x00008017
  GlConvolutionWidthExt* = 0x00008018
  GlConvolutionHeightExt* = 0x00008019
  GlMaxConvolutionWidthExt* = 0x0000801A
  GlMaxConvolutionHeightExt* = 0x0000801B
  GlPostConvolutionRedScaleExt* = 0x0000801C
  GlPostConvolutionGreenScaleExt* = 0x0000801D
  GlPostConvolutionBlueScaleExt* = 0x0000801E
  GlPostConvolutionAlphaScaleExt* = 0x0000801F
  GlPostConvolutionRedBiasExt* = 0x00008020
  GlPostConvolutionGreenBiasExt* = 0x00008021
  GlPostConvolutionBlueBiasExt* = 0x00008022
  GlPostConvolutionAlphaBiasExt* = 0x00008023

proc glConvolutionFilter1DEXT*(target: TGLenum, internalformat: TGLenum, 
                               width: TGLsizei, format: TGLenum, 
                               thetype: TGLenum, image: PGLvoid){.
    dynlib: dllname, importc: "glConvolutionFilter1DEXT".}
proc glConvolutionFilter2DEXT*(target: TGLenum, internalformat: TGLenum, 
                               width: TGLsizei, height: TGLsizei, 
                               format: TGLenum, thetype: TGLenum, image: PGLvoid){.
    dynlib: dllname, importc: "glConvolutionFilter2DEXT".}
proc glCopyConvolutionFilter1DEXT*(target: TGLenum, internalformat: TGLenum, 
                                   x: TGLint, y: TGLint, width: TGLsizei){.
    dynlib: dllname, importc: "glCopyConvolutionFilter1DEXT".}
proc glCopyConvolutionFilter2DEXT*(target: TGLenum, internalformat: TGLenum, 
                                   x: TGLint, y: TGLint, width: TGLsizei, 
                                   height: TGLsizei){.dynlib: dllname, 
    importc: "glCopyConvolutionFilter2DEXT".}
proc glGetConvolutionFilterEXT*(target: TGLenum, format: TGLenum, 
                                thetype: TGLenum, image: PGLvoid){.
    dynlib: dllname, importc: "glGetConvolutionFilterEXT".}
proc glSeparableFilter2DEXT*(target: TGLenum, internalformat: TGLenum, 
                             width: TGLsizei, height: TGLsizei, format: TGLenum, 
                             thetype: TGLenum, row: PGLvoid, column: PGLvoid){.
    dynlib: dllname, importc: "glSeparableFilter2DEXT".}
proc glGetSeparableFilterEXT*(target: TGLenum, format: TGLenum, 
                              thetype: TGLenum, row: PGLvoid, column: PGLvoid, 
                              span: PGLvoid){.dynlib: dllname, 
    importc: "glGetSeparableFilterEXT".}
proc glConvolutionParameteriEXT*(target: TGLenum, pname: TGLenum, param: TGLint){.
    dynlib: dllname, importc: "glConvolutionParameteriEXT".}
proc glConvolutionParameterivEXT*(target: TGLenum, pname: TGLenum, 
                                  params: PGLint){.dynlib: dllname, 
    importc: "glConvolutionParameterivEXT".}
proc glConvolutionParameterfEXT*(target: TGLenum, pname: TGLenum, 
                                 param: TGLfloat){.dynlib: dllname, 
    importc: "glConvolutionParameterfEXT".}
proc glConvolutionParameterfvEXT*(target: TGLenum, pname: TGLenum, 
                                  params: PGLfloat){.dynlib: dllname, 
    importc: "glConvolutionParameterfvEXT".}
proc glGetConvolutionParameterivEXT*(target: TGLenum, pname: TGLenum, 
                                     params: PGLint){.dynlib: dllname, 
    importc: "glGetConvolutionParameterivEXT".}
proc glGetConvolutionParameterfvEXT*(target: TGLenum, pname: TGLenum, 
                                     params: PGLfloat){.dynlib: dllname, 
    importc: "glGetConvolutionParameterfvEXT".}
  #***** GL_EXT_fog_coord *****//
const 
  GlFogCoordinateSourceExt* = 0x00008450
  GlFogCoordinateExt* = 0x00008451
  GlFragmentDepthExt* = 0x00008452
  GlCurrentFogCoordinateExt* = 0x00008453
  GlFogCoordinateArrayTypeExt* = 0x00008454
  GlFogCoordinateArrayStrideExt* = 0x00008455
  GlFogCoordinateArrayPointerExt* = 0x00008456
  GlFogCoordinateArrayExt* = 0x00008457

proc glFogCoordfEXfloat*(coord: TGLfloat){.dynlib: dllname, 
    importc: "glFogCoordfEXfloat".}
proc glFogCoorddEXdouble*(coord: TGLdouble){.dynlib: dllname, 
    importc: "glFogCoorddEXdouble".}
proc glFogCoordfvEXfloat*(coord: TGLfloat){.dynlib: dllname, 
    importc: "glFogCoordfvEXfloat".}
proc glFogCoorddvEXdouble*(coord: TGLdouble){.dynlib: dllname, 
    importc: "glFogCoorddvEXdouble".}
proc glFogCoordPointerEXT*(thetype: TGLenum, stride: TGLsizei, pointer: PGLvoid){.
    dynlib: dllname, importc: "glFogCoordPointerEXT".}
  #***** GL_EXT_histogram *****//
const 
  constGLHISTOGRAMEXT* = 0x00008024
  GlProxyHistogramExt* = 0x00008025
  GlHistogramWidthExt* = 0x00008026
  GlHistogramFormatExt* = 0x00008027
  GlHistogramRedSizeExt* = 0x00008028
  GlHistogramGreenSizeExt* = 0x00008029
  GlHistogramBlueSizeExt* = 0x0000802A
  GlHistogramAlphaSizeExt* = 0x0000802B
  GlHistogramLuminanceSizeExt* = 0x0000802C
  GlHistogramSinkExt* = 0x0000802D
  constGLMINMAXEXT* = 0x0000802E
  GlMinmaxFormatExt* = 0x0000802F
  GlMinmaxSinkExt* = 0x00008030

proc glHistogramEXT*(target: TGLenum, width: TGLsizei, internalformat: TGLenum, 
                     sink: TGLboolean){.dynlib: dllname, 
                                        importc: "glHistogramEXT".}
proc glResetHistogramEXT*(target: TGLenum){.dynlib: dllname, 
    importc: "glResetHistogramEXT".}
proc glGetHistogramEXT*(target: TGLenum, reset: TGLboolean, format: TGLenum, 
                        thetype: TGLenum, values: PGLvoid){.dynlib: dllname, 
    importc: "glGetHistogramEXT".}
proc glGetHistogramParameterivEXT*(target: TGLenum, pname: TGLenum, 
                                   params: PGLint){.dynlib: dllname, 
    importc: "glGetHistogramParameterivEXT".}
proc glGetHistogramParameterfvEXT*(target: TGLenum, pname: TGLenum, 
                                   params: PGLfloat){.dynlib: dllname, 
    importc: "glGetHistogramParameterfvEXT".}
proc glMinmaxEXT*(target: TGLenum, internalformat: TGLenum, sink: TGLboolean){.
    dynlib: dllname, importc: "glMinmaxEXT".}
proc glResetMinmaxEXT*(target: TGLenum){.dynlib: dllname, 
    importc: "glResetMinmaxEXT".}
proc glGetMinmaxEXT*(target: TGLenum, reset: TGLboolean, format: TGLenum, 
                     thetype: TGLenum, values: PGLvoid){.dynlib: dllname, 
    importc: "glGetMinmaxEXT".}
proc glGetMinmaxParameterivEXT*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetMinmaxParameterivEXT".}
proc glGetMinmaxParameterfvEXT*(target: TGLenum, pname: TGLenum, 
                                params: PGLfloat){.dynlib: dllname, 
    importc: "glGetMinmaxParameterfvEXT".}
  #***** GL_EXT_multi_draw_arrays *****//
proc glMultiDrawArraysEXT*(mode: TGLenum, first: PGLint, count: PGLsizei, 
                           primcount: TGLsizei){.dynlib: dllname, 
    importc: "glMultiDrawArraysEXT".}
proc glMultiDrawElementsEXT*(mode: TGLenum, count: PGLsizei, thetype: TGLenum, 
                             indices: PGLvoid, primcount: TGLsizei){.
    dynlib: dllname, importc: "glMultiDrawElementsEXT".}
  #***** GL_EXT_packed_pixels *****//
const 
  GlUnsignedByte332Ext* = 0x00008032
  GlUnsignedShort4444Ext* = 0x00008033
  GlUnsignedShort5551Ext* = 0x00008034
  GlUnsignedInt8888Ext* = 0x00008035
  GlUnsignedInt1010102Ext* = 0x00008036
  #***** GL_EXT_paletted_texture *****//

const 
  GlColorIndex1Ext* = 0x000080E2
  GlColorIndex2Ext* = 0x000080E3
  GlColorIndex4Ext* = 0x000080E4
  GlColorIndex8Ext* = 0x000080E5
  GlColorIndex12Ext* = 0x000080E6
  GlColorIndex16Ext* = 0x000080E7
  GlColorTableFormatExt* = 0x000080D8
  GlColorTableWidthExt* = 0x000080D9
  GlColorTableRedSizeExt* = 0x000080DA
  GlColorTableGreenSizeExt* = 0x000080DB
  GlColorTableBlueSizeExt* = 0x000080DC
  GlColorTableAlphaSizeExt* = 0x000080DD
  GlColorTableLuminanceSizeExt* = 0x000080DE
  GlColorTableIntensitySizeExt* = 0x000080DF
  GlTextureIndexSizeExt* = 0x000080ED
  GlTexture1d* = 0x00000DE0
  GlTexture2d* = 0x00000DE1
  GlTexture3dExt* = 0x0000806F # GL_TEXTURE_CUBE_MAP_ARB  { already defined }
  GlProxyTexture1d* = 0x00008063
  GlProxyTexture2d* = 0x00008064
  GlProxyTexture3dExt* = 0x00008070 # GL_PROXY_TEXTURE_CUBE_MAP_ARB  { already defined }
                                        # GL_TEXTURE_1D  { already defined }
                                        # GL_TEXTURE_2D  { already defined }
                                        # GL_TEXTURE_3D_EXT  { already defined }
                                        # GL_TEXTURE_CUBE_MAP_ARB  { already defined }

proc glColorTableEXT*(target: TGLenum, internalFormat: TGLenum, width: TGLsizei, 
                      format: TGLenum, thetype: TGLenum, data: PGLvoid){.
    dynlib: dllname, importc: "glColorTableEXT".}
  # glColorSubTableEXT  { already defined }
proc glGetColorTableEXT*(target: TGLenum, format: TGLenum, thetype: TGLenum, 
                         data: PGLvoid){.dynlib: dllname, 
    importc: "glGetColorTableEXT".}
proc glGetColorTableParameterivEXT*(target: TGLenum, pname: TGLenum, 
                                    params: PGLint){.dynlib: dllname, 
    importc: "glGetColorTableParameterivEXT".}
proc glGetColorTableParameterfvEXT*(target: TGLenum, pname: TGLenum, 
                                    params: PGLfloat){.dynlib: dllname, 
    importc: "glGetColorTableParameterfvEXT".}
  #***** GL_EXT_point_parameters *****//
const 
  GlPointSizeMinExt* = 0x00008126
  GlPointSizeMaxExt* = 0x00008127
  GlPointFadeThresholdSizeExt* = 0x00008128
  GlDistanceAttenuationExt* = 0x00008129

proc glPointParameterfEXT*(pname: TGLenum, param: TGLfloat){.dynlib: dllname, 
    importc: "glPointParameterfEXT".}
proc glPointParameterfvEXT*(pname: TGLenum, params: PGLfloat){.dynlib: dllname, 
    importc: "glPointParameterfvEXT".}
  #***** GL_EXT_polygon_offset *****//
const 
  constGLPOLYGONOFFSETEXT* = 0x00008037
  GlPolygonOffsetFactorExt* = 0x00008038
  GlPolygonOffsetBiasExt* = 0x00008039

proc glPolygonOffsetEXT*(factor: TGLfloat, bias: TGLfloat){.dynlib: dllname, 
    importc: "glPolygonOffsetEXT".}
  #***** GL_EXT_secondary_color *****//
const 
  GlColorSumExt* = 0x00008458
  GlCurrentSecondaryColorExt* = 0x00008459
  GlSecondaryColorArraySizeExt* = 0x0000845A
  GlSecondaryColorArrayTypeExt* = 0x0000845B
  GlSecondaryColorArrayStrideExt* = 0x0000845C
  GlSecondaryColorArrayPointerExt* = 0x0000845D
  GlSecondaryColorArrayExt* = 0x0000845E

proc glSecondaryColor3bEXT*(components: TGLbyte){.dynlib: dllname, 
    importc: "glSecondaryColor3bEXT".}
proc glSecondaryColor3sEXT*(components: TGLshort){.dynlib: dllname, 
    importc: "glSecondaryColor3sEXT".}
proc glSecondaryColor3iEXT*(components: TGLint){.dynlib: dllname, 
    importc: "glSecondaryColor3iEXT".}
proc glSecondaryColor3fEXT*(components: TGLfloat){.dynlib: dllname, 
    importc: "glSecondaryColor3fEXT".}
proc glSecondaryColor3dEXT*(components: TGLdouble){.dynlib: dllname, 
    importc: "glSecondaryColor3dEXT".}
proc glSecondaryColor3ubEXT*(components: TGLubyte){.dynlib: dllname, 
    importc: "glSecondaryColor3ubEXT".}
proc glSecondaryColor3usEXT*(components: TGLushort){.dynlib: dllname, 
    importc: "glSecondaryColor3usEXT".}
proc glSecondaryColor3uiEXT*(components: TGLuint){.dynlib: dllname, 
    importc: "glSecondaryColor3uiEXT".}
proc glSecondaryColor3bvEXT*(components: TGLbyte){.dynlib: dllname, 
    importc: "glSecondaryColor3bvEXT".}
proc glSecondaryColor3svEXT*(components: TGLshort){.dynlib: dllname, 
    importc: "glSecondaryColor3svEXT".}
proc glSecondaryColor3ivEXT*(components: TGLint){.dynlib: dllname, 
    importc: "glSecondaryColor3ivEXT".}
proc glSecondaryColor3fvEXT*(components: TGLfloat){.dynlib: dllname, 
    importc: "glSecondaryColor3fvEXT".}
proc glSecondaryColor3dvEXT*(components: TGLdouble){.dynlib: dllname, 
    importc: "glSecondaryColor3dvEXT".}
proc glSecondaryColor3ubvEXT*(components: TGLubyte){.dynlib: dllname, 
    importc: "glSecondaryColor3ubvEXT".}
proc glSecondaryColor3usvEXT*(components: TGLushort){.dynlib: dllname, 
    importc: "glSecondaryColor3usvEXT".}
proc glSecondaryColor3uivEXT*(components: TGLuint){.dynlib: dllname, 
    importc: "glSecondaryColor3uivEXT".}
proc glSecondaryColorPointerEXT*(size: TGLint, thetype: TGLenum, 
                                 stride: TGLsizei, pointer: PGLvoid){.
    dynlib: dllname, importc: "glSecondaryColorPointerEXT".}
  #***** GL_EXT_separate_specular_color *****//
const 
  GlLightModelColorControlExt* = 0x000081F8
  GlSingleColorExt* = 0x000081F9
  GlSeparateSpecularColorExt* = 0x000081FA
  #***** GL_EXT_shadow_funcs *****//
  #***** GL_EXT_shared_texture_palette *****//

const 
  GlSharedTexturePaletteExt* = 0x000081FB
  #***** GL_EXT_stencil_two_side *****//

const 
  GlStencilTestTwoSideExt* = 0x00008910
  constGLACTIVESTENCILFACEEXT* = 0x00008911

proc glActiveStencilFaceEXT*(face: TGLenum){.dynlib: dllname, 
    importc: "glActiveStencilFaceEXT".}
  #***** GL_EXT_stencil_wrap *****//
const 
  GlIncrWrapExt* = 0x00008507
  GlDecrWrapExt* = 0x00008508
  #***** GL_EXT_subtexture *****//

proc glTexSubImage1DEXT*(target: TGLenum, level: TGLint, xoffset: TGLint, 
                         width: TGLsizei, format: TGLenum, thetype: TGLenum, 
                         pixels: PGLvoid){.dynlib: dllname, 
    importc: "glTexSubImage1DEXT".}
proc glTexSubImage2DEXT*(target: TGLenum, level: TGLint, xoffset: TGLint, 
                         yoffset: TGLint, width: TGLsizei, height: TGLsizei, 
                         format: TGLenum, thetype: TGLenum, pixels: PGLvoid){.
    dynlib: dllname, importc: "glTexSubImage2DEXT".}
proc glTexSubImage3DEXT*(target: TGLenum, level: TGLint, xoffset: TGLint, 
                         yoffset: TGLint, zoffset: TGLint, width: TGLsizei, 
                         height: TGLsizei, depth: TGLsizei, format: TGLenum, 
                         thetype: TGLenum, pixels: PGLvoid){.dynlib: dllname, 
    importc: "glTexSubImage3DEXT".}
  #***** GL_EXT_texture3D *****//
const 
  GlPackSkipImagesExt* = 0x0000806B
  GlPackImageHeightExt* = 0x0000806C
  GlUnpackSkipImagesExt* = 0x0000806D
  GlUnpackImageHeightExt* = 0x0000806E # GL_TEXTURE_3D_EXT  { already defined }
                                           # GL_PROXY_TEXTURE_3D_EXT  { already defined }
  GlTextureDepthExt* = 0x00008071
  GlTextureWrapRExt* = 0x00008072
  GlMax3dTextureSizeExt* = 0x00008073

proc glTexImage3DEXT*(target: TGLenum, level: TGLint, internalformat: TGLenum, 
                      width: TGLsizei, height: TGLsizei, depth: TGLsizei, 
                      border: TGLint, format: TGLenum, thetype: TGLenum, 
                      pixels: PGLvoid){.dynlib: dllname, 
                                        importc: "glTexImage3DEXT".}
  #***** GL_EXT_texture_compression_s3tc *****//
const 
  GlCompressedRgbS3tcDxt1Ext* = 0x000083F0
  GlCompressedRgbaS3tcDxt1Ext* = 0x000083F1
  GlCompressedRgbaS3tcDxt3Ext* = 0x000083F2
  GlCompressedRgbaS3tcDxt5Ext* = 0x000083F3
  #***** GL_EXT_texture_env_add *****//
  #***** GL_EXT_texture_env_combine *****//

const 
  GlCombineExt* = 0x00008570
  GlCombineRgbExt* = 0x00008571
  GlCombineAlphaExt* = 0x00008572
  GlSource0RgbExt* = 0x00008580
  GlSource1RgbExt* = 0x00008581
  GlSource2RgbExt* = 0x00008582
  GlSource0AlphaExt* = 0x00008588
  GlSource1AlphaExt* = 0x00008589
  GlSource2AlphaExt* = 0x0000858A
  GlOperand0RgbExt* = 0x00008590
  GlOperand1RgbExt* = 0x00008591
  GlOperand2RgbExt* = 0x00008592
  GlOperand0AlphaExt* = 0x00008598
  GlOperand1AlphaExt* = 0x00008599
  GlOperand2AlphaExt* = 0x0000859A
  GlRgbScaleExt* = 0x00008573
  GlAddSignedExt* = 0x00008574
  GlInterpolateExt* = 0x00008575
  GlConstantExt* = 0x00008576
  GlPrimaryColorExt* = 0x00008577
  GlPreviousExt* = 0x00008578
  #***** GL_EXT_texture_env_dot3 *****//

const 
  GlDot3RgbExt* = 0x00008740
  GlDot3RgbaExt* = 0x00008741
  #***** GL_EXT_texture_filter_anisotropic *****//

const 
  GlTextureMaxAnisotropyExt* = 0x000084FE
  GlMaxTextureMaxAnisotropyExt* = 0x000084FF
  #***** GL_EXT_texture_lod_bias *****//

const 
  GlTextureFilterControlExt* = 0x00008500
  GlTextureLodBiasExt* = 0x00008501
  GlMaxTextureLodBiasExt* = 0x000084FD
  #***** GL_EXT_texture_object *****//

const 
  GlTexturePriorityExt* = 0x00008066
  GlTextureResidentExt* = 0x00008067
  GlTexture1dBindingExt* = 0x00008068
  GlTexture2dBindingExt* = 0x00008069
  GlTexture3dBindingExt* = 0x0000806A

proc glGenTexturesEXT*(n: TGLsizei, textures: PGLuint){.dynlib: dllname, 
    importc: "glGenTexturesEXT".}
proc glDeleteTexturesEXT*(n: TGLsizei, textures: PGLuint){.dynlib: dllname, 
    importc: "glDeleteTexturesEXT".}
proc glBindTextureEXT*(target: TGLenum, texture: TGLuint){.dynlib: dllname, 
    importc: "glBindTextureEXT".}
proc glPrioritizeTexturesEXT*(n: TGLsizei, textures: PGLuint, 
                              priorities: PGLclampf){.dynlib: dllname, 
    importc: "glPrioritizeTexturesEXT".}
proc glAreTexturesResidentEXT*(n: TGLsizei, textures: PGLuint, 
                               residences: PGLboolean): TGLboolean{.
    dynlib: dllname, importc: "glAreTexturesResidentEXT".}
proc glIsTextureEXT*(texture: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsTextureEXT".}
  #***** GL_EXT_vertex_array *****//
const 
  GlVertexArrayExt* = 0x00008074
  GlNormalArrayExt* = 0x00008075
  GlColorArrayExt* = 0x00008076
  GlIndexArrayExt* = 0x00008077
  GlTextureCoordArrayExt* = 0x00008078
  GlEdgeFlagArrayExt* = 0x00008079
  GlDoubleExt* = 0x0000140A
  GlVertexArraySizeExt* = 0x0000807A
  GlVertexArrayTypeExt* = 0x0000807B
  GlVertexArrayStrideExt* = 0x0000807C
  GlVertexArrayCountExt* = 0x0000807D
  GlNormalArrayTypeExt* = 0x0000807E
  GlNormalArrayStrideExt* = 0x0000807F
  GlNormalArrayCountExt* = 0x00008080
  GlColorArraySizeExt* = 0x00008081
  GlColorArrayTypeExt* = 0x00008082
  GlColorArrayStrideExt* = 0x00008083
  GlColorArrayCountExt* = 0x00008084
  GlIndexArrayTypeExt* = 0x00008085
  GlIndexArrayStrideExt* = 0x00008086
  GlIndexArrayCountExt* = 0x00008087
  GlTextureCoordArraySizeExt* = 0x00008088
  GlTextureCoordArrayTypeExt* = 0x00008089
  GlTextureCoordArrayStrideExt* = 0x0000808A
  GlTextureCoordArrayCountExt* = 0x0000808B
  GlEdgeFlagArrayStrideExt* = 0x0000808C
  GlEdgeFlagArrayCountExt* = 0x0000808D
  GlVertexArrayPointerExt* = 0x0000808E
  GlNormalArrayPointerExt* = 0x0000808F
  GlColorArrayPointerExt* = 0x00008090
  GlIndexArrayPointerExt* = 0x00008091
  GlTextureCoordArrayPointerExt* = 0x00008092
  GlEdgeFlagArrayPointerExt* = 0x00008093

proc glArrayElementEXT*(i: TGLint){.dynlib: dllname, 
                                    importc: "glArrayElementEXT".}
proc glDrawArraysEXT*(mode: TGLenum, first: TGLint, count: TGLsizei){.
    dynlib: dllname, importc: "glDrawArraysEXT".}
proc glVertexPointerEXT*(size: TGLint, thetype: TGLenum, stride: TGLsizei, 
                         count: TGLsizei, pointer: PGLvoid){.dynlib: dllname, 
    importc: "glVertexPointerEXT".}
proc glNormalPointerEXT*(thetype: TGLenum, stride: TGLsizei, count: TGLsizei, 
                         pointer: PGLvoid){.dynlib: dllname, 
    importc: "glNormalPointerEXT".}
proc glColorPointerEXT*(size: TGLint, thetype: TGLenum, stride: TGLsizei, 
                        count: TGLsizei, pointer: PGLvoid){.dynlib: dllname, 
    importc: "glColorPointerEXT".}
proc glIndexPointerEXT*(thetype: TGLenum, stride: TGLsizei, count: TGLsizei, 
                        pointer: PGLvoid){.dynlib: dllname, 
    importc: "glIndexPointerEXT".}
proc glTexCoordPointerEXT*(size: TGLint, thetype: TGLenum, stride: TGLsizei, 
                           count: TGLsizei, pointer: PGLvoid){.dynlib: dllname, 
    importc: "glTexCoordPointerEXT".}
proc glEdgeFlagPointerEXT*(stride: TGLsizei, count: TGLsizei, 
                           pointer: PGLboolean){.dynlib: dllname, 
    importc: "glEdgeFlagPointerEXT".}
proc glGetPointervEXT*(pname: TGLenum, params: PGLvoid){.dynlib: dllname, 
    importc: "glGetPointervEXT".}
  #***** GL_EXT_vertex_shader *****//
const 
  GlVertexShaderExt* = 0x00008780
  GlVariantValueExt* = 0x000087E4
  GlVariantDatatypeExt* = 0x000087E5
  GlVariantArrayStrideExt* = 0x000087E6
  GlVariantArrayTypeExt* = 0x000087E7
  GlVariantArrayExt* = 0x000087E8
  GlVariantArrayPointerExt* = 0x000087E9
  GlInvariantValueExt* = 0x000087EA
  GlInvariantDatatypeExt* = 0x000087EB
  GlLocalConstantValueExt* = 0x000087EC
  GlLocalConstantDatatypeExt* = 0x000087ED
  GlOpIndexExt* = 0x00008782
  GlOpNegateExt* = 0x00008783
  GlOpDot3Ext* = 0x00008784
  GlOpDot4Ext* = 0x00008785
  GlOpMulExt* = 0x00008786
  GlOpAddExt* = 0x00008787
  GlOpMaddExt* = 0x00008788
  GlOpFracExt* = 0x00008789
  GlOpMaxExt* = 0x0000878A
  GlOpMinExt* = 0x0000878B
  GlOpSetGeExt* = 0x0000878C
  GlOpSetLtExt* = 0x0000878D
  GlOpClampExt* = 0x0000878E
  GlOpFloorExt* = 0x0000878F
  GlOpRoundExt* = 0x00008790
  GlOpExpBase2Ext* = 0x00008791
  GlOpLogBase2Ext* = 0x00008792
  GlOpPowerExt* = 0x00008793
  GlOpRecipExt* = 0x00008794
  GlOpRecipSqrtExt* = 0x00008795
  GlOpSubExt* = 0x00008796
  GlOpCrossProductExt* = 0x00008797
  GlOpMultiplyMatrixExt* = 0x00008798
  GlOpMovExt* = 0x00008799
  GlOutputVertexExt* = 0x0000879A
  GlOutputColor0Ext* = 0x0000879B
  GlOutputColor1Ext* = 0x0000879C
  GlOutputTextureCoord0Ext* = 0x0000879D
  GlOutputTextureCoord1Ext* = 0x0000879E
  GlOutputTextureCoord2Ext* = 0x0000879F
  GlOutputTextureCoord3Ext* = 0x000087A0
  GlOutputTextureCoord4Ext* = 0x000087A1
  GlOutputTextureCoord5Ext* = 0x000087A2
  GlOutputTextureCoord6Ext* = 0x000087A3
  GlOutputTextureCoord7Ext* = 0x000087A4
  GlOutputTextureCoord8Ext* = 0x000087A5
  GlOutputTextureCoord9Ext* = 0x000087A6
  GlOutputTextureCoord10Ext* = 0x000087A7
  GlOutputTextureCoord11Ext* = 0x000087A8
  GlOutputTextureCoord12Ext* = 0x000087A9
  GlOutputTextureCoord13Ext* = 0x000087AA
  GlOutputTextureCoord14Ext* = 0x000087AB
  GlOutputTextureCoord15Ext* = 0x000087AC
  GlOutputTextureCoord16Ext* = 0x000087AD
  GlOutputTextureCoord17Ext* = 0x000087AE
  GlOutputTextureCoord18Ext* = 0x000087AF
  GlOutputTextureCoord19Ext* = 0x000087B0
  GlOutputTextureCoord20Ext* = 0x000087B1
  GlOutputTextureCoord21Ext* = 0x000087B2
  GlOutputTextureCoord22Ext* = 0x000087B3
  GlOutputTextureCoord23Ext* = 0x000087B4
  GlOutputTextureCoord24Ext* = 0x000087B5
  GlOutputTextureCoord25Ext* = 0x000087B6
  GlOutputTextureCoord26Ext* = 0x000087B7
  GlOutputTextureCoord27Ext* = 0x000087B8
  GlOutputTextureCoord28Ext* = 0x000087B9
  GlOutputTextureCoord29Ext* = 0x000087BA
  GlOutputTextureCoord30Ext* = 0x000087BB
  GlOutputTextureCoord31Ext* = 0x000087BC
  GlOutputFogExt* = 0x000087BD
  GlScalarExt* = 0x000087BE
  GlVectorExt* = 0x000087BF
  GlMatrixExt* = 0x000087C0
  GlVariantExt* = 0x000087C1
  GlInvariantExt* = 0x000087C2
  GlLocalConstantExt* = 0x000087C3
  GlLocalExt* = 0x000087C4
  GlMaxVertexShaderInstructionsExt* = 0x000087C5
  GlMaxVertexShaderVariantsExt* = 0x000087C6
  GlMaxVertexShaderInvariantsExt* = 0x000087C7
  GlMaxVertexShaderLocalConstantsExt* = 0x000087C8
  GlMaxVertexShaderLocalsExt* = 0x000087C9
  GlMaxOptimizedVertexShaderInstructionsExt* = 0x000087CA
  GlMaxOptimizedVertexShaderVariantsExt* = 0x000087CB
  GlMaxOptimizedVertexShaderLocalConstantsExt* = 0x000087CC
  GlMaxOptimizedVertexShaderInvariantsExt* = 0x000087CD
  GlMaxOptimizedVertexShaderLocalsExt* = 0x000087CE
  GlVertexShaderInstructionsExt* = 0x000087CF
  GlVertexShaderVariantsExt* = 0x000087D0
  GlVertexShaderInvariantsExt* = 0x000087D1
  GlVertexShaderLocalConstantsExt* = 0x000087D2
  GlVertexShaderLocalsExt* = 0x000087D3
  GlVertexShaderBindingExt* = 0x00008781
  GlVertexShaderOptimizedExt* = 0x000087D4
  GlXExt* = 0x000087D5
  GlYExt* = 0x000087D6
  GlZExt* = 0x000087D7
  GlWExt* = 0x000087D8
  GlNegativeXExt* = 0x000087D9
  GlNegativeYExt* = 0x000087DA
  GlNegativeZExt* = 0x000087DB
  GlNegativeWExt* = 0x000087DC
  GlZeroExt* = 0x000087DD
  GlOneExt* = 0x000087DE
  GlNegativeOneExt* = 0x000087DF
  GlNormalizedRangeExt* = 0x000087E0
  GlFullRangeExt* = 0x000087E1
  GlCurrentVertexExt* = 0x000087E2
  GlMvpMatrixExt* = 0x000087E3

proc glBeginVertexShaderEXT*(){.dynlib: dllname, 
                                importc: "glBeginVertexShaderEXT".}
proc glEndVertexShaderEXT*(){.dynlib: dllname, importc: "glEndVertexShaderEXT".}
proc glBindVertexShaderEXT*(id: TGLuint){.dynlib: dllname, 
    importc: "glBindVertexShaderEXT".}
proc glGenVertexShadersEXT*(range: TGLuint): TGLuint{.dynlib: dllname, 
    importc: "glGenVertexShadersEXT".}
proc glDeleteVertexShaderEXT*(id: TGLuint){.dynlib: dllname, 
    importc: "glDeleteVertexShaderEXT".}
proc glShaderOp1EXT*(op: TGLenum, res: TGLuint, arg1: TGLuint){.dynlib: dllname, 
    importc: "glShaderOp1EXT".}
proc glShaderOp2EXT*(op: TGLenum, res: TGLuint, arg1: TGLuint, arg2: TGLuint){.
    dynlib: dllname, importc: "glShaderOp2EXT".}
proc glShaderOp3EXT*(op: TGLenum, res: TGLuint, arg1: TGLuint, arg2: TGLuint, 
                     arg3: TGLuint){.dynlib: dllname, importc: "glShaderOp3EXT".}
proc glSwizzleEXT*(res: TGLuint, theIn: TGLuint, outX: TGLenum, outY: TGLenum, 
                   outZ: TGLenum, outW: TGLenum){.dynlib: dllname, 
    importc: "glSwizzleEXT".}
proc glWriteMaskEXT*(res: TGLuint, theIn: TGLuint, outX: TGLenum, outY: TGLenum, 
                     outZ: TGLenum, outW: TGLenum){.dynlib: dllname, 
    importc: "glWriteMaskEXT".}
proc glInsertComponentEXT*(res: TGLuint, src: TGLuint, num: TGLuint){.
    dynlib: dllname, importc: "glInsertComponentEXT".}
proc glExtractComponentEXT*(res: TGLuint, src: TGLuint, num: TGLuint){.
    dynlib: dllname, importc: "glExtractComponentEXT".}
proc glGenSymbolsEXT*(datatype: TGLenum, storagetype: TGLenum, range: TGLenum, 
                      components: TGLuint): TGLuint{.dynlib: dllname, 
    importc: "glGenSymbolsEXT".}
proc glSetInvariantEXT*(id: TGLuint, thetype: TGLenum, address: PGLvoid){.
    dynlib: dllname, importc: "glSetInvariantEXT".}
proc glSetLocalConstantEXT*(id: TGLuint, thetype: TGLenum, address: PGLvoid){.
    dynlib: dllname, importc: "glSetLocalConstantEXT".}
proc glVariantbvEXT*(id: TGLuint, address: PGLbyte){.dynlib: dllname, 
    importc: "glVariantbvEXT".}
proc glVariantsvEXT*(id: TGLuint, address: PGLshort){.dynlib: dllname, 
    importc: "glVariantsvEXT".}
proc glVariantivEXT*(id: TGLuint, address: PGLint){.dynlib: dllname, 
    importc: "glVariantivEXT".}
proc glVariantfvEXT*(id: TGLuint, address: PGLfloat){.dynlib: dllname, 
    importc: "glVariantfvEXT".}
proc glVariantdvEXT*(id: TGLuint, address: PGLdouble){.dynlib: dllname, 
    importc: "glVariantdvEXT".}
proc glVariantubvEXT*(id: TGLuint, address: PGLubyte){.dynlib: dllname, 
    importc: "glVariantubvEXT".}
proc glVariantusvEXT*(id: TGLuint, address: PGLushort){.dynlib: dllname, 
    importc: "glVariantusvEXT".}
proc glVariantuivEXT*(id: TGLuint, address: PGLuint){.dynlib: dllname, 
    importc: "glVariantuivEXT".}
proc glVariantPointerEXT*(id: TGLuint, thetype: TGLenum, stride: TGLuint, 
                          address: PGLvoid){.dynlib: dllname, 
    importc: "glVariantPointerEXT".}
proc glEnableVariantClientStateEXT*(id: TGLuint){.dynlib: dllname, 
    importc: "glEnableVariantClientStateEXT".}
proc glDisableVariantClientStateEXT*(id: TGLuint){.dynlib: dllname, 
    importc: "glDisableVariantClientStateEXT".}
proc glBindLightParameterEXT*(light: TGLenum, value: TGLenum): TGLuint{.
    dynlib: dllname, importc: "glBindLightParameterEXT".}
proc glBindMaterialParameterEXT*(face: TGLenum, value: TGLenum): TGLuint{.
    dynlib: dllname, importc: "glBindMaterialParameterEXT".}
proc glBindTexGenParameterEXT*(theunit: TGLenum, coord: TGLenum, value: TGLenum): TGLuint{.
    dynlib: dllname, importc: "glBindTexGenParameterEXT".}
proc glBindTextureUnitParameterEXT*(theunit: TGLenum, value: TGLenum): TGLuint{.
    dynlib: dllname, importc: "glBindTextureUnitParameterEXT".}
proc glBindParameterEXT*(value: TGLenum): TGLuint{.dynlib: dllname, 
    importc: "glBindParameterEXT".}
proc glIsVariantEnabledEXT*(id: TGLuint, cap: TGLenum): TGLboolean{.
    dynlib: dllname, importc: "glIsVariantEnabledEXT".}
proc glGetVariantBooleanvEXT*(id: TGLuint, value: TGLenum, data: PGLboolean){.
    dynlib: dllname, importc: "glGetVariantBooleanvEXT".}
proc glGetVariantIntegervEXT*(id: TGLuint, value: TGLenum, data: PGLint){.
    dynlib: dllname, importc: "glGetVariantIntegervEXT".}
proc glGetVariantFloatvEXT*(id: TGLuint, value: TGLenum, data: PGLfloat){.
    dynlib: dllname, importc: "glGetVariantFloatvEXT".}
proc glGetVariantPointervEXT*(id: TGLuint, value: TGLenum, data: PGLvoid){.
    dynlib: dllname, importc: "glGetVariantPointervEXT".}
proc glGetInvariantBooleanvEXT*(id: TGLuint, value: TGLenum, data: PGLboolean){.
    dynlib: dllname, importc: "glGetInvariantBooleanvEXT".}
proc glGetInvariantIntegervEXT*(id: TGLuint, value: TGLenum, data: PGLint){.
    dynlib: dllname, importc: "glGetInvariantIntegervEXT".}
proc glGetInvariantFloatvEXT*(id: TGLuint, value: TGLenum, data: PGLfloat){.
    dynlib: dllname, importc: "glGetInvariantFloatvEXT".}
proc glGetLocalConstantBooleanvEXT*(id: TGLuint, value: TGLenum, 
                                    data: PGLboolean){.dynlib: dllname, 
    importc: "glGetLocalConstantBooleanvEXT".}
proc glGetLocalConstantIntegervEXT*(id: TGLuint, value: TGLenum, data: PGLint){.
    dynlib: dllname, importc: "glGetLocalConstantIntegervEXT".}
proc glGetLocalConstantFloatvEXT*(id: TGLuint, value: TGLenum, data: PGLfloat){.
    dynlib: dllname, importc: "glGetLocalConstantFloatvEXT".}
  #***** GL_EXT_vertex_weighting *****//
const 
  GlVertexWeightingExt* = 0x00008509
  GlModelview0Ext* = 0x00001700
  GlModelview1Ext* = 0x0000850A
  GlModelview0MatrixExt* = 0x00000BA6
  GlModelview1MatrixExt* = 0x00008506
  GlCurrentVertexWeightExt* = 0x0000850B
  GlVertexWeightArrayExt* = 0x0000850C
  GlVertexWeightArraySizeExt* = 0x0000850D
  GlVertexWeightArrayTypeExt* = 0x0000850E
  GlVertexWeightArrayStrideExt* = 0x0000850F
  GlModelview0StackDepthExt* = 0x00000BA3
  GlModelview1StackDepthExt* = 0x00008502
  GlVertexWeightArrayPointerExt* = 0x00008510

proc glVertexWeightfEXT*(weight: TGLfloat){.dynlib: dllname, 
    importc: "glVertexWeightfEXT".}
proc glVertexWeightfvEXT*(weight: PGLfloat){.dynlib: dllname, 
    importc: "glVertexWeightfvEXT".}
proc glVertexWeightPointerEXT*(size: TGLint, thetype: TGLenum, stride: TGLsizei, 
                               pointer: PGLvoid){.dynlib: dllname, 
    importc: "glVertexWeightPointerEXT".}
  #***** GL_HP_occlusion_test *****//
const 
  GlOcclusionTestHp* = 0x00008165
  GlOcclusionTestResultHp* = 0x00008166
  #***** GL_NV_blend_square *****//
  #***** GL_NV_copy_depth_to_color *****//

const 
  GlDepthStencilToRgbaNv* = 0x0000886E
  GlDepthStencilToBgraNv* = 0x0000886F
  #***** GL_NV_depth_clamp *****//

const 
  GlDepthClampNv* = 0x0000864F
  #***** GL_NV_evaluators *****//

const 
  GlEval2dNv* = 0x000086C0
  GlEvalTriangular2dNv* = 0x000086C1
  GlMapTessellationNv* = 0x000086C2
  GlMapAttribUOrderNv* = 0x000086C3
  GlMapAttribVOrderNv* = 0x000086C4
  GlEvalFractionalTessellationNv* = 0x000086C5
  GlEvalVertexAttrib0Nv* = 0x000086C6
  GlEvalVertexAttrib1Nv* = 0x000086C7
  GlEvalVertexAttrib2Nv* = 0x000086C8
  GlEvalVertexAttrib3Nv* = 0x000086C9
  GlEvalVertexAttrib4Nv* = 0x000086CA
  GlEvalVertexAttrib5Nv* = 0x000086CB
  GlEvalVertexAttrib6Nv* = 0x000086CC
  GlEvalVertexAttrib7Nv* = 0x000086CD
  GlEvalVertexAttrib8Nv* = 0x000086CE
  GlEvalVertexAttrib9Nv* = 0x000086CF
  GlEvalVertexAttrib10Nv* = 0x000086D0
  GlEvalVertexAttrib11Nv* = 0x000086D1
  GlEvalVertexAttrib12Nv* = 0x000086D2
  GlEvalVertexAttrib13Nv* = 0x000086D3
  GlEvalVertexAttrib14Nv* = 0x000086D4
  GlEvalVertexAttrib15Nv* = 0x000086D5
  GlMaxMapTessellationNv* = 0x000086D6
  GlMaxRationalEvalOrderNv* = 0x000086D7

proc glMapControlPointsNV*(target: TGLenum, index: TGLuint, thetype: TGLenum, 
                           ustride: TGLsizei, vstride: TGLsizei, uorder: TGLint, 
                           vorder: TGLint, thepacked: TGLboolean, 
                           points: PGLvoid){.dynlib: dllname, 
    importc: "glMapControlPointsNV".}
proc glMapParameterivNV*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glMapParameterivNV".}
proc glMapParameterfvNV*(target: TGLenum, pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glMapParameterfvNV".}
proc glGetMapControlPointsNV*(target: TGLenum, index: TGLuint, thetype: TGLenum, 
                              ustride: TGLsizei, vstride: TGLsizei, 
                              thepacked: TGLboolean, points: PGLvoid){.
    dynlib: dllname, importc: "glGetMapControlPointsNV".}
proc glGetMapParameterivNV*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetMapParameterivNV".}
proc glGetMapParameterfvNV*(target: TGLenum, pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glGetMapParameterfvNV".}
proc glGetMapAttribParameterivNV*(target: TGLenum, index: TGLuint, 
                                  pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetMapAttribParameterivNV".}
proc glGetMapAttribParameterfvNV*(target: TGLenum, index: TGLuint, 
                                  pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glGetMapAttribParameterfvNV".}
proc glEvalMapsNV*(target: TGLenum, mode: TGLenum){.dynlib: dllname, 
    importc: "glEvalMapsNV".}
  #***** GL_NV_fence *****//
const 
  GlAllCompletedNv* = 0x000084F2
  GlFenceStatusNv* = 0x000084F3
  GlFenceConditionNv* = 0x000084F4

proc glGenFencesNV*(n: TGLsizei, fences: PGLuint){.dynlib: dllname, 
    importc: "glGenFencesNV".}
proc glDeleteFencesNV*(n: TGLsizei, fences: PGLuint){.dynlib: dllname, 
    importc: "glDeleteFencesNV".}
proc glSetFenceNV*(fence: TGLuint, condition: TGLenum){.dynlib: dllname, 
    importc: "glSetFenceNV".}
proc glTestFenceNV*(fence: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glTestFenceNV".}
proc glFinishFenceNV*(fence: TGLuint){.dynlib: dllname, 
                                       importc: "glFinishFenceNV".}
proc glIsFenceNV*(fence: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsFenceNV".}
proc glGetFenceivNV*(fence: TGLuint, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetFenceivNV".}
  #***** GL_NV_fog_distance *****//
const 
  GlFogDistanceModeNv* = 0x0000855A
  GlEyeRadialNv* = 0x0000855B
  GlEyePlaneAbsoluteNv* = 0x0000855C
  #***** GL_NV_light_max_exponent *****//

const 
  GlMaxShininessNv* = 0x00008504
  GlMaxSpotExponentNv* = 0x00008505
  #***** GL_NV_multisample_filter_hint *****//

const 
  GlMultisampleFilterHintNv* = 0x00008534
  #***** GL_NV_occlusion_query *****//
  # GL_OCCLUSION_TEST_HP  { already defined }
  # GL_OCCLUSION_TEST_RESULT_HP  { already defined }

const 
  GlPixelCounterBitsNv* = 0x00008864
  GlCurrentOcclusionQueryIdNv* = 0x00008865
  GlPixelCountNv* = 0x00008866
  GlPixelCountAvailableNv* = 0x00008867

proc glGenOcclusionQueriesNV*(n: TGLsizei, ids: PGLuint){.dynlib: dllname, 
    importc: "glGenOcclusionQueriesNV".}
proc glDeleteOcclusionQueriesNV*(n: TGLsizei, ids: PGLuint){.dynlib: dllname, 
    importc: "glDeleteOcclusionQueriesNV".}
proc glIsOcclusionQueryNV*(id: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsOcclusionQueryNV".}
proc glBeginOcclusionQueryNV*(id: TGLuint){.dynlib: dllname, 
    importc: "glBeginOcclusionQueryNV".}
proc glEndOcclusionQueryNV*(){.dynlib: dllname, importc: "glEndOcclusionQueryNV".}
proc glGetOcclusionQueryivNV*(id: TGLuint, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetOcclusionQueryivNV".}
proc glGetOcclusionQueryuivNV*(id: TGLuint, pname: TGLenum, params: PGLuint){.
    dynlib: dllname, importc: "glGetOcclusionQueryuivNV".}
  #***** GL_NV_packed_depth_stencil *****//
const 
  GlDepthStencilNv* = 0x000084F9
  GlUnsignedInt248Nv* = 0x000084FA
  #***** GL_NV_point_sprite *****//

const 
  GlPointSpriteNv* = 0x00008861
  GlCoordReplaceNv* = 0x00008862
  GlPointSpriteRModeNv* = 0x00008863

proc glPointParameteriNV*(pname: TGLenum, param: TGLint){.dynlib: dllname, 
    importc: "glPointParameteriNV".}
proc glPointParameterivNV*(pname: TGLenum, params: PGLint){.dynlib: dllname, 
    importc: "glPointParameterivNV".}
  #***** GL_NV_register_combiners *****//
const 
  GlRegisterCombinersNv* = 0x00008522
  GlCombiner0Nv* = 0x00008550
  GlCombiner1Nv* = 0x00008551
  GlCombiner2Nv* = 0x00008552
  GlCombiner3Nv* = 0x00008553
  GlCombiner4Nv* = 0x00008554
  GlCombiner5Nv* = 0x00008555
  GlCombiner6Nv* = 0x00008556
  GlCombiner7Nv* = 0x00008557
  GlVariableANv* = 0x00008523
  GlVariableBNv* = 0x00008524
  GlVariableCNv* = 0x00008525
  GlVariableDNv* = 0x00008526
  GlVariableENv* = 0x00008527
  GlVariableFNv* = 0x00008528
  GlVariableGNv* = 0x00008529
  GlConstantColor0Nv* = 0x0000852A
  GlConstantColor1Nv* = 0x0000852B
  GlPrimaryColorNv* = 0x0000852C
  GlSecondaryColorNv* = 0x0000852D
  GlSpare0Nv* = 0x0000852E
  GlSpare1Nv* = 0x0000852F
  GlUnsignedIdentityNv* = 0x00008536
  GlUnsignedInvertNv* = 0x00008537
  GlExpandNormalNv* = 0x00008538
  GlExpandNegateNv* = 0x00008539
  GlHalfBiasNormalNv* = 0x0000853A
  GlHalfBiasNegateNv* = 0x0000853B
  GlSignedIdentityNv* = 0x0000853C
  GlSignedNegateNv* = 0x0000853D
  GlETimesFNv* = 0x00008531
  GlSpare0PlusSecondaryColorNv* = 0x00008532
  GlScaleByTwoNv* = 0x0000853E
  GlScaleByFourNv* = 0x0000853F
  GlScaleByOneHalfNv* = 0x00008540
  GlBiasByNegativeOneHalfNv* = 0x00008541
  GlDiscardNv* = 0x00008530
  constGLCOMBINERINPUTNV* = 0x00008542
  GlCombinerMappingNv* = 0x00008543
  GlCombinerComponentUsageNv* = 0x00008544
  GlCombinerAbDotProductNv* = 0x00008545
  GlCombinerCdDotProductNv* = 0x00008546
  GlCombinerMuxSumNv* = 0x00008547
  GlCombinerScaleNv* = 0x00008548
  GlCombinerBiasNv* = 0x00008549
  GlCombinerAbOutputNv* = 0x0000854A
  GlCombinerCdOutputNv* = 0x0000854B
  GlCombinerSumOutputNv* = 0x0000854C
  GlNumGeneralCombinersNv* = 0x0000854E
  GlColorSumClampNv* = 0x0000854F
  GlMaxGeneralCombinersNv* = 0x0000854D

proc glCombinerParameterfvNV*(pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glCombinerParameterfvNV".}
proc glCombinerParameterivNV*(pname: TGLenum, params: PGLint){.dynlib: dllname, 
    importc: "glCombinerParameterivNV".}
proc glCombinerParameterfNV*(pname: TGLenum, param: TGLfloat){.dynlib: dllname, 
    importc: "glCombinerParameterfNV".}
proc glCombinerParameteriNV*(pname: TGLenum, param: TGLint){.dynlib: dllname, 
    importc: "glCombinerParameteriNV".}
proc glCombinerInputNV*(stage: TGLenum, portion: TGLenum, variable: TGLenum, 
                        input: TGLenum, mapping: TGLenum, 
                        componentUsage: TGLenum){.dynlib: dllname, 
    importc: "glCombinerInputNV".}
proc glCombinerOutputNV*(stage: TGLenum, portion: TGLenum, abOutput: TGLenum, 
                         cdOutput: TGLenum, sumOutput: TGLenum, scale: TGLenum, 
                         bias: TGLenum, abDotProduct: TGLboolean, 
                         cdDotProduct: TGLboolean, muxSum: TGLboolean){.
    dynlib: dllname, importc: "glCombinerOutputNV".}
proc glFinalCombinerInputNV*(variable: TGLenum, input: TGLenum, 
                             mapping: TGLenum, componentUsage: TGLenum){.
    dynlib: dllname, importc: "glFinalCombinerInputNV".}
proc glGetCombinerInputParameterfvNV*(stage: TGLenum, portion: TGLenum, 
                                      variable: TGLenum, pname: TGLenum, 
                                      params: PGLfloat){.dynlib: dllname, 
    importc: "glGetCombinerInputParameterfvNV".}
proc glGetCombinerInputParameterivNV*(stage: TGLenum, portion: TGLenum, 
                                      variable: TGLenum, pname: TGLenum, 
                                      params: PGLint){.dynlib: dllname, 
    importc: "glGetCombinerInputParameterivNV".}
proc glGetCombinerOutputParameterfvNV*(stage: TGLenum, portion: TGLenum, 
                                       pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glGetCombinerOutputParameterfvNV".}
proc glGetCombinerOutputParameterivNV*(stage: TGLenum, portion: TGLenum, 
                                       pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetCombinerOutputParameterivNV".}
proc glGetFinalCombinerInputParameterfvNV*(variable: TGLenum, pname: TGLenum, 
    params: PGLfloat){.dynlib: dllname, 
                       importc: "glGetFinalCombinerInputParameterfvNV".}
proc glGetFinalCombinerInputParameterivNV*(variable: TGLenum, pname: TGLenum, 
    params: PGLint){.dynlib: dllname, 
                     importc: "glGetFinalCombinerInputParameterivNV".}
  #***** GL_NV_register_combiners2 *****//
const 
  GlPerStageConstantsNv* = 0x00008535

proc glCombinerStageParameterfvNV*(stage: TGLenum, pname: TGLenum, 
                                   params: PGLfloat){.dynlib: dllname, 
    importc: "glCombinerStageParameterfvNV".}
proc glGetCombinerStageParameterfvNV*(stage: TGLenum, pname: TGLenum, 
                                      params: PGLfloat){.dynlib: dllname, 
    importc: "glGetCombinerStageParameterfvNV".}
  #***** GL_NV_texgen_emboss *****//
const 
  GlEmbossMapNv* = 0x0000855F
  GlEmbossLightNv* = 0x0000855D
  GlEmbossConstantNv* = 0x0000855E
  #***** GL_NV_texgen_reflection *****//

const 
  GlNormalMapNv* = 0x00008511
  GlReflectionMapNv* = 0x00008512
  #***** GL_NV_texture_compression_vtc *****//
  # GL_COMPRESSED_RGB_S3TC_DXT1_EXT  { already defined }
  # GL_COMPRESSED_RGBA_S3TC_DXT1_EXT  { already defined }
  # GL_COMPRESSED_RGBA_S3TC_DXT3_EXT  { already defined }
  # GL_COMPRESSED_RGBA_S3TC_DXT5_EXT  { already defined }
  #***** GL_NV_texture_env_combine4 *****//

const 
  GlCombine4Nv* = 0x00008503
  GlSource3RgbNv* = 0x00008583
  GlSource3AlphaNv* = 0x0000858B
  GlOperand3RgbNv* = 0x00008593
  GlOperand3AlphaNv* = 0x0000859B
  #***** GL_NV_texture_rectangle *****//

const 
  GlTextureRectangleNv* = 0x000084F5
  GlTextureBindingRectangleNv* = 0x000084F6
  GlProxyTextureRectangleNv* = 0x000084F7
  GlMaxRectangleTextureSizeNv* = 0x000084F8
  #***** GL_NV_texture_shader *****//

const 
  GlTextureShaderNv* = 0x000086DE
  GlRgbaUnsignedDotProductMappingNv* = 0x000086D9
  GlShaderOperationNv* = 0x000086DF
  GlCullModesNv* = 0x000086E0
  GlOffsetTextureMatrixNv* = 0x000086E1
  GlOffsetTextureScaleNv* = 0x000086E2
  GlOffsetTextureBiasNv* = 0x000086E3
  GlPreviousTextureInputNv* = 0x000086E4
  GlConstEyeNv* = 0x000086E5
  GlShaderConsistentNv* = 0x000086DD
  GlPassThroughNv* = 0x000086E6
  GlCullFragmentNv* = 0x000086E7
  GlOffsetTexture2dNv* = 0x000086E8
  GlOffsetTextureRectangleNv* = 0x0000864C
  GlOffsetTextureRectangleScaleNv* = 0x0000864D
  GlDependentArTexture2dNv* = 0x000086E9
  GlDependentGbTexture2dNv* = 0x000086EA
  GlDotProductNv* = 0x000086EC
  GlDotProductDepthReplaceNv* = 0x000086ED
  GlDotProductTexture2dNv* = 0x000086EE
  GlDotProductTextureRectangleNv* = 0x0000864E
  GlDotProductTextureCubeMapNv* = 0x000086F0
  GlDotProductDiffuseCubeMapNv* = 0x000086F1
  GlDotProductReflectCubeMapNv* = 0x000086F2
  GlDotProductConstEyeReflectCubeMapNv* = 0x000086F3
  GlHiloNv* = 0x000086F4
  GlDsdtNv* = 0x000086F5
  GlDsdtMagNv* = 0x000086F6
  GlDsdtMagVibNv* = 0x000086F7
  GlUnsignedIntS8S888Nv* = 0x000086DA
  GlUnsignedInt88S8S8RevNv* = 0x000086DB
  GlSignedRgbaNv* = 0x000086FB
  GlSignedRgba8Nv* = 0x000086FC
  GlSignedRgbNv* = 0x000086FE
  GlSignedRgb8Nv* = 0x000086FF
  GlSignedLuminanceNv* = 0x00008701
  GlSignedLuminance8Nv* = 0x00008702
  GlSignedLuminanceAlphaNv* = 0x00008703
  GlSignedLuminance8Alpha8Nv* = 0x00008704
  GlSignedAlphaNv* = 0x00008705
  GlSignedAlpha8Nv* = 0x00008706
  GlSignedIntensityNv* = 0x00008707
  GlSignedIntensity8Nv* = 0x00008708
  GlSignedRgbUnsignedAlphaNv* = 0x0000870C
  GlSignedRgb8UnsignedAlpha8Nv* = 0x0000870D
  GlHilo16Nv* = 0x000086F8
  GlSignedHiloNv* = 0x000086F9
  GlSignedHilo16Nv* = 0x000086FA
  GlDsdt8Nv* = 0x00008709
  GlDsdt8Mag8Nv* = 0x0000870A
  GlDsdtMagIntensityNv* = 0x000086DC
  GlDsdt8Mag8Intensity8Nv* = 0x0000870B
  GlHiScaleNv* = 0x0000870E
  GlLoScaleNv* = 0x0000870F
  GlDsScaleNv* = 0x00008710
  GlDtScaleNv* = 0x00008711
  GlMagnitudeScaleNv* = 0x00008712
  GlVibranceScaleNv* = 0x00008713
  GlHiBiasNv* = 0x00008714
  GlLoBiasNv* = 0x00008715
  GlDsBiasNv* = 0x00008716
  GlDtBiasNv* = 0x00008717
  GlMagnitudeBiasNv* = 0x00008718
  GlVibranceBiasNv* = 0x00008719
  GlTextureBorderValuesNv* = 0x0000871A
  GlTextureHiSizeNv* = 0x0000871B
  GlTextureLoSizeNv* = 0x0000871C
  GlTextureDsSizeNv* = 0x0000871D
  GlTextureDtSizeNv* = 0x0000871E
  GlTextureMagSizeNv* = 0x0000871F
  #***** GL_NV_texture_shader2 *****//

const 
  GlDotProductTexture3dNv* = 0x000086EF # GL_HILO_NV  { already defined }
                                             # GL_DSDT_NV  { already defined }
                                             # GL_DSDT_MAG_NV  { already defined }
                                             # GL_DSDT_MAG_VIB_NV  { already defined }
                                             # GL_UNSIGNED_INT_S8_S8_8_8_NV  { already defined }
                                             # GL_UNSIGNED_INT_8_8_S8_S8_REV_NV  { already defined }
                                             # GL_SIGNED_RGBA_NV  { already defined }
                                             # GL_SIGNED_RGBA8_NV  { already defined }
                                             # GL_SIGNED_RGB_NV  { already defined }
                                             # GL_SIGNED_RGB8_NV  { already defined }
                                             # GL_SIGNED_LUMINANCE_NV  { already defined }
                                             # GL_SIGNED_LUMINANCE8_NV  { already defined }
                                             # GL_SIGNED_LUMINANCE_ALPHA_NV  { already defined }
                                             # GL_SIGNED_LUMINANCE8_ALPHA8_NV  { already defined }
                                             # GL_SIGNED_ALPHA_NV  { already defined }
                                             # GL_SIGNED_ALPHA8_NV  { already defined }
                                             # GL_SIGNED_INTENSITY_NV  { already defined }
                                             # GL_SIGNED_INTENSITY8_NV  { already defined }
                                             # GL_SIGNED_RGB_UNSIGNED_ALPHA_NV  { already defined }
                                             # GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV  { already defined }
                                             # GL_HILO16_NV  { already defined }
                                             # GL_SIGNED_HILO_NV  { already defined }
                                             # GL_SIGNED_HILO16_NV  { already defined }
                                             # GL_DSDT8_NV  { already defined }
                                             # GL_DSDT8_MAG8_NV  { already defined }
                                             # GL_DSDT_MAG_INTENSITY_NV  { already defined }
                                             # GL_DSDT8_MAG8_INTENSITY8_NV  { already defined }
  #***** GL_NV_texture_shader3 *****//

const 
  GlOffsetProjectiveTexture2dNv* = 0x00008850
  GlOffsetProjectiveTexture2dScaleNv* = 0x00008851
  GlOffsetProjectiveTextureRectangleNv* = 0x00008852
  GlOffsetProjectiveTextureRectangleScaleNv* = 0x00008853
  GlOffsetHiloTexture2dNv* = 0x00008854
  GlOffsetHiloTextureRectangleNv* = 0x00008855
  GlOffsetHiloProjectiveTexture2dNv* = 0x00008856
  GlOffsetHiloProjectiveTextureRectangleNv* = 0x00008857
  GlDependentHiloTexture2dNv* = 0x00008858
  GlDependentRgbTexture3dNv* = 0x00008859
  GlDependentRgbTextureCubeMapNv* = 0x0000885A
  GlDotProductPassThroughNv* = 0x0000885B
  GlDotProductTexture1dNv* = 0x0000885C
  GlDotProductAffineDepthReplaceNv* = 0x0000885D
  GlHilo8Nv* = 0x0000885E
  GlSignedHilo8Nv* = 0x0000885F
  GlForceBlueToOneNv* = 0x00008860
  #***** GL_NV_vertex_array_range *****//

const 
  constGLVERTEXARRAYRANGENV* = 0x0000851D
  GlVertexArrayRangeLengthNv* = 0x0000851E
  GlVertexArrayRangeValidNv* = 0x0000851F
  GlMaxVertexArrayRangeElementNv* = 0x00008520
  GlVertexArrayRangePointerNv* = 0x00008521

proc glVertexArrayRangeNV*(len: TGLsizei, pointer: PGLvoid){.dynlib: dllname, 
    importc: "glVertexArrayRangeNV".}
proc glFlushVertexArrayRangeNV*(){.dynlib: dllname, 
                                   importc: "glFlushVertexArrayRangeNV".}
  #***** GL_NV_vertex_array_range2 *****//
const 
  GlVertexArrayRangeWithoutFlushNv* = 0x00008533
  #***** GL_NV_vertex_program *****//

const 
  GlVertexProgramNv* = 0x00008620
  GlVertexProgramPointSizeNv* = 0x00008642
  GlVertexProgramTwoSideNv* = 0x00008643
  GlVertexStateProgramNv* = 0x00008621
  GlAttribArraySizeNv* = 0x00008623
  GlAttribArrayStrideNv* = 0x00008624
  GlAttribArrayTypeNv* = 0x00008625
  GlCurrentAttribNv* = 0x00008626
  GlProgramParameterNv* = 0x00008644
  GlAttribArrayPointerNv* = 0x00008645
  GlProgramTargetNv* = 0x00008646
  GlProgramLengthNv* = 0x00008627
  GlProgramResidentNv* = 0x00008647
  GlProgramStringNv* = 0x00008628
  constGLTRACKMATRIXNV* = 0x00008648
  GlTrackMatrixTransformNv* = 0x00008649
  GlMaxTrackMatrixStackDepthNv* = 0x0000862E
  GlMaxTrackMatricesNv* = 0x0000862F
  GlCurrentMatrixStackDepthNv* = 0x00008640
  GlCurrentMatrixNv* = 0x00008641
  GlVertexProgramBindingNv* = 0x0000864A
  GlProgramErrorPositionNv* = 0x0000864B
  GlModelviewProjectionNv* = 0x00008629
  GlMatrix0Nv* = 0x00008630
  GlMatrix1Nv* = 0x00008631
  GlMatrix2Nv* = 0x00008632
  GlMatrix3Nv* = 0x00008633
  GlMatrix4Nv* = 0x00008634
  GlMatrix5Nv* = 0x00008635
  GlMatrix6Nv* = 0x00008636
  GlMatrix7Nv* = 0x00008637
  GlIdentityNv* = 0x0000862A
  GlInverseNv* = 0x0000862B
  GlTransposeNv* = 0x0000862C
  GlInverseTransposeNv* = 0x0000862D
  GlVertexAttribArray0Nv* = 0x00008650
  GlVertexAttribArray1Nv* = 0x00008651
  GlVertexAttribArray2Nv* = 0x00008652
  GlVertexAttribArray3Nv* = 0x00008653
  GlVertexAttribArray4Nv* = 0x00008654
  GlVertexAttribArray5Nv* = 0x00008655
  GlVertexAttribArray6Nv* = 0x00008656
  GlVertexAttribArray7Nv* = 0x00008657
  GlVertexAttribArray8Nv* = 0x00008658
  GlVertexAttribArray9Nv* = 0x00008659
  GlVertexAttribArray10Nv* = 0x0000865A
  GlVertexAttribArray11Nv* = 0x0000865B
  GlVertexAttribArray12Nv* = 0x0000865C
  GlVertexAttribArray13Nv* = 0x0000865D
  GlVertexAttribArray14Nv* = 0x0000865E
  GlVertexAttribArray15Nv* = 0x0000865F
  GlMap1VertexAttrib04Nv* = 0x00008660
  GlMap1VertexAttrib14Nv* = 0x00008661
  GlMap1VertexAttrib24Nv* = 0x00008662
  GlMap1VertexAttrib34Nv* = 0x00008663
  GlMap1VertexAttrib44Nv* = 0x00008664
  GlMap1VertexAttrib54Nv* = 0x00008665
  GlMap1VertexAttrib64Nv* = 0x00008666
  GlMap1VertexAttrib74Nv* = 0x00008667
  GlMap1VertexAttrib84Nv* = 0x00008668
  GlMap1VertexAttrib94Nv* = 0x00008669
  GlMap1VertexAttrib104Nv* = 0x0000866A
  GlMap1VertexAttrib114Nv* = 0x0000866B
  GlMap1VertexAttrib124Nv* = 0x0000866C
  GlMap1VertexAttrib134Nv* = 0x0000866D
  GlMap1VertexAttrib144Nv* = 0x0000866E
  GlMap1VertexAttrib154Nv* = 0x0000866F
  GlMap2VertexAttrib04Nv* = 0x00008670
  GlMap2VertexAttrib14Nv* = 0x00008671
  GlMap2VertexAttrib24Nv* = 0x00008672
  GlMap2VertexAttrib34Nv* = 0x00008673
  GlMap2VertexAttrib44Nv* = 0x00008674
  GlMap2VertexAttrib54Nv* = 0x00008675
  GlMap2VertexAttrib64Nv* = 0x00008676
  GlMap2VertexAttrib74Nv* = 0x00008677
  GlMap2VertexAttrib84Nv* = 0x00008678
  GlMap2VertexAttrib94Nv* = 0x00008679
  GlMap2VertexAttrib104Nv* = 0x0000867A
  GlMap2VertexAttrib114Nv* = 0x0000867B
  GlMap2VertexAttrib124Nv* = 0x0000867C
  GlMap2VertexAttrib134Nv* = 0x0000867D
  GlMap2VertexAttrib144Nv* = 0x0000867E
  GlMap2VertexAttrib154Nv* = 0x0000867F

proc glBindProgramNV*(target: TGLenum, id: TGLuint){.dynlib: dllname, 
    importc: "glBindProgramNV".}
proc glDeleteProgramsNV*(n: TGLsizei, ids: PGLuint){.dynlib: dllname, 
    importc: "glDeleteProgramsNV".}
proc glExecuteProgramNV*(target: TGLenum, id: TGLuint, params: PGLfloat){.
    dynlib: dllname, importc: "glExecuteProgramNV".}
proc glGenProgramsNV*(n: TGLsizei, ids: PGLuint){.dynlib: dllname, 
    importc: "glGenProgramsNV".}
proc glAreProgramsResidentNV*(n: TGLsizei, ids: PGLuint, residences: PGLboolean): TGLboolean{.
    dynlib: dllname, importc: "glAreProgramsResidentNV".}
proc glRequestResidentProgramsNV*(n: TGLsizei, ids: PGLuint){.dynlib: dllname, 
    importc: "glRequestResidentProgramsNV".}
proc glGetProgramParameterfvNV*(target: TGLenum, index: TGLuint, pname: TGLenum, 
                                params: PGLfloat){.dynlib: dllname, 
    importc: "glGetProgramParameterfvNV".}
proc glGetProgramParameterdvNV*(target: TGLenum, index: TGLuint, pname: TGLenum, 
                                params: PGLdouble){.dynlib: dllname, 
    importc: "glGetProgramParameterdvNV".}
proc glGetProgramivNV*(id: TGLuint, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetProgramivNV".}
proc glGetProgramStringNV*(id: TGLuint, pname: TGLenum, theProgram: PGLubyte){.
    dynlib: dllname, importc: "glGetProgramStringNV".}
proc glGetTrackMatrixivNV*(target: TGLenum, address: TGLuint, pname: TGLenum, 
                           params: PGLint){.dynlib: dllname, 
    importc: "glGetTrackMatrixivNV".}
proc glGetVertexAttribdvNV*(index: TGLuint, pname: TGLenum, params: PGLdouble){.
    dynlib: dllname, importc: "glGetVertexAttribdvNV".}
proc glGetVertexAttribfvNV*(index: TGLuint, pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glGetVertexAttribfvNV".}
proc glGetVertexAttribivNV*(index: TGLuint, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetVertexAttribivNV".}
proc glGetVertexAttribPointervNV*(index: TGLuint, pname: TGLenum, 
                                  pointer: PGLvoid){.dynlib: dllname, 
    importc: "glGetVertexAttribPointervNV".}
proc glIsProgramNV*(id: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsProgramNV".}
proc glLoadProgramNV*(target: TGLenum, id: TGLuint, length: TGLsizei, 
                      theProgram: PGLubyte){.dynlib: dllname, 
    importc: "glLoadProgramNV".}
proc glProgramParameter4fNV*(target: TGLenum, index: TGLuint, x: TGLfloat, 
                             y: TGLfloat, z: TGLfloat, w: TGLfloat){.
    dynlib: dllname, importc: "glProgramParameter4fNV".}
proc glProgramParameter4fvNV*(target: TGLenum, index: TGLuint, params: PGLfloat){.
    dynlib: dllname, importc: "glProgramParameter4fvNV".}
proc glProgramParameters4dvNV*(target: TGLenum, index: TGLuint, num: TGLuint, 
                               params: PGLdouble){.dynlib: dllname, 
    importc: "glProgramParameters4dvNV".}
proc glProgramParameters4fvNV*(target: TGLenum, index: TGLuint, num: TGLuint, 
                               params: PGLfloat){.dynlib: dllname, 
    importc: "glProgramParameters4fvNV".}
proc glTrackMatrixNV*(target: TGLenum, address: TGLuint, matrix: TGLenum, 
                      transform: TGLenum){.dynlib: dllname, 
    importc: "glTrackMatrixNV".}
proc glVertexAttribPointerNV*(index: TGLuint, size: TGLint, thetype: TGLenum, 
                              stride: TGLsizei, pointer: PGLvoid){.
    dynlib: dllname, importc: "glVertexAttribPointerNV".}
proc glVertexAttrib1sNV*(index: TGLuint, x: TGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib1sNV".}
proc glVertexAttrib1fNV*(index: TGLuint, x: TGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib1fNV".}
proc glVertexAttrib1dNV*(index: TGLuint, x: TGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib1dNV".}
proc glVertexAttrib2sNV*(index: TGLuint, x: TGLshort, y: TGLshort){.
    dynlib: dllname, importc: "glVertexAttrib2sNV".}
proc glVertexAttrib2fNV*(index: TGLuint, x: TGLfloat, y: TGLfloat){.
    dynlib: dllname, importc: "glVertexAttrib2fNV".}
proc glVertexAttrib2dNV*(index: TGLuint, x: TGLdouble, y: TGLdouble){.
    dynlib: dllname, importc: "glVertexAttrib2dNV".}
proc glVertexAttrib3sNV*(index: TGLuint, x: TGLshort, y: TGLshort, z: TGLshort){.
    dynlib: dllname, importc: "glVertexAttrib3sNV".}
proc glVertexAttrib3fNV*(index: TGLuint, x: TGLfloat, y: TGLfloat, z: TGLfloat){.
    dynlib: dllname, importc: "glVertexAttrib3fNV".}
proc glVertexAttrib3dNV*(index: TGLuint, x: TGLdouble, y: TGLdouble, 
                         z: TGLdouble){.dynlib: dllname, 
                                        importc: "glVertexAttrib3dNV".}
proc glVertexAttrib4sNV*(index: TGLuint, x: TGLshort, y: TGLshort, z: TGLshort, 
                         w: TGLshort){.dynlib: dllname, 
                                       importc: "glVertexAttrib4sNV".}
proc glVertexAttrib4fNV*(index: TGLuint, x: TGLfloat, y: TGLfloat, z: TGLfloat, 
                         w: TGLfloat){.dynlib: dllname, 
                                       importc: "glVertexAttrib4fNV".}
proc glVertexAttrib4dNV*(index: TGLuint, x: TGLdouble, y: TGLdouble, 
                         z: TGLdouble, w: TGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib4dNV".}
proc glVertexAttrib4ubNV*(index: TGLuint, x: TGLubyte, y: TGLubyte, z: TGLubyte, 
                          w: TGLubyte){.dynlib: dllname, 
                                        importc: "glVertexAttrib4ubNV".}
proc glVertexAttrib1svNV*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib1svNV".}
proc glVertexAttrib1fvNV*(index: TGLuint, v: PGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib1fvNV".}
proc glVertexAttrib1dvNV*(index: TGLuint, v: PGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib1dvNV".}
proc glVertexAttrib2svNV*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib2svNV".}
proc glVertexAttrib2fvNV*(index: TGLuint, v: PGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib2fvNV".}
proc glVertexAttrib2dvNV*(index: TGLuint, v: PGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib2dvNV".}
proc glVertexAttrib3svNV*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib3svNV".}
proc glVertexAttrib3fvNV*(index: TGLuint, v: PGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib3fvNV".}
proc glVertexAttrib3dvNV*(index: TGLuint, v: PGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib3dvNV".}
proc glVertexAttrib4svNV*(index: TGLuint, v: PGLshort){.dynlib: dllname, 
    importc: "glVertexAttrib4svNV".}
proc glVertexAttrib4fvNV*(index: TGLuint, v: PGLfloat){.dynlib: dllname, 
    importc: "glVertexAttrib4fvNV".}
proc glVertexAttrib4dvNV*(index: TGLuint, v: PGLdouble){.dynlib: dllname, 
    importc: "glVertexAttrib4dvNV".}
proc glVertexAttrib4ubvNV*(index: TGLuint, v: PGLubyte){.dynlib: dllname, 
    importc: "glVertexAttrib4ubvNV".}
proc glVertexAttribs1svNV*(index: TGLuint, n: TGLsizei, v: PGLshort){.
    dynlib: dllname, importc: "glVertexAttribs1svNV".}
proc glVertexAttribs1fvNV*(index: TGLuint, n: TGLsizei, v: PGLfloat){.
    dynlib: dllname, importc: "glVertexAttribs1fvNV".}
proc glVertexAttribs1dvNV*(index: TGLuint, n: TGLsizei, v: PGLdouble){.
    dynlib: dllname, importc: "glVertexAttribs1dvNV".}
proc glVertexAttribs2svNV*(index: TGLuint, n: TGLsizei, v: PGLshort){.
    dynlib: dllname, importc: "glVertexAttribs2svNV".}
proc glVertexAttribs2fvNV*(index: TGLuint, n: TGLsizei, v: PGLfloat){.
    dynlib: dllname, importc: "glVertexAttribs2fvNV".}
proc glVertexAttribs2dvNV*(index: TGLuint, n: TGLsizei, v: PGLdouble){.
    dynlib: dllname, importc: "glVertexAttribs2dvNV".}
proc glVertexAttribs3svNV*(index: TGLuint, n: TGLsizei, v: PGLshort){.
    dynlib: dllname, importc: "glVertexAttribs3svNV".}
proc glVertexAttribs3fvNV*(index: TGLuint, n: TGLsizei, v: PGLfloat){.
    dynlib: dllname, importc: "glVertexAttribs3fvNV".}
proc glVertexAttribs3dvNV*(index: TGLuint, n: TGLsizei, v: PGLdouble){.
    dynlib: dllname, importc: "glVertexAttribs3dvNV".}
proc glVertexAttribs4svNV*(index: TGLuint, n: TGLsizei, v: PGLshort){.
    dynlib: dllname, importc: "glVertexAttribs4svNV".}
proc glVertexAttribs4fvNV*(index: TGLuint, n: TGLsizei, v: PGLfloat){.
    dynlib: dllname, importc: "glVertexAttribs4fvNV".}
proc glVertexAttribs4dvNV*(index: TGLuint, n: TGLsizei, v: PGLdouble){.
    dynlib: dllname, importc: "glVertexAttribs4dvNV".}
proc glVertexAttribs4ubvNV*(index: TGLuint, n: TGLsizei, v: PGLubyte){.
    dynlib: dllname, importc: "glVertexAttribs4ubvNV".}
  #***** GL_NV_vertex_program1_1 *****//
  #***** GL_ATI_element_array *****//
const 
  GlElementArrayAti* = 0x00008768
  GlElementArrayTypeAti* = 0x00008769
  GlElementArrayPointerAti* = 0x0000876A

proc glElementPointerATI*(thetype: TGLenum, pointer: PGLvoid){.dynlib: dllname, 
    importc: "glElementPointerATI".}
proc glDrawElementArrayATI*(mode: TGLenum, count: TGLsizei){.dynlib: dllname, 
    importc: "glDrawElementArrayATI".}
proc glDrawRangeElementArrayATI*(mode: TGLenum, start: TGLuint, theend: TGLuint, 
                                 count: TGLsizei){.dynlib: dllname, 
    importc: "glDrawRangeElementArrayATI".}
  #***** GL_ATI_envmap_bumpmap *****//
const 
  GlBumpRotMatrixAti* = 0x00008775
  GlBumpRotMatrixSizeAti* = 0x00008776
  GlBumpNumTexUnitsAti* = 0x00008777
  GlBumpTexUnitsAti* = 0x00008778
  GlDudvAti* = 0x00008779
  GlDu8dv8Ati* = 0x0000877A
  GlBumpEnvmapAti* = 0x0000877B
  GlBumpTargetAti* = 0x0000877C

proc glTexBumpParameterivATI*(pname: TGLenum, param: PGLint){.dynlib: dllname, 
    importc: "glTexBumpParameterivATI".}
proc glTexBumpParameterfvATI*(pname: TGLenum, param: PGLfloat){.dynlib: dllname, 
    importc: "glTexBumpParameterfvATI".}
proc glGetTexBumpParameterivATI*(pname: TGLenum, param: PGLint){.
    dynlib: dllname, importc: "glGetTexBumpParameterivATI".}
proc glGetTexBumpParameterfvATI*(pname: TGLenum, param: PGLfloat){.
    dynlib: dllname, importc: "glGetTexBumpParameterfvATI".}
  #***** GL_ATI_fragment_shader *****//
const 
  GlFragmentShaderAti* = 0x00008920
  GlReg0Ati* = 0x00008921
  GlReg1Ati* = 0x00008922
  GlReg2Ati* = 0x00008923
  GlReg3Ati* = 0x00008924
  GlReg4Ati* = 0x00008925
  GlReg5Ati* = 0x00008926
  GlCon0Ati* = 0x00008941
  GlCon1Ati* = 0x00008942
  GlCon2Ati* = 0x00008943
  GlCon3Ati* = 0x00008944
  GlCon4Ati* = 0x00008945
  GlCon5Ati* = 0x00008946
  GlCon6Ati* = 0x00008947
  GlCon7Ati* = 0x00008948
  GlMovAti* = 0x00008961
  GlAddAti* = 0x00008963
  GlMulAti* = 0x00008964
  GlSubAti* = 0x00008965
  GlDot3Ati* = 0x00008966
  GlDot4Ati* = 0x00008967
  GlMadAti* = 0x00008968
  GlLerpAti* = 0x00008969
  GlCndAti* = 0x0000896A
  GlCnd0Ati* = 0x0000896B
  GlDot2AddAti* = 0x0000896C
  GlSecondaryInterpolatorAti* = 0x0000896D
  GlSwizzleStrAti* = 0x00008976
  GlSwizzleStqAti* = 0x00008977
  GlSwizzleStrDrAti* = 0x00008978
  GlSwizzleStqDqAti* = 0x00008979
  GlRedBitAti* = 0x00000001
  GlGreenBitAti* = 0x00000002
  GlBlueBitAti* = 0x00000004
  Gl2xBitAti* = 0x00000001
  Gl4xBitAti* = 0x00000002
  Gl8xBitAti* = 0x00000004
  GlHalfBitAti* = 0x00000008
  GlQuarterBitAti* = 0x00000010
  GlEighthBitAti* = 0x00000020
  GlSaturateBitAti* = 0x00000040 # GL_2X_BIT_ATI  { already defined }
  GlCompBitAti* = 0x00000002
  GlNegateBitAti* = 0x00000004
  GlBiasBitAti* = 0x00000008

proc glGenFragmentShadersATI*(range: TGLuint): TGLuint{.dynlib: dllname, 
    importc: "glGenFragmentShadersATI".}
proc glBindFragmentShaderATI*(id: TGLuint){.dynlib: dllname, 
    importc: "glBindFragmentShaderATI".}
proc glDeleteFragmentShaderATI*(id: TGLuint){.dynlib: dllname, 
    importc: "glDeleteFragmentShaderATI".}
proc glBeginFragmentShaderATI*(){.dynlib: dllname, 
                                  importc: "glBeginFragmentShaderATI".}
proc glEndFragmentShaderATI*(){.dynlib: dllname, 
                                importc: "glEndFragmentShaderATI".}
proc glPassTexCoordATI*(dst: TGLuint, coord: TGLuint, swizzle: TGLenum){.
    dynlib: dllname, importc: "glPassTexCoordATI".}
proc glSampleMapATI*(dst: TGLuint, interp: TGLuint, swizzle: TGLenum){.
    dynlib: dllname, importc: "glSampleMapATI".}
proc glColorFragmentOp1ATI*(op: TGLenum, dst: TGLuint, dstMask: TGLuint, 
                            dstMod: TGLuint, arg1: TGLuint, arg1Rep: TGLuint, 
                            arg1Mod: TGLuint){.dynlib: dllname, 
    importc: "glColorFragmentOp1ATI".}
proc glColorFragmentOp2ATI*(op: TGLenum, dst: TGLuint, dstMask: TGLuint, 
                            dstMod: TGLuint, arg1: TGLuint, arg1Rep: TGLuint, 
                            arg1Mod: TGLuint, arg2: TGLuint, arg2Rep: TGLuint, 
                            arg2Mod: TGLuint){.dynlib: dllname, 
    importc: "glColorFragmentOp2ATI".}
proc glColorFragmentOp3ATI*(op: TGLenum, dst: TGLuint, dstMask: TGLuint, 
                            dstMod: TGLuint, arg1: TGLuint, arg1Rep: TGLuint, 
                            arg1Mod: TGLuint, arg2: TGLuint, arg2Rep: TGLuint, 
                            arg2Mod: TGLuint, arg3: TGLuint, arg3Rep: TGLuint, 
                            arg3Mod: TGLuint){.dynlib: dllname, 
    importc: "glColorFragmentOp3ATI".}
proc glAlphaFragmentOp1ATI*(op: TGLenum, dst: TGLuint, dstMod: TGLuint, 
                            arg1: TGLuint, arg1Rep: TGLuint, arg1Mod: TGLuint){.
    dynlib: dllname, importc: "glAlphaFragmentOp1ATI".}
proc glAlphaFragmentOp2ATI*(op: TGLenum, dst: TGLuint, dstMod: TGLuint, 
                            arg1: TGLuint, arg1Rep: TGLuint, arg1Mod: TGLuint, 
                            arg2: TGLuint, arg2Rep: TGLuint, arg2Mod: TGLuint){.
    dynlib: dllname, importc: "glAlphaFragmentOp2ATI".}
proc glAlphaFragmentOp3ATI*(op: TGLenum, dst: TGLuint, dstMod: TGLuint, 
                            arg1: TGLuint, arg1Rep: TGLuint, arg1Mod: TGLuint, 
                            arg2: TGLuint, arg2Rep: TGLuint, arg2Mod: TGLuint, 
                            arg3: TGLuint, arg3Rep: TGLuint, arg3Mod: TGLuint){.
    dynlib: dllname, importc: "glAlphaFragmentOp3ATI".}
proc glSetFragmentShaderConstantATI*(dst: TGLuint, value: PGLfloat){.
    dynlib: dllname, importc: "glSetFragmentShaderConstantATI".}
  #***** GL_ATI_pn_triangles *****//
const 
  GlPnTrianglesAti* = 0x000087F0
  GlMaxPnTrianglesTesselationLevelAti* = 0x000087F1
  GlPnTrianglesPointModeAti* = 0x000087F2
  GlPnTrianglesNormalModeAti* = 0x000087F3
  GlPnTrianglesTesselationLevelAti* = 0x000087F4
  GlPnTrianglesPointModeLinearAti* = 0x000087F5
  GlPnTrianglesPointModeCubicAti* = 0x000087F6
  GlPnTrianglesNormalModeLinearAti* = 0x000087F7
  GlPnTrianglesNormalModeQuadraticAti* = 0x000087F8

proc glPNTrianglesiATI*(pname: TGLenum, param: TGLint){.dynlib: dllname, 
    importc: "glPNTrianglesiATI".}
proc glPNTrianglesfATI*(pname: TGLenum, param: TGLfloat){.dynlib: dllname, 
    importc: "glPNTrianglesfATI".}
  #***** GL_ATI_texture_mirror_once *****//
const 
  GlMirrorClampAti* = 0x00008742
  GlMirrorClampToEdgeAti* = 0x00008743
  #***** GL_ATI_vertex_array_object *****//

const 
  GlStaticAti* = 0x00008760
  GlDynamicAti* = 0x00008761
  GlPreserveAti* = 0x00008762
  GlDiscardAti* = 0x00008763
  GlObjectBufferSizeAti* = 0x00008764
  GlObjectBufferUsageAti* = 0x00008765
  GlArrayObjectBufferAti* = 0x00008766
  GlArrayObjectOffsetAti* = 0x00008767

proc glNewObjectBufferATI*(size: TGLsizei, pointer: PGLvoid, usage: TGLenum): TGLuint{.
    dynlib: dllname, importc: "glNewObjectBufferATI".}
proc glIsObjectBufferATI*(buffer: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsObjectBufferATI".}
proc glUpdateObjectBufferATI*(buffer: TGLuint, offset: TGLuint, size: TGLsizei, 
                              pointer: PGLvoid, preserve: TGLenum){.
    dynlib: dllname, importc: "glUpdateObjectBufferATI".}
proc glGetObjectBufferfvATI*(buffer: TGLuint, pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glGetObjectBufferfvATI".}
proc glGetObjectBufferivATI*(buffer: TGLuint, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetObjectBufferivATI".}
proc glDeleteObjectBufferATI*(buffer: TGLuint){.dynlib: dllname, 
    importc: "glDeleteObjectBufferATI".}
proc glArrayObjectATI*(thearray: TGLenum, size: TGLint, thetype: TGLenum, 
                       stride: TGLsizei, buffer: TGLuint, offset: TGLuint){.
    dynlib: dllname, importc: "glArrayObjectATI".}
proc glGetArrayObjectfvATI*(thearray: TGLenum, pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glGetArrayObjectfvATI".}
proc glGetArrayObjectivATI*(thearray: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetArrayObjectivATI".}
proc glVariantArrayObjectATI*(id: TGLuint, thetype: TGLenum, stride: TGLsizei, 
                              buffer: TGLuint, offset: TGLuint){.
    dynlib: dllname, importc: "glVariantArrayObjectATI".}
proc glGetVariantArrayObjectfvATI*(id: TGLuint, pname: TGLenum, params: PGLfloat){.
    dynlib: dllname, importc: "glGetVariantArrayObjectfvATI".}
proc glGetVariantArrayObjectivATI*(id: TGLuint, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetVariantArrayObjectivATI".}
  #***** GL_ATI_vertex_streams *****//
const 
  GlMaxVertexStreamsAti* = 0x0000876B
  GlVertexStream0Ati* = 0x0000876C
  GlVertexStream1Ati* = 0x0000876D
  GlVertexStream2Ati* = 0x0000876E
  GlVertexStream3Ati* = 0x0000876F
  GlVertexStream4Ati* = 0x00008770
  GlVertexStream5Ati* = 0x00008771
  GlVertexStream6Ati* = 0x00008772
  GlVertexStream7Ati* = 0x00008773
  GlVertexSourceAti* = 0x00008774

proc glVertexStream1s*(stream: TGLenum, coords: TGLshort){.dynlib: dllname, 
    importc: "glVertexStream1s".}
proc glVertexStream1i*(stream: TGLenum, coords: TGLint){.dynlib: dllname, 
    importc: "glVertexStream1i".}
proc glVertexStream1f*(stream: TGLenum, coords: TGLfloat){.dynlib: dllname, 
    importc: "glVertexStream1f".}
proc glVertexStream1d*(stream: TGLenum, coords: TGLdouble){.dynlib: dllname, 
    importc: "glVertexStream1d".}
proc glVertexStream1sv*(stream: TGLenum, coords: TGLshort){.dynlib: dllname, 
    importc: "glVertexStream1sv".}
proc glVertexStream1iv*(stream: TGLenum, coords: TGLint){.dynlib: dllname, 
    importc: "glVertexStream1iv".}
proc glVertexStream1fv*(stream: TGLenum, coords: TGLfloat){.dynlib: dllname, 
    importc: "glVertexStream1fv".}
proc glVertexStream1dv*(stream: TGLenum, coords: TGLdouble){.dynlib: dllname, 
    importc: "glVertexStream1dv".}
proc glVertexStream2s*(stream: TGLenum, coords: TGLshort){.dynlib: dllname, 
    importc: "glVertexStream2s".}
proc glVertexStream2i*(stream: TGLenum, coords: TGLint){.dynlib: dllname, 
    importc: "glVertexStream2i".}
proc glVertexStream2f*(stream: TGLenum, coords: TGLfloat){.dynlib: dllname, 
    importc: "glVertexStream2f".}
proc glVertexStream2d*(stream: TGLenum, coords: TGLdouble){.dynlib: dllname, 
    importc: "glVertexStream2d".}
proc glVertexStream2sv*(stream: TGLenum, coords: TGLshort){.dynlib: dllname, 
    importc: "glVertexStream2sv".}
proc glVertexStream2iv*(stream: TGLenum, coords: TGLint){.dynlib: dllname, 
    importc: "glVertexStream2iv".}
proc glVertexStream2fv*(stream: TGLenum, coords: TGLfloat){.dynlib: dllname, 
    importc: "glVertexStream2fv".}
proc glVertexStream2dv*(stream: TGLenum, coords: TGLdouble){.dynlib: dllname, 
    importc: "glVertexStream2dv".}
proc glVertexStream3s*(stream: TGLenum, coords: TGLshort){.dynlib: dllname, 
    importc: "glVertexStream3s".}
proc glVertexStream3i*(stream: TGLenum, coords: TGLint){.dynlib: dllname, 
    importc: "glVertexStream3i".}
proc glVertexStream3f*(stream: TGLenum, coords: TGLfloat){.dynlib: dllname, 
    importc: "glVertexStream3f".}
proc glVertexStream3d*(stream: TGLenum, coords: TGLdouble){.dynlib: dllname, 
    importc: "glVertexStream3d".}
proc glVertexStream3sv*(stream: TGLenum, coords: TGLshort){.dynlib: dllname, 
    importc: "glVertexStream3sv".}
proc glVertexStream3iv*(stream: TGLenum, coords: TGLint){.dynlib: dllname, 
    importc: "glVertexStream3iv".}
proc glVertexStream3fv*(stream: TGLenum, coords: TGLfloat){.dynlib: dllname, 
    importc: "glVertexStream3fv".}
proc glVertexStream3dv*(stream: TGLenum, coords: TGLdouble){.dynlib: dllname, 
    importc: "glVertexStream3dv".}
proc glVertexStream4s*(stream: TGLenum, coords: TGLshort){.dynlib: dllname, 
    importc: "glVertexStream4s".}
proc glVertexStream4i*(stream: TGLenum, coords: TGLint){.dynlib: dllname, 
    importc: "glVertexStream4i".}
proc glVertexStream4f*(stream: TGLenum, coords: TGLfloat){.dynlib: dllname, 
    importc: "glVertexStream4f".}
proc glVertexStream4d*(stream: TGLenum, coords: TGLdouble){.dynlib: dllname, 
    importc: "glVertexStream4d".}
proc glVertexStream4sv*(stream: TGLenum, coords: TGLshort){.dynlib: dllname, 
    importc: "glVertexStream4sv".}
proc glVertexStream4iv*(stream: TGLenum, coords: TGLint){.dynlib: dllname, 
    importc: "glVertexStream4iv".}
proc glVertexStream4fv*(stream: TGLenum, coords: TGLfloat){.dynlib: dllname, 
    importc: "glVertexStream4fv".}
proc glVertexStream4dv*(stream: TGLenum, coords: TGLdouble){.dynlib: dllname, 
    importc: "glVertexStream4dv".}
proc glNormalStream3b*(stream: TGLenum, coords: TGLByte){.dynlib: dllname, 
    importc: "glNormalStream3b".}
proc glNormalStream3s*(stream: TGLenum, coords: TGLshort){.dynlib: dllname, 
    importc: "glNormalStream3s".}
proc glNormalStream3i*(stream: TGLenum, coords: TGLint){.dynlib: dllname, 
    importc: "glNormalStream3i".}
proc glNormalStream3f*(stream: TGLenum, coords: TGLfloat){.dynlib: dllname, 
    importc: "glNormalStream3f".}
proc glNormalStream3d*(stream: TGLenum, coords: TGLdouble){.dynlib: dllname, 
    importc: "glNormalStream3d".}
proc glNormalStream3bv*(stream: TGLenum, coords: TGLByte){.dynlib: dllname, 
    importc: "glNormalStream3bv".}
proc glNormalStream3sv*(stream: TGLenum, coords: TGLshort){.dynlib: dllname, 
    importc: "glNormalStream3sv".}
proc glNormalStream3iv*(stream: TGLenum, coords: TGLint){.dynlib: dllname, 
    importc: "glNormalStream3iv".}
proc glNormalStream3fv*(stream: TGLenum, coords: TGLfloat){.dynlib: dllname, 
    importc: "glNormalStream3fv".}
proc glNormalStream3dv*(stream: TGLenum, coords: TGLdouble){.dynlib: dllname, 
    importc: "glNormalStream3dv".}
proc glClientActiveVertexStream*(stream: TGLenum){.dynlib: dllname, 
    importc: "glClientActiveVertexStream".}
proc glVertexBlendEnvi*(pname: TGLenum, param: TGLint){.dynlib: dllname, 
    importc: "glVertexBlendEnvi".}
proc glVertexBlendEnvf*(pname: TGLenum, param: TGLfloat){.dynlib: dllname, 
    importc: "glVertexBlendEnvf".}
  #***** GL_3DFX_texture_compression_FXT1 *****//
const 
  GlCompressedRgbFxt13dfx* = 0x000086B0
  GlCompressedRgbaFxt13dfx* = 0x000086B1
  #***** GL_IBM_cull_vertex *****//

const 
  GlCullVertexIbm* = 0x0001928A
  #***** GL_IBM_multimode_draw_arrays *****//

proc glMultiModeDrawArraysIBM*(mode: PGLenum, first: PGLint, count: PGLsizei, 
                               primcount: TGLsizei, modestride: TGLint){.
    dynlib: dllname, importc: "glMultiModeDrawArraysIBM".}
proc glMultiModeDrawElementsIBM*(mode: PGLenum, count: PGLsizei, 
                                 thetype: TGLenum, indices: PGLvoid, 
                                 primcount: TGLsizei, modestride: TGLint){.
    dynlib: dllname, importc: "glMultiModeDrawElementsIBM".}
  #***** GL_IBM_raster_pos_clip *****//
const 
  GlRasterPositionUnclippedIbm* = 0x00019262
  #***** GL_IBM_texture_mirrored_repeat *****//

const 
  GlMirroredRepeatIbm* = 0x00008370
  #***** GL_IBM_vertex_array_lists *****//

const 
  GlVertexArrayListIbm* = 0x0001929E
  GlNormalArrayListIbm* = 0x0001929F
  GlColorArrayListIbm* = 0x000192A0
  GlIndexArrayListIbm* = 0x000192A1
  GlTextureCoordArrayListIbm* = 0x000192A2
  GlEdgeFlagArrayListIbm* = 0x000192A3
  GlFogCoordinateArrayListIbm* = 0x000192A4
  GlSecondaryColorArrayListIbm* = 0x000192A5
  GlVertexArrayListStrideIbm* = 0x000192A8
  GlNormalArrayListStrideIbm* = 0x000192A9
  GlColorArrayListStrideIbm* = 0x000192AA
  GlIndexArrayListStrideIbm* = 0x000192AB
  GlTextureCoordArrayListStrideIbm* = 0x000192AC
  GlEdgeFlagArrayListStrideIbm* = 0x000192AD
  GlFogCoordinateArrayListStrideIbm* = 0x000192AE
  GlSecondaryColorArrayListStrideIbm* = 0x000192AF

proc glColorPointerListIBM*(size: TGLint, thetype: TGLenum, stride: TGLint, 
                            pointer: PGLvoid, ptrstride: TGLint){.
    dynlib: dllname, importc: "glColorPointerListIBM".}
proc glSecondaryColorPointerListIBM*(size: TGLint, thetype: TGLenum, 
                                     stride: TGLint, pointer: PGLvoid, 
                                     ptrstride: TGLint){.dynlib: dllname, 
    importc: "glSecondaryColorPointerListIBM".}
proc glEdgeFlagPointerListIBM*(stride: TGLint, pointer: PGLboolean, 
                               ptrstride: TGLint){.dynlib: dllname, 
    importc: "glEdgeFlagPointerListIBM".}
proc glFogCoordPointerListIBM*(thetype: TGLenum, stride: TGLint, 
                               pointer: PGLvoid, ptrstride: TGLint){.
    dynlib: dllname, importc: "glFogCoordPointerListIBM".}
proc glNormalPointerListIBM*(thetype: TGLenum, stride: TGLint, pointer: PGLvoid, 
                             ptrstride: TGLint){.dynlib: dllname, 
    importc: "glNormalPointerListIBM".}
proc glTexCoordPointerListIBM*(size: TGLint, thetype: TGLenum, stride: TGLint, 
                               pointer: PGLvoid, ptrstride: TGLint){.
    dynlib: dllname, importc: "glTexCoordPointerListIBM".}
proc glVertexPointerListIBM*(size: TGLint, thetype: TGLenum, stride: TGLint, 
                             pointer: PGLvoid, ptrstride: TGLint){.
    dynlib: dllname, importc: "glVertexPointerListIBM".}
  #***** GL_MESA_resize_buffers *****//
proc glResizeBuffersMESA*(){.dynlib: dllname, importc: "glResizeBuffersMESA".}
  #***** GL_MESA_window_pos *****//
proc glWindowPos2dMESA*(x: TGLdouble, y: TGLdouble){.dynlib: dllname, 
    importc: "glWindowPos2dMESA".}
proc glWindowPos2fMESA*(x: TGLfloat, y: TGLfloat){.dynlib: dllname, 
    importc: "glWindowPos2fMESA".}
proc glWindowPos2iMESA*(x: TGLint, y: TGLint){.dynlib: dllname, 
    importc: "glWindowPos2iMESA".}
proc glWindowPos2sMESA*(x: TGLshort, y: TGLshort){.dynlib: dllname, 
    importc: "glWindowPos2sMESA".}
proc glWindowPos2ivMESA*(p: PGLint){.dynlib: dllname, 
                                     importc: "glWindowPos2ivMESA".}
proc glWindowPos2svMESA*(p: PGLshort){.dynlib: dllname, 
                                       importc: "glWindowPos2svMESA".}
proc glWindowPos2fvMESA*(p: PGLfloat){.dynlib: dllname, 
                                       importc: "glWindowPos2fvMESA".}
proc glWindowPos2dvMESA*(p: PGLdouble){.dynlib: dllname, 
                                        importc: "glWindowPos2dvMESA".}
proc glWindowPos3iMESA*(x: TGLint, y: TGLint, z: TGLint){.dynlib: dllname, 
    importc: "glWindowPos3iMESA".}
proc glWindowPos3sMESA*(x: TGLshort, y: TGLshort, z: TGLshort){.dynlib: dllname, 
    importc: "glWindowPos3sMESA".}
proc glWindowPos3fMESA*(x: TGLfloat, y: TGLfloat, z: TGLfloat){.dynlib: dllname, 
    importc: "glWindowPos3fMESA".}
proc glWindowPos3dMESA*(x: TGLdouble, y: TGLdouble, z: TGLdouble){.
    dynlib: dllname, importc: "glWindowPos3dMESA".}
proc glWindowPos3ivMESA*(p: PGLint){.dynlib: dllname, 
                                     importc: "glWindowPos3ivMESA".}
proc glWindowPos3svMESA*(p: PGLshort){.dynlib: dllname, 
                                       importc: "glWindowPos3svMESA".}
proc glWindowPos3fvMESA*(p: PGLfloat){.dynlib: dllname, 
                                       importc: "glWindowPos3fvMESA".}
proc glWindowPos3dvMESA*(p: PGLdouble){.dynlib: dllname, 
                                        importc: "glWindowPos3dvMESA".}
proc glWindowPos4iMESA*(x: TGLint, y: TGLint, z: TGLint, w: TGLint){.
    dynlib: dllname, importc: "glWindowPos4iMESA".}
proc glWindowPos4sMESA*(x: TGLshort, y: TGLshort, z: TGLshort, w: TGLshort){.
    dynlib: dllname, importc: "glWindowPos4sMESA".}
proc glWindowPos4fMESA*(x: TGLfloat, y: TGLfloat, z: TGLfloat, w: TGLfloat){.
    dynlib: dllname, importc: "glWindowPos4fMESA".}
proc glWindowPos4dMESA*(x: TGLdouble, y: TGLdouble, z: TGLdouble, w: TGLdouble){.
    dynlib: dllname, importc: "glWindowPos4dMESA".}
proc glWindowPos4ivMESA*(p: PGLint){.dynlib: dllname, 
                                     importc: "glWindowPos4ivMESA".}
proc glWindowPos4svMESA*(p: PGLshort){.dynlib: dllname, 
                                       importc: "glWindowPos4svMESA".}
proc glWindowPos4fvMESA*(p: PGLfloat){.dynlib: dllname, 
                                       importc: "glWindowPos4fvMESA".}
proc glWindowPos4dvMESA*(p: PGLdouble){.dynlib: dllname, 
                                        importc: "glWindowPos4dvMESA".}
  #***** GL_OML_interlace *****//
const 
  GlInterlaceOml* = 0x00008980
  GlInterlaceReadOml* = 0x00008981
  #***** GL_OML_resample *****//

const 
  GlPackResampleOml* = 0x00008984
  GlUnpackResampleOml* = 0x00008985
  GlResampleReplicateOml* = 0x00008986
  GlResampleZeroFillOml* = 0x00008987
  GlResampleAverageOml* = 0x00008988
  GlResampleDecimateOml* = 0x00008989 # GL_RESAMPLE_AVERAGE_OML  { already defined }
  #***** GL_OML_subsample *****//

const 
  GlFormatSubsample2424Oml* = 0x00008982
  GlFormatSubsample244244Oml* = 0x00008983
  #***** GL_SGIS_generate_mipmap *****//

const 
  GlGenerateMipmapSgis* = 0x00008191
  GlGenerateMipmapHintSgis* = 0x00008192
  #***** GL_SGIS_multisample *****//

const 
  GlxSampleBuffersSgis* = 0x000186A0
  GlxSamplesSgis* = 0x000186A1
  GlMultisampleSgis* = 0x0000809D
  GlSampleAlphaToMaskSgis* = 0x0000809E
  GlSampleAlphaToOneSgis* = 0x0000809F
  constGLSAMPLEMASKSGIS* = 0x000080A0
  GlMultisampleBitExt* = 0x20000000
  Gl1passSgis* = 0x000080A1
  Gl2pass0Sgis* = 0x000080A2
  Gl2pass1Sgis* = 0x000080A3
  Gl4pass0Sgis* = 0x000080A4
  Gl4pass1Sgis* = 0x000080A5
  Gl4pass2Sgis* = 0x000080A6
  Gl4pass3Sgis* = 0x000080A7
  GlSampleBuffersSgis* = 0x000080A8
  GlSamplesSgis* = 0x000080A9
  GlSampleMaskValueSgis* = 0x000080AA
  GlSampleMaskInvertSgis* = 0x000080AB
  constGLSAMPLEPATTERNSGIS* = 0x000080AC

proc glSampleMaskSGIS*(value: TGLclampf, invert: TGLboolean){.dynlib: dllname, 
    importc: "glSampleMaskSGIS".}
proc glSamplePatternSGIS*(pattern: TGLenum){.dynlib: dllname, 
    importc: "glSamplePatternSGIS".}
  #***** GL_SGIS_pixel_texture *****//
const 
  GlPixelTextureSgis* = 0x00008353
  GlPixelFragmentRgbSourceSgis* = 0x00008354
  GlPixelFragmentAlphaSourceSgis* = 0x00008355
  GlPixelGroupColorSgis* = 0x00008356

proc glPixelTexGenParameteriSGIS*(pname: TGLenum, param: TGLint){.
    dynlib: dllname, importc: "glPixelTexGenParameteriSGIS".}
proc glPixelTexGenParameterfSGIS*(pname: TGLenum, param: TGLfloat){.
    dynlib: dllname, importc: "glPixelTexGenParameterfSGIS".}
proc glGetPixelTexGenParameterivSGIS*(pname: TGLenum, params: TGLint){.
    dynlib: dllname, importc: "glGetPixelTexGenParameterivSGIS".}
proc glGetPixelTexGenParameterfvSGIS*(pname: TGLenum, params: TGLfloat){.
    dynlib: dllname, importc: "glGetPixelTexGenParameterfvSGIS".}
  #***** GL_SGIS_texture_border_clamp *****//
  # GL_CLAMP_TO_BORDER_SGIS  { already defined }
  #***** GL_SGIS_texture_color_mask *****//
const 
  GlTextureColorWritemaskSgis* = 0x000081EF

proc glTextureColorMaskSGIS*(r: TGLboolean, g: TGLboolean, b: TGLboolean, 
                             a: TGLboolean){.dynlib: dllname, 
    importc: "glTextureColorMaskSGIS".}
  #***** GL_SGIS_texture_edge_clamp *****//
const 
  GlClampToEdgeSgis* = 0x0000812F
  #***** GL_SGIS_texture_lod *****//

const 
  GlTextureMinLodSgis* = 0x0000813A
  GlTextureMaxLodSgis* = 0x0000813B
  GlTextureBaseLevelSgis* = 0x0000813C
  GlTextureMaxLevelSgis* = 0x0000813D
  #***** GL_SGIS_depth_texture *****//

const 
  GlDepthComponent16Sgix* = 0x000081A5
  GlDepthComponent24Sgix* = 0x000081A6
  GlDepthComponent32Sgix* = 0x000081A7
  #***** GL_SGIX_fog_offset *****//

const 
  GlFogOffsetSgix* = 0x00008198
  GlFogOffsetValueSgix* = 0x00008199
  #***** GL_SGIX_interlace *****//

const 
  GlInterlaceSgix* = 0x00008094
  #***** GL_SGIX_shadow_ambient *****//

const 
  GlShadowAmbientSgix* = 0x000080BF
  #***** GL_SGI_color_matrix *****//

const 
  GlColorMatrixSgi* = 0x000080B1
  GlColorMatrixStackDepthSgi* = 0x000080B2
  GlMaxColorMatrixStackDepthSgi* = 0x000080B3
  GlPostColorMatrixRedScaleSgi* = 0x000080B4
  GlPostColorMatrixGreenScaleSgi* = 0x000080B5
  GlPostColorMatrixBlueScaleSgi* = 0x000080B6
  GlPostColorMatrixAlphaScaleSgi* = 0x000080B7
  GlPostColorMatrixRedBiasSgi* = 0x000080B8
  GlPostColorMatrixGreenBiasSgi* = 0x000080B9
  GlPostColorMatrixBlueBiasSgi* = 0x000080BA
  GlPostColorMatrixAlphaBiasSgi* = 0x000080BB
  #***** GL_SGI_color_table *****//

const 
  constGLCOLORTABLESGI* = 0x000080D0
  GlPostConvolutionColorTableSgi* = 0x000080D1
  GlPostColorMatrixColorTableSgi* = 0x000080D2
  GlProxyColorTableSgi* = 0x000080D3
  GlProxyPostConvolutionColorTableSgi* = 0x000080D4
  GlProxyPostColorMatrixColorTableSgi* = 0x000080D5
  GlColorTableScaleSgi* = 0x000080D6
  GlColorTableBiasSgi* = 0x000080D7
  GlColorTableFormatSgi* = 0x000080D8
  GlColorTableWidthSgi* = 0x000080D9
  GlColorTableRedSizeSgi* = 0x000080DA
  GlColorTableGreenSizeSgi* = 0x000080DB
  GlColorTableBlueSizeSgi* = 0x000080DC
  GlColorTableAlphaSizeSgi* = 0x000080DD
  GlColorTableLuminanceSizeSgi* = 0x000080DE
  GlColorTableIntensitySizeSgi* = 0x000080DF

proc glColorTableSGI*(target: TGLenum, internalformat: TGLenum, width: TGLsizei, 
                      format: TGLenum, thetype: TGLenum, table: PGLvoid){.
    dynlib: dllname, importc: "glColorTableSGI".}
proc glCopyColorTableSGI*(target: TGLenum, internalformat: TGLenum, x: TGLint, 
                          y: TGLint, width: TGLsizei){.dynlib: dllname, 
    importc: "glCopyColorTableSGI".}
proc glColorTableParameterivSGI*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glColorTableParameterivSGI".}
proc glColorTableParameterfvSGI*(target: TGLenum, pname: TGLenum, 
                                 params: PGLfloat){.dynlib: dllname, 
    importc: "glColorTableParameterfvSGI".}
proc glGetColorTableSGI*(target: TGLenum, format: TGLenum, thetype: TGLenum, 
                         table: PGLvoid){.dynlib: dllname, 
    importc: "glGetColorTableSGI".}
proc glGetColorTableParameterivSGI*(target: TGLenum, pname: TGLenum, 
                                    params: PGLint){.dynlib: dllname, 
    importc: "glGetColorTableParameterivSGI".}
proc glGetColorTableParameterfvSGI*(target: TGLenum, pname: TGLenum, 
                                    params: PGLfloat){.dynlib: dllname, 
    importc: "glGetColorTableParameterfvSGI".}
  #***** GL_SGI_texture_color_table *****//
const 
  GlTextureColorTableSgi* = 0x000080BC
  GlProxyTextureColorTableSgi* = 0x000080BD
  #***** GL_SUN_vertex *****//

proc glColor4ubVertex2fSUN*(r: TGLubyte, g: TGLubyte, b: TGLubyte, a: TGLubyte, 
                            x: TGLfloat, y: TGLfloat){.dynlib: dllname, 
    importc: "glColor4ubVertex2fSUN".}
proc glColor4ubVertex2fvSUN*(c: PGLubyte, v: PGLfloat){.dynlib: dllname, 
    importc: "glColor4ubVertex2fvSUN".}
proc glColor4ubVertex3fSUN*(r: TGLubyte, g: TGLubyte, b: TGLubyte, a: TGLubyte, 
                            x: TGLfloat, y: TGLfloat, z: TGLfloat){.
    dynlib: dllname, importc: "glColor4ubVertex3fSUN".}
proc glColor4ubVertex3fvSUN*(c: PGLubyte, v: PGLfloat){.dynlib: dllname, 
    importc: "glColor4ubVertex3fvSUN".}
proc glColor3fVertex3fSUN*(r: TGLfloat, g: TGLfloat, b: TGLfloat, x: TGLfloat, 
                           y: TGLfloat, z: TGLfloat){.dynlib: dllname, 
    importc: "glColor3fVertex3fSUN".}
proc glColor3fVertex3fvSUN*(c: PGLfloat, v: PGLfloat){.dynlib: dllname, 
    importc: "glColor3fVertex3fvSUN".}
proc glNormal3fVertex3fSUN*(nx: TGLfloat, ny: TGLfloat, nz: TGLfloat, 
                            x: TGLfloat, y: TGLfloat, z: TGLfloat){.
    dynlib: dllname, importc: "glNormal3fVertex3fSUN".}
proc glNormal3fVertex3fvSUN*(n: PGLfloat, v: PGLfloat){.dynlib: dllname, 
    importc: "glNormal3fVertex3fvSUN".}
proc glColor4fNormal3fVertex3fSUN*(r: TGLfloat, g: TGLfloat, b: TGLfloat, 
                                   a: TGLfloat, nx: TGLfloat, ny: TGLfloat, 
                                   nz: TGLfloat, x: TGLfloat, y: TGLfloat, 
                                   z: TGLfloat){.dynlib: dllname, 
    importc: "glColor4fNormal3fVertex3fSUN".}
proc glColor4fNormal3fVertex3fvSUN*(c: PGLfloat, n: PGLfloat, v: PGLfloat){.
    dynlib: dllname, importc: "glColor4fNormal3fVertex3fvSUN".}
proc glTexCoord2fVertex3fSUN*(s: TGLfloat, t: TGLfloat, x: TGLfloat, 
                              y: TGLfloat, z: TGLfloat){.dynlib: dllname, 
    importc: "glTexCoord2fVertex3fSUN".}
proc glTexCoord2fVertex3fvSUN*(tc: PGLfloat, v: PGLfloat){.dynlib: dllname, 
    importc: "glTexCoord2fVertex3fvSUN".}
proc glTexCoord4fVertex4fSUN*(s: TGLfloat, t: TGLfloat, p: TGLfloat, 
                              q: TGLfloat, x: TGLfloat, y: TGLfloat, 
                              z: TGLfloat, w: TGLfloat){.dynlib: dllname, 
    importc: "glTexCoord4fVertex4fSUN".}
proc glTexCoord4fVertex4fvSUN*(tc: PGLfloat, v: PGLfloat){.dynlib: dllname, 
    importc: "glTexCoord4fVertex4fvSUN".}
proc glTexCoord2fColor4ubVertex3fSUN*(s: TGLfloat, t: TGLfloat, r: TGLubyte, 
                                      g: TGLubyte, b: TGLubyte, a: TGLubyte, 
                                      x: TGLfloat, y: TGLfloat, z: TGLfloat){.
    dynlib: dllname, importc: "glTexCoord2fColor4ubVertex3fSUN".}
proc glTexCoord2fColor4ubVertex3fvSUN*(tc: PGLfloat, c: PGLubyte, v: PGLfloat){.
    dynlib: dllname, importc: "glTexCoord2fColor4ubVertex3fvSUN".}
proc glTexCoord2fColor3fVertex3fSUN*(s: TGLfloat, t: TGLfloat, r: TGLfloat, 
                                     g: TGLfloat, b: TGLfloat, x: TGLfloat, 
                                     y: TGLfloat, z: TGLfloat){.dynlib: dllname, 
    importc: "glTexCoord2fColor3fVertex3fSUN".}
proc glTexCoord2fColor3fVertex3fvSUN*(tc: PGLfloat, c: PGLfloat, v: PGLfloat){.
    dynlib: dllname, importc: "glTexCoord2fColor3fVertex3fvSUN".}
proc glTexCoord2fNormal3fVertex3fSUN*(s: TGLfloat, t: TGLfloat, nx: TGLfloat, 
                                      ny: TGLfloat, nz: TGLfloat, x: TGLfloat, 
                                      y: TGLfloat, z: TGLfloat){.
    dynlib: dllname, importc: "glTexCoord2fNormal3fVertex3fSUN".}
proc glTexCoord2fNormal3fVertex3fvSUN*(tc: PGLfloat, n: PGLfloat, v: PGLfloat){.
    dynlib: dllname, importc: "glTexCoord2fNormal3fVertex3fvSUN".}
proc glTexCoord2fColor4fNormal3fVertex3fSUN*(s: TGLfloat, t: TGLfloat, 
    r: TGLfloat, g: TGLfloat, b: TGLfloat, a: TGLfloat, nx: TGLfloat, 
    ny: TGLfloat, nz: TGLfloat, x: TGLfloat, y: TGLfloat, z: TGLfloat){.
    dynlib: dllname, importc: "glTexCoord2fColor4fNormal3fVertex3fSUN".}
proc glTexCoord2fColor4fNormal3fVertex3fvSUN*(tc: PGLfloat, c: PGLfloat, 
    n: PGLfloat, v: PGLfloat){.dynlib: dllname, importc: "glTexCoord2fColor4fNormal3fVertex3fvSUN".}
proc glTexCoord4fColor4fNormal3fVertex4fSUN*(s: TGLfloat, t: TGLfloat, 
    p: TGLfloat, q: TGLfloat, r: TGLfloat, g: TGLfloat, b: TGLfloat, 
    a: TGLfloat, nx: TGLfloat, ny: TGLfloat, nz: TGLfloat, x: TGLfloat, 
    y: TGLfloat, z: TGLfloat, w: TGLfloat){.dynlib: dllname, 
    importc: "glTexCoord4fColor4fNormal3fVertex4fSUN".}
proc glTexCoord4fColor4fNormal3fVertex4fvSUN*(tc: PGLfloat, c: PGLfloat, 
    n: PGLfloat, v: PGLfloat){.dynlib: dllname, importc: "glTexCoord4fColor4fNormal3fVertex4fvSUN".}
proc glReplacementCodeuiVertex3fSUN*(rc: TGLuint, x: TGLfloat, y: TGLfloat, 
                                     z: TGLfloat){.dynlib: dllname, 
    importc: "glReplacementCodeuiVertex3fSUN".}
proc glReplacementCodeuiVertex3fvSUN*(rc: PGLuint, v: PGLfloat){.
    dynlib: dllname, importc: "glReplacementCodeuiVertex3fvSUN".}
proc glReplacementCodeuiColor4ubVertex3fSUN*(rc: TGLuint, r: TGLubyte, 
    g: TGLubyte, b: TGLubyte, a: TGLubyte, x: TGLfloat, y: TGLfloat, z: TGLfloat){.
    dynlib: dllname, importc: "glReplacementCodeuiColor4ubVertex3fSUN".}
proc glReplacementCodeuiColor4ubVertex3fvSUN*(rc: PGLuint, c: PGLubyte, 
    v: PGLfloat){.dynlib: dllname, 
                  importc: "glReplacementCodeuiColor4ubVertex3fvSUN".}
proc glReplacementCodeuiColor3fVertex3fSUN*(rc: TGLuint, r: TGLfloat, 
    g: TGLfloat, b: TGLfloat, x: TGLfloat, y: TGLfloat, z: TGLfloat){.
    dynlib: dllname, importc: "glReplacementCodeuiColor3fVertex3fSUN".}
proc glReplacementCodeuiColor3fVertex3fvSUN*(rc: PGLuint, c: PGLfloat, 
    v: PGLfloat){.dynlib: dllname, 
                  importc: "glReplacementCodeuiColor3fVertex3fvSUN".}
proc glReplacementCodeuiNormal3fVertex3fSUN*(rc: TGLuint, nx: TGLfloat, 
    ny: TGLfloat, nz: TGLfloat, x: TGLfloat, y: TGLfloat, z: TGLfloat){.
    dynlib: dllname, importc: "glReplacementCodeuiNormal3fVertex3fSUN".}
proc glReplacementCodeuiNormal3fVertex3fvSUN*(rc: PGLuint, n: PGLfloat, 
    v: PGLfloat){.dynlib: dllname, 
                  importc: "glReplacementCodeuiNormal3fVertex3fvSUN".}
proc glReplacementCodeuiColor4fNormal3fVertex3fSUN*(rc: TGLuint, r: TGLfloat, 
    g: TGLfloat, b: TGLfloat, a: TGLfloat, nx: TGLfloat, ny: TGLfloat, 
    nz: TGLfloat, x: TGLfloat, y: TGLfloat, z: TGLfloat){.dynlib: dllname, 
    importc: "glReplacementCodeuiColor4fNormal3fVertex3fSUN".}
proc glReplacementCodeuiColor4fNormal3fVertex3fvSUN*(rc: PGLuint, c: PGLfloat, 
    n: PGLfloat, v: PGLfloat){.dynlib: dllname, importc: "glReplacementCodeuiColor4fNormal3fVertex3fvSUN".}
proc glReplacementCodeuiTexCoord2fVertex3fSUN*(rc: TGLuint, s: TGLfloat, 
    t: TGLfloat, x: TGLfloat, y: TGLfloat, z: TGLfloat){.dynlib: dllname, 
    importc: "glReplacementCodeuiTexCoord2fVertex3fSUN".}
proc glReplacementCodeuiTexCoord2fVertex3fvSUN*(rc: PGLuint, tc: PGLfloat, 
    v: PGLfloat){.dynlib: dllname, 
                  importc: "glReplacementCodeuiTexCoord2fVertex3fvSUN".}
proc glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN*(rc: TGLuint, s: TGLfloat, 
    t: TGLfloat, nx: TGLfloat, ny: TGLfloat, nz: TGLfloat, x: TGLfloat, 
    y: TGLfloat, z: TGLfloat){.dynlib: dllname, importc: "glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN".}
proc glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN*(rc: PGLuint, 
    tc: PGLfloat, n: PGLfloat, v: PGLfloat){.dynlib: dllname, 
    importc: "glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN".}
proc glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN*(rc: TGLuint, 
    s: TGLfloat, t: TGLfloat, r: TGLfloat, g: TGLfloat, b: TGLfloat, 
    a: TGLfloat, nx: TGLfloat, ny: TGLfloat, nz: TGLfloat, x: TGLfloat, 
    y: TGLfloat, z: TGLfloat){.dynlib: dllname, importc: "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN".}
proc glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN*(rc: PGLuint, 
    tc: PGLfloat, c: PGLfloat, n: PGLfloat, v: PGLfloat){.dynlib: dllname, 
    importc: "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN".}
  #***** GL_ARB_fragment_program *****//
const 
  GlFragmentProgramArb* = 0x00008804 # GL_PROGRAM_FORMAT_ASCII_ARB  { already defined }
                                        # GL_PROGRAM_LENGTH_ARB  { already defined }
                                        # GL_PROGRAM_FORMAT_ARB  { already defined }
                                        # GL_PROGRAM_BINDING_ARB  { already defined }
                                        # GL_PROGRAM_INSTRUCTIONS_ARB  { already defined }
                                        # GL_MAX_PROGRAM_INSTRUCTIONS_ARB  { already defined }
                                        # GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB  { already defined }
                                        # GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB  { already defined }
                                        # GL_PROGRAM_TEMPORARIES_ARB  { already defined }
                                        # GL_MAX_PROGRAM_TEMPORARIES_ARB  { already defined }
                                        # GL_PROGRAM_NATIVE_TEMPORARIES_ARB  { already defined }
                                        # GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB  { already defined }
                                        # GL_PROGRAM_PARAMETERS_ARB  { already defined }
                                        # GL_MAX_PROGRAM_PARAMETERS_ARB  { already defined }
                                        # GL_PROGRAM_NATIVE_PARAMETERS_ARB  { already defined }
                                        # GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB  { already defined }
                                        # GL_PROGRAM_ATTRIBS_ARB  { already defined }
                                        # GL_MAX_PROGRAM_ATTRIBS_ARB  { already defined }
                                        # GL_PROGRAM_NATIVE_ATTRIBS_ARB  { already defined }
                                        # GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB  { already defined }
                                        # GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB  { already defined }
                                        # GL_MAX_PROGRAM_ENV_PARAMETERS_ARB  { already defined }
                                        # GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB  { already defined }
  GlProgramAluInstructionsArb* = 0x00008805
  GlProgramTexInstructionsArb* = 0x00008806
  GlProgramTexIndirectionsArb* = 0x00008807
  GlProgramNativeAluInstructionsArb* = 0x00008808
  GlProgramNativeTexInstructionsArb* = 0x00008809
  GlProgramNativeTexIndirectionsArb* = 0x0000880A
  GlMaxProgramAluInstructionsArb* = 0x0000880B
  GlMaxProgramTexInstructionsArb* = 0x0000880C
  GlMaxProgramTexIndirectionsArb* = 0x0000880D
  GlMaxProgramNativeAluInstructionsArb* = 0x0000880E
  GlMaxProgramNativeTexInstructionsArb* = 0x0000880F
  GlMaxProgramNativeTexIndirectionsArb* = 0x00008810 # GL_PROGRAM_STRING_ARB  { already defined }
                                                           # 
                                                           # 
                                                           # GL_PROGRAM_ERROR_POSITION_ARB  { already defined }
                                                           # GL_CURRENT_MATRIX_ARB  { already defined }
                                                           # 
                                                           # 
                                                           # GL_TRANSPOSE_CURRENT_MATRIX_ARB  { already defined }
                                                           # 
                                                           # 
                                                           # GL_CURRENT_MATRIX_STACK_DEPTH_ARB  { already defined }
                                                           # 
                                                           # 
                                                           # GL_MAX_PROGRAM_MATRICES_ARB  { already defined }
                                                           # 
                                                           # 
                                                           # GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB  { already defined }
  GlMaxTextureCoordsArb* = 0x00008871
  GlMaxTextureImageUnitsArb* = 0x00008872 # GL_PROGRAM_ERROR_STRING_ARB  { already defined }
                                               # GL_MATRIX0_ARB  { already defined }
                                               # GL_MATRIX1_ARB  { already defined }
                                               # GL_MATRIX2_ARB  { already defined }
                                               # GL_MATRIX3_ARB  { already defined }
                                               # GL_MATRIX4_ARB  { already defined }
                                               # GL_MATRIX5_ARB  { already defined }
                                               # GL_MATRIX6_ARB  { already defined }
                                               # GL_MATRIX7_ARB  { already defined }
                                               # GL_MATRIX8_ARB  { already defined }
                                               # GL_MATRIX9_ARB  { already defined }
                                               # GL_MATRIX10_ARB  { already defined }
                                               # GL_MATRIX11_ARB  { already defined }
                                               # GL_MATRIX12_ARB  { already defined }
                                               # GL_MATRIX13_ARB  { already defined }
                                               # GL_MATRIX14_ARB  { already defined }
                                               # GL_MATRIX15_ARB  { already defined }
                                               # GL_MATRIX16_ARB  { already defined }
                                               # GL_MATRIX17_ARB  { already defined }
                                               # GL_MATRIX18_ARB  { already defined }
                                               # GL_MATRIX19_ARB  { already defined }
                                               # GL_MATRIX20_ARB  { already defined }
                                               # GL_MATRIX21_ARB  { already defined }
                                               # GL_MATRIX22_ARB  { already defined }
                                               # GL_MATRIX23_ARB  { already defined }
                                               # GL_MATRIX24_ARB  { already defined }
                                               # GL_MATRIX25_ARB  { already defined }
                                               # GL_MATRIX26_ARB  { already defined }
                                               # GL_MATRIX27_ARB  { already defined }
                                               # GL_MATRIX28_ARB  { already defined }
                                               # GL_MATRIX29_ARB  { already defined }
                                               # GL_MATRIX30_ARB  { already defined }
                                               # GL_MATRIX31_ARB  { already defined }
                                               # glProgramStringARB  { already defined }
                                               # glBindProgramARB  { already defined }
                                               # glDeleteProgramsARB  { already defined }
                                               # glGenProgramsARB  { already defined }
                                               # glProgramEnvParameter4dARB  { already defined }
                                               # glProgramEnvParameter4dvARB  { already defined }
                                               # glProgramEnvParameter4fARB  { already defined }
                                               # glProgramEnvParameter4fvARB  { already defined }
                                               # glProgramLocalParameter4dARB  { already defined }
                                               # glProgramLocalParameter4dvARB  { already defined }
                                               # glProgramLocalParameter4fARB  { already defined }
                                               # glProgramLocalParameter4fvARB  { already defined }
                                               # glGetProgramEnvParameterdvARB  { already defined }
                                               # glGetProgramEnvParameterfvARB  { already defined }
                                               # glGetProgramLocalParameterdvARB  { already defined }
                                               # glGetProgramLocalParameterfvARB  { already defined }
                                               # glGetProgramivARB  { already defined }
                                               # glGetProgramStringARB  { already defined }
                                               # glIsProgramARB  { already defined }
  #***** GL_ATI_text_fragment_shader *****

const 
  GlTextFragmentShaderAti* = 0x00008200 #***** GL_ARB_vertex_buffer_object *****

const 
  GlBufferSizeArb* = 0x00008764
  GlBufferUsageArb* = 0x00008765
  GlArrayBufferArb* = 0x00008892
  GlElementArrayBufferArb* = 0x00008893
  GlArrayBufferBindingArb* = 0x00008894
  GlElementArrayBufferBindingArb* = 0x00008895
  GlVertexArrayBufferBindingArb* = 0x00008896
  GlNormalArrayBufferBindingArb* = 0x00008897
  GlColorArrayBufferBindingArb* = 0x00008898
  GlIndexArrayBufferBindingArb* = 0x00008899
  GlTextureCoordArrayBufferBindingArb* = 0x0000889A
  GlEdgeFlagArrayBufferBindingArb* = 0x0000889B
  GlSecondaryColorArrayBufferBindingArb* = 0x0000889C
  GlFogCoordinateArrayBufferBindingArb* = 0x0000889D
  GlWeightArrayBufferBindingArb* = 0x0000889E
  GlVertexAttribArrayBufferBindingArb* = 0x0000889F
  GlReadOnlyArb* = 0x000088B8
  GlWriteOnlyArb* = 0x000088B9
  GlReadWriteArb* = 0x000088BA
  GlBufferAccessArb* = 0x000088BB
  GlBufferMappedArb* = 0x000088BC
  GlBufferMapPointerArb* = 0x000088BD
  GlStreamDrawArb* = 0x000088E0
  GlStreamReadArb* = 0x000088E1
  GlStreamCopyArb* = 0x000088E2
  GlStaticDrawArb* = 0x000088E4
  GlStaticReadArb* = 0x000088E5
  GlStaticCopyArb* = 0x000088E6
  GlDynamicDrawArb* = 0x000088E8
  GlDynamicReadArb* = 0x000088E9
  GlDynamicCopyArb* = 0x000088EA

proc glBindBufferARB*(target: TGLenum, buffer: TGLuint){.dynlib: dllname, 
    importc: "glBindBufferARB".}
proc glDeleteBuffersARB*(n: TGLsizei, buffers: PGLuint){.dynlib: dllname, 
    importc: "glDeleteBuffersARB".}
proc glGenBuffersARB*(n: TGLsizei, buffers: PGLuint){.dynlib: dllname, 
    importc: "glGenBuffersARB".}
proc glIsBufferARB*(buffer: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsBufferARB".}
proc glBufferDataARB*(target: TGLenum, size: TGLsizei, data: PGLvoid, 
                      usage: TGLenum){.dynlib: dllname, 
                                       importc: "glBufferDataARB".}
proc glBufferSubDataARB*(target: TGLenum, offset: TGLint, size: TGLsizei, 
                         data: PGLvoid){.dynlib: dllname, 
    importc: "glBufferSubDataARB".}
proc glGetBufferSubDataARB*(target: TGLenum, offset: TGLint, size: TGLsizei, 
                            data: PGLvoid){.dynlib: dllname, 
    importc: "glGetBufferSubDataARB".}
proc glMapBufferARB*(target: TGLenum, access: TGLenum): PGLvoid{.
    dynlib: dllname, importc: "glMapBufferARB".}
proc glUnmapBufferARB*(target: TGLenum): TGLboolean{.dynlib: dllname, 
    importc: "glUnmapBufferARB".}
proc glGetBufferParameterivARB*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetBufferParameterivARB".}
proc glGetBufferPointervARB*(target: TGLenum, pname: TGLenum, params: PPGLvoid){.
    dynlib: dllname, importc: "glGetBufferPointervARB".}
  #***** GL_APPLE_client_storage *****//
const 
  GlUnpackClientStorageApple* = 0x000085B2
  #***** GL_APPLE_element_array *****//

const 
  GlElementArrayApple* = 0x00008768
  GlElementArrayTypeApple* = 0x00008769
  GlElementArrayPointerApple* = 0x0000876A

proc glElementPointerAPPLE*(thetype: TGLenum, pointer: PGLvoid){.
    dynlib: dllname, importc: "glElementPointerAPPLE".}
proc glDrawElementArrayAPPLE*(mode: TGLenum, first: TGLint, count: TGLsizei){.
    dynlib: dllname, importc: "glDrawElementArrayAPPLE".}
proc glDrawRangeElementArrayAPPLE*(mode: TGLenum, start: TGLuint, 
                                   theend: TGLuint, first: TGLint, 
                                   count: TGLsizei){.dynlib: dllname, 
    importc: "glDrawRangeElementArrayAPPLE".}
proc glMultiDrawElementArrayAPPLE*(mode: TGLenum, first: PGLint, 
                                   count: PGLsizei, primcount: TGLsizei){.
    dynlib: dllname, importc: "glMultiDrawElementArrayAPPLE".}
proc glMultiDrawRangeElementArrayAPPLE*(mode: TGLenum, start: TGLuint, 
                                        theend: TGLuint, first: PGLint, 
                                        count: PGLsizei, primcount: TGLsizei){.
    dynlib: dllname, importc: "glMultiDrawRangeElementArrayAPPLE".}
  #***** GL_APPLE_fence *****//
const 
  GlDrawPixelsApple* = 0x00008A0A
  GlFenceApple* = 0x00008A0B

proc glGenFencesAPPLE*(n: TGLsizei, fences: PGLuint){.dynlib: dllname, 
    importc: "glGenFencesAPPLE".}
proc glDeleteFencesAPPLE*(n: TGLsizei, fences: PGLuint){.dynlib: dllname, 
    importc: "glDeleteFencesAPPLE".}
proc glSetFenceAPPLE*(fence: TGLuint){.dynlib: dllname, 
                                       importc: "glSetFenceAPPLE".}
proc glIsFenceAPPLE*(fence: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsFenceAPPLE".}
proc glTestFenceAPPLE*(fence: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glTestFenceAPPLE".}
proc glFinishFenceAPPLE*(fence: TGLuint){.dynlib: dllname, 
    importc: "glFinishFenceAPPLE".}
proc glTestObjectAPPLE*(theobject: TGLenum, name: TGLuint): TGLboolean{.
    dynlib: dllname, importc: "glTestObjectAPPLE".}
proc glFinishObjectAPPLE*(theobject: TGLenum, name: TGLint){.dynlib: dllname, 
    importc: "glFinishObjectAPPLE".}
  #***** GL_APPLE_vertex_array_object *****//
const 
  GlVertexArrayBindingApple* = 0x000085B5

proc glBindVertexArrayAPPLE*(thearray: TGLuint){.dynlib: dllname, 
    importc: "glBindVertexArrayAPPLE".}
proc glDeleteVertexArraysAPPLE*(n: TGLsizei, arrays: PGLuint){.dynlib: dllname, 
    importc: "glDeleteVertexArraysAPPLE".}
proc glGenVertexArraysAPPLE*(n: TGLsizei, arrays: PGLuint){.dynlib: dllname, 
    importc: "glGenVertexArraysAPPLE".}
proc glIsVertexArrayAPPLE*(thearray: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsVertexArrayAPPLE".}
  #***** GL_APPLE_vertex_array_range *****//
const 
  constGLVERTEXARRAYRANGEAPPLE* = 0x0000851D
  GlVertexArrayRangeLengthApple* = 0x0000851E
  GlMaxVertexArrayRangeElementApple* = 0x00008520
  GlVertexArrayRangePointerApple* = 0x00008521
  GlVertexArrayStorageHintApple* = 0x0000851F
  GlStorageCachedApple* = 0x000085BE
  GlStorageSharedApple* = 0x000085BF

proc glVertexArrayRangeAPPLE*(len: TGLsizei, pointer: PGLvoid){.dynlib: dllname, 
    importc: "glVertexArrayRangeAPPLE".}
proc glFlushVertexArrayRangeAPPLE*(len: TGLsizei, pointer: PGLvoid){.
    dynlib: dllname, importc: "glFlushVertexArrayRangeAPPLE".}
proc glVertexArrayParameteriAPPLE*(pname: TGLenum, param: TGLint){.
    dynlib: dllname, importc: "glVertexArrayParameteriAPPLE".}
  #***** GL_ARB_matrix_palette *****//
const 
  GlMatrixPaletteArb* = 0x00008840
  GlMaxMatrixPaletteStackDepthArb* = 0x00008841
  GlMaxPaletteMatricesArb* = 0x00008842
  constGLCURRENTPALETTEMATRIXARB* = 0x00008843
  GlMatrixIndexArrayArb* = 0x00008844
  GlCurrentMatrixIndexArb* = 0x00008845
  GlMatrixIndexArraySizeArb* = 0x00008846
  GlMatrixIndexArrayTypeArb* = 0x00008847
  GlMatrixIndexArrayStrideArb* = 0x00008848
  GlMatrixIndexArrayPointerArb* = 0x00008849

proc glCurrentPaletteMatrixARB*(index: TGLint){.dynlib: dllname, 
    importc: "glCurrentPaletteMatrixARB".}
proc glMatrixIndexubvARB*(size: TGLint, indices: PGLubyte){.dynlib: dllname, 
    importc: "glMatrixIndexubvARB".}
proc glMatrixIndexusvARB*(size: TGLint, indices: PGLushort){.dynlib: dllname, 
    importc: "glMatrixIndexusvARB".}
proc glMatrixIndexuivARB*(size: TGLint, indices: PGLuint){.dynlib: dllname, 
    importc: "glMatrixIndexuivARB".}
proc glMatrixIndexPointerARB*(size: TGLint, thetype: TGLenum, stride: TGLsizei, 
                              pointer: PGLvoid){.dynlib: dllname, 
    importc: "glMatrixIndexPointerARB".}
  #***** GL_NV_element_array *****//
const 
  GlElementArrayTypeNv* = 0x00008769
  GlElementArrayPointerNv* = 0x0000876A

proc glElementPointerNV*(thetype: TGLenum, pointer: PGLvoid){.dynlib: dllname, 
    importc: "glElementPointerNV".}
proc glDrawElementArrayNV*(mode: TGLenum, first: TGLint, count: TGLsizei){.
    dynlib: dllname, importc: "glDrawElementArrayNV".}
proc glDrawRangeElementArrayNV*(mode: TGLenum, start: TGLuint, theend: TGLuint, 
                                first: TGLint, count: TGLsizei){.
    dynlib: dllname, importc: "glDrawRangeElementArrayNV".}
proc glMultiDrawElementArrayNV*(mode: TGLenum, first: PGLint, count: PGLsizei, 
                                primcount: TGLsizei){.dynlib: dllname, 
    importc: "glMultiDrawElementArrayNV".}
proc glMultiDrawRangeElementArrayNV*(mode: TGLenum, start: TGLuint, 
                                     theend: TGLuint, first: PGLint, 
                                     count: PGLsizei, primcount: TGLsizei){.
    dynlib: dllname, importc: "glMultiDrawRangeElementArrayNV".}
  #***** GL_NV_float_buffer *****//
const 
  GlFloatRNv* = 0x00008880
  GlFloatRgNv* = 0x00008881
  GlFloatRgbNv* = 0x00008882
  GlFloatRgbaNv* = 0x00008883
  GlFloatR16Nv* = 0x00008884
  GlFloatR32Nv* = 0x00008885
  GlFloatRg16Nv* = 0x00008886
  GlFloatRg32Nv* = 0x00008887
  GlFloatRgb16Nv* = 0x00008888
  GlFloatRgb32Nv* = 0x00008889
  GlFloatRgba16Nv* = 0x0000888A
  GlFloatRgba32Nv* = 0x0000888B
  GlTextureFloatComponentsNv* = 0x0000888C
  GlFloatClearColorValueNv* = 0x0000888D
  GlFloatRgbaModeNv* = 0x0000888E
  #***** GL_NV_fragment_program *****//

const 
  GlFragmentProgramNv* = 0x00008870
  GlMaxTextureCoordsNv* = 0x00008871
  GlMaxTextureImageUnitsNv* = 0x00008872
  GlFragmentProgramBindingNv* = 0x00008873
  GlMaxFragmentProgramLocalParametersNv* = 0x00008868
  GlProgramErrorStringNv* = 0x00008874

proc glProgramNamedParameter4fNV*(id: TGLuint, length: TGLsizei, name: PGLubyte, 
                                  x: TGLfloat, y: TGLfloat, z: TGLfloat, 
                                  w: TGLfloat){.dynlib: dllname, 
    importc: "glProgramNamedParameter4fNV".}
proc glProgramNamedParameter4dNV*(id: TGLuint, length: TGLsizei, name: PGLubyte, 
                                  x: TGLdouble, y: TGLdouble, z: TGLdouble, 
                                  w: TGLdouble){.dynlib: dllname, 
    importc: "glProgramNamedParameter4dNV".}
proc glGetProgramNamedParameterfvNV*(id: TGLuint, length: TGLsizei, 
                                     name: PGLubyte, params: PGLfloat){.
    dynlib: dllname, importc: "glGetProgramNamedParameterfvNV".}
proc glGetProgramNamedParameterdvNV*(id: TGLuint, length: TGLsizei, 
                                     name: PGLubyte, params: PGLdouble){.
    dynlib: dllname, importc: "glGetProgramNamedParameterdvNV".}
  # glProgramLocalParameter4dARB  { already defined }
  # glProgramLocalParameter4dvARB  { already defined }
  # glProgramLocalParameter4fARB  { already defined }
  # glProgramLocalParameter4fvARB  { already defined }
  # glGetProgramLocalParameterdvARB  { already defined }
  # glGetProgramLocalParameterfvARB  { already defined }
  #***** GL_NV_primitive_restart *****//
const 
  constGLPRIMITIVERESTARTNV* = 0x00008558
  constGLPRIMITIVERESTARTINDEXNV* = 0x00008559

proc glPrimitiveRestartNV*(){.dynlib: dllname, importc: "glPrimitiveRestartNV".}
proc glPrimitiveRestartIndexNV*(index: TGLuint){.dynlib: dllname, 
    importc: "glPrimitiveRestartIndexNV".}
  #***** GL_NV_vertex_program2 *****//
  #***** GL_NV_pixel_data_range *****//
const 
  GlWritePixelDataRangeNv* = 0x00008878
  GlReadPixelDataRangeNv* = 0x00008879
  GlWritePixelDataRangeLengthNv* = 0x0000887A
  GlReadPixelDataRangeLengthNv* = 0x0000887B
  GlWritePixelDataRangePointerNv* = 0x0000887C
  GlReadPixelDataRangePointerNv* = 0x0000887D

proc glPixelDataRangeNV*(target: TGLenum, len: TGLsizei, pointer: PGLvoid){.
    dynlib: dllname, importc: "glPixelDataRangeNV".}
proc glFlushPixelDataRangeNV*(target: TGLenum){.dynlib: dllname, 
    importc: "glFlushPixelDataRangeNV".}
  # wglAllocateMemoryNV  { already defined }
  # wglFreeMemoryNV  { already defined }
  #***** GL_EXT_texture_rectangle *****//
const 
  GlTextureRectangleExt* = 0x000084F5
  GlTextureBindingRectangleExt* = 0x000084F6
  GlProxyTextureRectangleExt* = 0x000084F7
  GlMaxRectangleTextureSizeExt* = 0x000084F8
  #***** GL_S3_s3tc *****//

const 
  GlRgbS3tc* = 0x000083A0
  GlRgb4S3tc* = 0x000083A1
  GlRgbaS3tc* = 0x000083A2
  GlRgba4S3tc* = 0x000083A3
  #***** GL_ATI_draw_buffers *****//

const 
  GlMaxDrawBuffersAti* = 0x00008824
  GlDrawBuffer0Ati* = 0x00008825
  GlDrawBuffer1Ati* = 0x00008826
  GlDrawBuffer2Ati* = 0x00008827
  GlDrawBuffer3Ati* = 0x00008828
  GlDrawBuffer4Ati* = 0x00008829
  GlDrawBuffer5Ati* = 0x0000882A
  GlDrawBuffer6Ati* = 0x0000882B
  GlDrawBuffer7Ati* = 0x0000882C
  GlDrawBuffer8Ati* = 0x0000882D
  GlDrawBuffer9Ati* = 0x0000882E
  GlDrawBuffer10Ati* = 0x0000882F
  GlDrawBuffer11Ati* = 0x00008830
  GlDrawBuffer12Ati* = 0x00008831
  GlDrawBuffer13Ati* = 0x00008832
  GlDrawBuffer14Ati* = 0x00008833
  GlDrawBuffer15Ati* = 0x00008834

proc glDrawBuffersATI*(n: TGLsizei, bufs: PGLenum){.dynlib: dllname, 
    importc: "glDrawBuffersATI".}
  #***** GL_ATI_texture_env_combine3 *****//
const 
  GlModulateAddAti* = 0x00008744
  GlModulateSignedAddAti* = 0x00008745
  GlModulateSubtractAti* = 0x00008746
  #***** GL_ATI_texture_float *****//

const 
  GlRgbaFloat32Ati* = 0x00008814
  GlRgbFloat32Ati* = 0x00008815
  GlAlphaFloat32Ati* = 0x00008816
  GlIntensityFloat32Ati* = 0x00008817
  GlLuminanceFloat32Ati* = 0x00008818
  GlLuminanceAlphaFloat32Ati* = 0x00008819
  GlRgbaFloat16Ati* = 0x0000881A
  GlRgbFloat16Ati* = 0x0000881B
  GlAlphaFloat16Ati* = 0x0000881C
  GlIntensityFloat16Ati* = 0x0000881D
  GlLuminanceFloat16Ati* = 0x0000881E
  GlLuminanceAlphaFloat16Ati* = 0x0000881F
  #***** GL_NV_texture_expand_normal *****//

const 
  GlTextureUnsignedRemapModeNv* = 0x0000888F
  #***** GL_NV_half_float *****//

const 
  GlHalfFloatNv* = 0x0000140B

proc glVertex2hNV*(x: TGLushort, y: TGLushort){.dynlib: dllname, 
    importc: "glVertex2hNV".}
proc glVertex2hvNV*(v: PGLushort){.dynlib: dllname, importc: "glVertex2hvNV".}
proc glVertex3hNV*(x: TGLushort, y: TGLushort, z: TGLushort){.dynlib: dllname, 
    importc: "glVertex3hNV".}
proc glVertex3hvNV*(v: PGLushort){.dynlib: dllname, importc: "glVertex3hvNV".}
proc glVertex4hNV*(x: TGLushort, y: TGLushort, z: TGLushort, w: TGLushort){.
    dynlib: dllname, importc: "glVertex4hNV".}
proc glVertex4hvNV*(v: PGLushort){.dynlib: dllname, importc: "glVertex4hvNV".}
proc glNormal3hNV*(nx: TGLushort, ny: TGLushort, nz: TGLushort){.
    dynlib: dllname, importc: "glNormal3hNV".}
proc glNormal3hvNV*(v: PGLushort){.dynlib: dllname, importc: "glNormal3hvNV".}
proc glColor3hNV*(red: TGLushort, green: TGLushort, blue: TGLushort){.
    dynlib: dllname, importc: "glColor3hNV".}
proc glColor3hvNV*(v: PGLushort){.dynlib: dllname, importc: "glColor3hvNV".}
proc glColor4hNV*(red: TGLushort, green: TGLushort, blue: TGLushort, 
                  alpha: TGLushort){.dynlib: dllname, importc: "glColor4hNV".}
proc glColor4hvNV*(v: PGLushort){.dynlib: dllname, importc: "glColor4hvNV".}
proc glTexCoord1hNV*(s: TGLushort){.dynlib: dllname, importc: "glTexCoord1hNV".}
proc glTexCoord1hvNV*(v: PGLushort){.dynlib: dllname, importc: "glTexCoord1hvNV".}
proc glTexCoord2hNV*(s: TGLushort, t: TGLushort){.dynlib: dllname, 
    importc: "glTexCoord2hNV".}
proc glTexCoord2hvNV*(v: PGLushort){.dynlib: dllname, importc: "glTexCoord2hvNV".}
proc glTexCoord3hNV*(s: TGLushort, t: TGLushort, r: TGLushort){.dynlib: dllname, 
    importc: "glTexCoord3hNV".}
proc glTexCoord3hvNV*(v: PGLushort){.dynlib: dllname, importc: "glTexCoord3hvNV".}
proc glTexCoord4hNV*(s: TGLushort, t: TGLushort, r: TGLushort, q: TGLushort){.
    dynlib: dllname, importc: "glTexCoord4hNV".}
proc glTexCoord4hvNV*(v: PGLushort){.dynlib: dllname, importc: "glTexCoord4hvNV".}
proc glMultiTexCoord1hNV*(target: TGLenum, s: TGLushort){.dynlib: dllname, 
    importc: "glMultiTexCoord1hNV".}
proc glMultiTexCoord1hvNV*(target: TGLenum, v: PGLushort){.dynlib: dllname, 
    importc: "glMultiTexCoord1hvNV".}
proc glMultiTexCoord2hNV*(target: TGLenum, s: TGLushort, t: TGLushort){.
    dynlib: dllname, importc: "glMultiTexCoord2hNV".}
proc glMultiTexCoord2hvNV*(target: TGLenum, v: PGLushort){.dynlib: dllname, 
    importc: "glMultiTexCoord2hvNV".}
proc glMultiTexCoord3hNV*(target: TGLenum, s: TGLushort, t: TGLushort, 
                          r: TGLushort){.dynlib: dllname, 
    importc: "glMultiTexCoord3hNV".}
proc glMultiTexCoord3hvNV*(target: TGLenum, v: PGLushort){.dynlib: dllname, 
    importc: "glMultiTexCoord3hvNV".}
proc glMultiTexCoord4hNV*(target: TGLenum, s: TGLushort, t: TGLushort, 
                          r: TGLushort, q: TGLushort){.dynlib: dllname, 
    importc: "glMultiTexCoord4hNV".}
proc glMultiTexCoord4hvNV*(target: TGLenum, v: PGLushort){.dynlib: dllname, 
    importc: "glMultiTexCoord4hvNV".}
proc glFogCoordhNV*(fog: TGLushort){.dynlib: dllname, importc: "glFogCoordhNV".}
proc glFogCoordhvNV*(fog: PGLushort){.dynlib: dllname, importc: "glFogCoordhvNV".}
proc glSecondaryColor3hNV*(red: TGLushort, green: TGLushort, blue: TGLushort){.
    dynlib: dllname, importc: "glSecondaryColor3hNV".}
proc glSecondaryColor3hvNV*(v: PGLushort){.dynlib: dllname, 
    importc: "glSecondaryColor3hvNV".}
proc glVertexWeighthNV*(weight: TGLushort){.dynlib: dllname, 
    importc: "glVertexWeighthNV".}
proc glVertexWeighthvNV*(weight: PGLushort){.dynlib: dllname, 
    importc: "glVertexWeighthvNV".}
proc glVertexAttrib1hNV*(index: TGLuint, x: TGLushort){.dynlib: dllname, 
    importc: "glVertexAttrib1hNV".}
proc glVertexAttrib1hvNV*(index: TGLuint, v: PGLushort){.dynlib: dllname, 
    importc: "glVertexAttrib1hvNV".}
proc glVertexAttrib2hNV*(index: TGLuint, x: TGLushort, y: TGLushort){.
    dynlib: dllname, importc: "glVertexAttrib2hNV".}
proc glVertexAttrib2hvNV*(index: TGLuint, v: PGLushort){.dynlib: dllname, 
    importc: "glVertexAttrib2hvNV".}
proc glVertexAttrib3hNV*(index: TGLuint, x: TGLushort, y: TGLushort, 
                         z: TGLushort){.dynlib: dllname, 
                                        importc: "glVertexAttrib3hNV".}
proc glVertexAttrib3hvNV*(index: TGLuint, v: PGLushort){.dynlib: dllname, 
    importc: "glVertexAttrib3hvNV".}
proc glVertexAttrib4hNV*(index: TGLuint, x: TGLushort, y: TGLushort, 
                         z: TGLushort, w: TGLushort){.dynlib: dllname, 
    importc: "glVertexAttrib4hNV".}
proc glVertexAttrib4hvNV*(index: TGLuint, v: PGLushort){.dynlib: dllname, 
    importc: "glVertexAttrib4hvNV".}
proc glVertexAttribs1hvNV*(index: TGLuint, n: TGLsizei, v: PGLushort){.
    dynlib: dllname, importc: "glVertexAttribs1hvNV".}
proc glVertexAttribs2hvNV*(index: TGLuint, n: TGLsizei, v: PGLushort){.
    dynlib: dllname, importc: "glVertexAttribs2hvNV".}
proc glVertexAttribs3hvNV*(index: TGLuint, n: TGLsizei, v: PGLushort){.
    dynlib: dllname, importc: "glVertexAttribs3hvNV".}
proc glVertexAttribs4hvNV*(index: TGLuint, n: TGLsizei, v: PGLushort){.
    dynlib: dllname, importc: "glVertexAttribs4hvNV".}
  #***** GL_ATI_map_object_buffer *****//
proc glMapObjectBufferATI*(buffer: TGLuint): PGLvoid{.dynlib: dllname, 
    importc: "glMapObjectBufferATI".}
proc glUnmapObjectBufferATI*(buffer: TGLuint){.dynlib: dllname, 
    importc: "glUnmapObjectBufferATI".}
  #***** GL_ATI_separate_stencil *****//
const 
  GlKeep* = 0x00001E00
  GlZero* = 0x00000000
  GlReplace* = 0x00001E01
  GlIncr* = 0x00001E02
  GlDecr* = 0x00001E03
  GlInvert* = 0x0000150A
  GlNever* = 0x00000200
  GlLess* = 0x00000201
  GlLequal* = 0x00000203
  GlGreater* = 0x00000204
  GlGequal* = 0x00000206
  GlEqual* = 0x00000202
  GlNotequal* = 0x00000205
  GlAlways* = 0x00000207
  GlFront* = 0x00000404
  GlBack* = 0x00000405
  GlFrontAndBack* = 0x00000408
  GlStencilBackFuncAti* = 0x00008800
  GlStencilBackFailAti* = 0x00008801
  GlStencilBackPassDepthFailAti* = 0x00008802
  GlStencilBackPassDepthPassAti* = 0x00008803

proc glStencilOpSeparateATI*(face: TGLenum, sfail: TGLenum, dpfail: TGLenum, 
                             dppass: TGLenum){.dynlib: dllname, 
    importc: "glStencilOpSeparateATI".}
proc glStencilFuncSeparateATI*(frontfunc: TGLenum, backfunc: TGLenum, 
                               theRef: TGLint, mask: TGLuint){.dynlib: dllname, 
    importc: "glStencilFuncSeparateATI".}
  #***** GL_ATI_vertex_attrib_array_object *****//
proc glVertexAttribArrayObjectATI*(index: TGLuint, size: TGLint, 
                                   thetype: TGLenum, normalized: TGLboolean, 
                                   stride: TGLsizei, buffer: TGLuint, 
                                   offset: TGLuint){.dynlib: dllname, 
    importc: "glVertexAttribArrayObjectATI".}
proc glGetVertexAttribArrayObjectfvATI*(index: TGLuint, pname: TGLenum, 
                                        params: PGLfloat){.dynlib: dllname, 
    importc: "glGetVertexAttribArrayObjectfvATI".}
proc glGetVertexAttribArrayObjectivATI*(index: TGLuint, pname: TGLenum, 
                                        params: PGLint){.dynlib: dllname, 
    importc: "glGetVertexAttribArrayObjectivATI".}
  #***** GL_ARB_occlusion_query *****//
const 
  GlSamplesPassedArb* = 0x00008914
  GlQueryCounterBitsArb* = 0x00008864
  GlCurrentQueryArb* = 0x00008865
  GlQueryResultArb* = 0x00008866
  GlQueryResultAvailableArb* = 0x00008867

proc glGenQueriesARB*(n: TGLsizei, ids: PGLuint){.dynlib: dllname, 
    importc: "glGenQueriesARB".}
proc glDeleteQueriesARB*(n: TGLsizei, ids: PGLuint){.dynlib: dllname, 
    importc: "glDeleteQueriesARB".}
proc glIsQueryARB*(id: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsQueryARB".}
proc glBeginQueryARB*(target: TGLenum, id: TGLuint){.dynlib: dllname, 
    importc: "glBeginQueryARB".}
proc glEndQueryARB*(target: TGLenum){.dynlib: dllname, importc: "glEndQueryARB".}
proc glGetQueryivARB*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetQueryivARB".}
proc glGetQueryObjectivARB*(id: TGLuint, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetQueryObjectivARB".}
proc glGetQueryObjectuivARB*(id: TGLuint, pname: TGLenum, params: PGLuint){.
    dynlib: dllname, importc: "glGetQueryObjectuivARB".}
  #***** GL_ARB_shader_objects *****//
const 
  GlProgramObjectArb* = 0x00008B40
  GlObjectTypeArb* = 0x00008B4E
  GlObjectSubtypeArb* = 0x00008B4F
  GlObjectDeleteStatusArb* = 0x00008B80
  GlObjectCompileStatusArb* = 0x00008B81
  GlObjectLinkStatusArb* = 0x00008B82
  GlObjectValidateStatusArb* = 0x00008B83
  GlObjectInfoLogLengthArb* = 0x00008B84
  GlObjectAttachedObjectsArb* = 0x00008B85
  GlObjectActiveUniformsArb* = 0x00008B86
  GlObjectActiveUniformMaxLengthArb* = 0x00008B87
  GlObjectShaderSourceLengthArb* = 0x00008B88
  GlShaderObjectArb* = 0x00008B48
  GlFloat* = 0x00001406
  GlFloatVec2Arb* = 0x00008B50
  GlFloatVec3Arb* = 0x00008B51
  GlFloatVec4Arb* = 0x00008B52
  GlInt* = 0x00001404
  GlIntVec2Arb* = 0x00008B53
  GlIntVec3Arb* = 0x00008B54
  GlIntVec4Arb* = 0x00008B55
  GlBoolArb* = 0x00008B56
  GlBoolVec2Arb* = 0x00008B57
  GlBoolVec3Arb* = 0x00008B58
  GlBoolVec4Arb* = 0x00008B59
  GlFloatMat2Arb* = 0x00008B5A
  GlFloatMat3Arb* = 0x00008B5B
  GlFloatMat4Arb* = 0x00008B5C

proc glDeleteObjectARB*(obj: GLhandleARB){.dynlib: dllname, 
    importc: "glDeleteObjectARB".}
proc glGetHandleARB*(pname: TGLenum): GLhandleARB{.dynlib: dllname, 
    importc: "glGetHandleARB".}
proc glDetachObjectARB*(containerObj: GLhandleARB, attachedObj: GLhandleARB){.
    dynlib: dllname, importc: "glDetachObjectARB".}
proc glCreateShaderObjectARB*(shaderType: TGLenum): GLhandleARB{.
    dynlib: dllname, importc: "glCreateShaderObjectARB".}
proc glShaderSourceARB*(shaderObj: GLhandleARB, count: TGLsizei, str: PGLvoid, 
                        len: PGLint){.dynlib: dllname, 
                                      importc: "glShaderSourceARB".}
proc glCompileShaderARB*(shaderObj: GLhandleARB){.dynlib: dllname, 
    importc: "glCompileShaderARB".}
proc glCreateProgramObjectARB*(): GLhandleARB{.dynlib: dllname, 
    importc: "glCreateProgramObjectARB".}
proc glAttachObjectARB*(containerObj: GLhandleARB, obj: GLhandleARB){.
    dynlib: dllname, importc: "glAttachObjectARB".}
proc glLinkProgramARB*(programObj: GLhandleARB){.dynlib: dllname, 
    importc: "glLinkProgramARB".}
proc glUseProgramObjectARB*(programObj: GLhandleARB){.dynlib: dllname, 
    importc: "glUseProgramObjectARB".}
proc glValidateProgramARB*(programObj: GLhandleARB){.dynlib: dllname, 
    importc: "glValidateProgramARB".}
proc glUniform1fARB*(location: TGLint, v0: TGLfloat){.dynlib: dllname, 
    importc: "glUniform1fARB".}
proc glUniform2fARB*(location: TGLint, v0: TGLfloat, v1: TGLfloat){.
    dynlib: dllname, importc: "glUniform2fARB".}
proc glUniform3fARB*(location: TGLint, v0: TGLfloat, v1: TGLfloat, v2: TGLfloat){.
    dynlib: dllname, importc: "glUniform3fARB".}
proc glUniform4fARB*(location: TGLint, v0: TGLfloat, v1: TGLfloat, v2: TGLfloat, 
                     v3: TGLfloat){.dynlib: dllname, importc: "glUniform4fARB".}
proc glUniform1iARB*(location: TGLint, v0: TGLint){.dynlib: dllname, 
    importc: "glUniform1iARB".}
proc glUniform2iARB*(location: TGLint, v0: TGLint, v1: TGLint){.dynlib: dllname, 
    importc: "glUniform2iARB".}
proc glUniform3iARB*(location: TGLint, v0: TGLint, v1: TGLint, v2: TGLint){.
    dynlib: dllname, importc: "glUniform3iARB".}
proc glUniform4iARB*(location: TGLint, v0: TGLint, v1: TGLint, v2: TGLint, 
                     v3: TGLint){.dynlib: dllname, importc: "glUniform4iARB".}
proc glUniform1fvARB*(location: TGLint, count: TGLsizei, value: PGLfloat){.
    dynlib: dllname, importc: "glUniform1fvARB".}
proc glUniform2fvARB*(location: TGLint, count: TGLsizei, value: PGLfloat){.
    dynlib: dllname, importc: "glUniform2fvARB".}
proc glUniform3fvARB*(location: TGLint, count: TGLsizei, value: PGLfloat){.
    dynlib: dllname, importc: "glUniform3fvARB".}
proc glUniform4fvARB*(location: TGLint, count: TGLsizei, value: PGLfloat){.
    dynlib: dllname, importc: "glUniform4fvARB".}
proc glUniform1ivARB*(location: TGLint, count: TGLsizei, value: PGLint){.
    dynlib: dllname, importc: "glUniform1ivARB".}
proc glUniform2ivARB*(location: TGLint, count: TGLsizei, value: PGLint){.
    dynlib: dllname, importc: "glUniform2ivARB".}
proc glUniform3ivARB*(location: TGLint, count: TGLsizei, value: PGLint){.
    dynlib: dllname, importc: "glUniform3ivARB".}
proc glUniform4ivARB*(location: TGLint, count: TGLsizei, value: PGLint){.
    dynlib: dllname, importc: "glUniform4ivARB".}
proc glUniformMatrix2fvARB*(location: TGLint, count: TGLsizei, 
                            transpose: TGLboolean, value: PGLfloat){.
    dynlib: dllname, importc: "glUniformMatrix2fvARB".}
proc glUniformMatrix3fvARB*(location: TGLint, count: TGLsizei, 
                            transpose: TGLboolean, value: PGLfloat){.
    dynlib: dllname, importc: "glUniformMatrix3fvARB".}
proc glUniformMatrix4fvARB*(location: TGLint, count: TGLsizei, 
                            transpose: TGLboolean, value: PGLfloat){.
    dynlib: dllname, importc: "glUniformMatrix4fvARB".}
proc glGetObjectParameterfvARB*(obj: GLhandleARB, pname: TGLenum, 
                                params: PGLfloat){.dynlib: dllname, 
    importc: "glGetObjectParameterfvARB".}
proc glGetObjectParameterivARB*(obj: GLhandleARB, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetObjectParameterivARB".}
proc glGetInfoLogARB*(obj: GLhandleARB, maxLength: TGLsizei, len: PGLsizei, 
                      infoLog: PGLcharARB){.dynlib: dllname, 
    importc: "glGetInfoLogARB".}
proc glGetAttachedObjectsARB*(containerObj: GLhandleARB, maxCount: TGLsizei, 
                              count: PGLsizei, obj: PGLhandleARB){.
    dynlib: dllname, importc: "glGetAttachedObjectsARB".}
proc glGetUniformLocationARB*(programObj: GLhandleARB, name: PGLcharARB): TGLint{.
    dynlib: dllname, importc: "glGetUniformLocationARB".}
proc glGetActiveUniformARB*(programObj: GLhandleARB, index: TGLuint, 
                            maxLength: TGLsizei, len: PGLsizei, size: PGLint, 
                            thetype: PGLenum, name: PGLcharARB){.
    dynlib: dllname, importc: "glGetActiveUniformARB".}
proc glGetUniformfvARB*(programObj: GLhandleARB, location: TGLint, 
                        params: PGLfloat){.dynlib: dllname, 
    importc: "glGetUniformfvARB".}
proc glGetUniformivARB*(programObj: GLhandleARB, location: TGLint, 
                        params: PGLint){.dynlib: dllname, 
    importc: "glGetUniformivARB".}
proc glGetShaderSourceARB*(obj: GLhandleARB, maxLength: TGLsizei, len: PGLsizei, 
                           source: PGLcharARB){.dynlib: dllname, 
    importc: "glGetShaderSourceARB".}
const 
  GlVertexShaderArb* = 0x00008B31
  GlMaxVertexUniformComponentsArb* = 0x00008B4A
  GlMaxVaryingFloatsArb* = 0x00008B4B # GL_MAX_VERTEX_ATTRIBS_ARB  { already defined }
                                          # GL_MAX_TEXTURE_IMAGE_UNITS_ARB  { already defined }
  GlMaxVertexTextureImageUnitsArb* = 0x00008B4C
  GlMaxCombinedTextureImageUnitsArb* = 0x00008B4D # 
                                                        # 
                                                        # GL_MAX_TEXTURE_COORDS_ARB  { already defined }
                                                        # 
                                                        # 
                                                        # GL_VERTEX_PROGRAM_POINT_SIZE_ARB  { already defined }
                                                        # 
                                                        # 
                                                        # GL_VERTEX_PROGRAM_TWO_SIDE_ARB  { already defined }
                                                        # GL_OBJECT_TYPE_ARB  { already defined }
                                                        # GL_OBJECT_SUBTYPE_ARB  { already defined }
  GlObjectActiveAttributesArb* = 0x00008B89
  GlObjectActiveAttributeMaxLengthArb* = 0x00008B8A # GL_SHADER_OBJECT_ARB  { already defined }
                                                          # 
                                                          # 
                                                          # GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB  { already defined }
                                                          # 
                                                          # 
                                                          # GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB  { already defined }
                                                          # 
                                                          # 
                                                          # GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB  { already defined }
                                                          # 
                                                          # 
                                                          # GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB  { already defined }
                                                          # 
                                                          # 
                                                          # GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB  { already defined }
                                                          # 
                                                          # 
                                                          # GL_CURRENT_VERTEX_ATTRIB_ARB  { already defined }
                                                          # 
                                                          # 
                                                          # GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB  { already defined }
                                                          # GL_FLOAT  { already defined }
                                                          # GL_FLOAT_VEC2_ARB  { already defined }
                                                          # GL_FLOAT_VEC3_ARB  { already defined }
                                                          # GL_FLOAT_VEC4_ARB  { already defined }
                                                          # GL_FLOAT_MAT2_ARB  { already defined }
                                                          # GL_FLOAT_MAT3_ARB  { already defined }
                                                          # GL_FLOAT_MAT4_ARB  { already defined }
                                                          # glVertexAttrib1fARB  { already defined }
                                                          # glVertexAttrib1sARB  { already defined }
                                                          # glVertexAttrib1dARB  { already defined }
                                                          # glVertexAttrib2fARB  { already defined }
                                                          # glVertexAttrib2sARB  { already defined }
                                                          # glVertexAttrib2dARB  { already defined }
                                                          # glVertexAttrib3fARB  { already defined }
                                                          # glVertexAttrib3sARB  { already defined }
                                                          # glVertexAttrib3dARB  { already defined }
                                                          # glVertexAttrib4fARB  { already defined }
                                                          # glVertexAttrib4sARB  { already defined }
                                                          # glVertexAttrib4dARB  { already defined }
                                                          # glVertexAttrib4NubARB  { already defined }
                                                          # glVertexAttrib1fvARB  { already defined }
                                                          # glVertexAttrib1svARB  { already defined }
                                                          # glVertexAttrib1dvARB  { already defined }
                                                          # glVertexAttrib2fvARB  { already defined }
                                                          # glVertexAttrib2svARB  { already defined }
                                                          # glVertexAttrib2dvARB  { already defined }
                                                          # glVertexAttrib3fvARB  { already defined }
                                                          # glVertexAttrib3svARB  { already defined }
                                                          # glVertexAttrib3dvARB  { already defined }
                                                          # glVertexAttrib4fvARB  { already defined }
                                                          # glVertexAttrib4svARB  { already defined }
                                                          # glVertexAttrib4dvARB  { already defined }
                                                          # glVertexAttrib4ivARB  { already defined }
                                                          # glVertexAttrib4bvARB  { already defined }
                                                          # glVertexAttrib4ubvARB  { already defined }
                                                          # glVertexAttrib4usvARB  { already defined }
                                                          # glVertexAttrib4uivARB  { already defined }
                                                          # glVertexAttrib4NbvARB  { already defined }
                                                          # glVertexAttrib4NsvARB  { already defined }
                                                          # glVertexAttrib4NivARB  { already defined }
                                                          # glVertexAttrib4NubvARB  { already defined }
                                                          # glVertexAttrib4NusvARB  { already defined }
                                                          # glVertexAttrib4NuivARB  { already defined }
                                                          # 
                                                          # 
                                                          # glVertexAttribPointerARB  { already defined }
                                                          # 
                                                          # 
                                                          # glEnableVertexAttribArrayARB  { already defined }
                                                          # 
                                                          # 
                                                          # glDisableVertexAttribArrayARB  { already defined }

proc glBindAttribLocationARB*(programObj: GLhandleARB, index: TGLuint, 
                              name: PGLcharARB){.dynlib: dllname, 
    importc: "glBindAttribLocationARB".}
proc glGetActiveAttribARB*(programObj: GLhandleARB, index: TGLuint, 
                           maxLength: TGLsizei, len: PGLsizei, size: PGLint, 
                           thetype: PGLenum, name: PGLcharARB){.dynlib: dllname, 
    importc: "glGetActiveAttribARB".}
proc glGetAttribLocationARB*(programObj: GLhandleARB, name: PGLcharARB): TGLint{.
    dynlib: dllname, importc: "glGetAttribLocationARB".}
  # glGetVertexAttribdvARB  { already defined }
  # glGetVertexAttribfvARB  { already defined }
  # glGetVertexAttribivARB  { already defined }
  # glGetVertexAttribPointervARB  { already defined }
  #***** GL_ARB_fragment_shader *****//
const 
  GlFragmentShaderArb* = 0x00008B30
  GlMaxFragmentUniformComponentsArb* = 0x00008B49 # GL_MAX_TEXTURE_COORDS_ARB  { already defined }
                                                       # 
                                                       # 
                                                       # GL_MAX_TEXTURE_IMAGE_UNITS_ARB  { already defined }
                                                       # GL_OBJECT_TYPE_ARB  { already defined }
                                                       # GL_OBJECT_SUBTYPE_ARB  { already defined }
                                                       # GL_SHADER_OBJECT_ARB  { already defined }
  #***** GL_ARB_shading_language_100 *****//
  #***** GL_ARB_texture_non_power_of_two *****//
  #***** GL_ARB_point_sprite *****//

const 
  GlPointSpriteArb* = 0x00008861
  GlCoordReplaceArb* = 0x00008862
  #***** GL_EXT_depth_bounds_test *****//

const 
  constGLDEPTHBOUNDSTESTEXT* = 0x00008890
  constGLDEPTHBOUNDSEXT* = 0x00008891

proc glDepthBoundsEXT*(zmin: TGLclampd, zmax: TGLclampd){.dynlib: dllname, 
    importc: "glDepthBoundsEXT".}
  #***** GL_EXT_texture_mirror_clamp *****//
const 
  GlMirrorClampExt* = 0x00008742
  GlMirrorClampToEdgeExt* = 0x00008743
  GlMirrorClampToBorderExt* = 0x00008912
  #***** GL_EXT_blend_equation_separate *****//

const 
  GlBlendEquationRgbExt* = 0x00008009
  GlBlendEquationAlphaExt* = 0x0000883D

proc glBlendEquationSeparateEXT*(modeRGB: TGLenum, modeAlpha: TGLenum){.
    dynlib: dllname, importc: "glBlendEquationSeparateEXT".}
  #***** GL_MESA_pack_invert *****//
const 
  GlPackInvertMesa* = 0x00008758
  #***** GL_MESA_ycbcr_texture *****//

const 
  GlYcbcrMesa* = 0x00008757
  GlUnsignedShort88Mesa* = 0x000085BA
  GlUnsignedShort88RevMesa* = 0x000085BB
  #***** GL_ARB_fragment_program_shadow *****//
  #***** GL_NV_fragment_program_option *****//
  #***** GL_EXT_pixel_buffer_object *****//

const 
  GlPixelPackBufferExt* = 0x000088EB
  GlPixelUnpackBufferExt* = 0x000088EC
  GlPixelPackBufferBindingExt* = 0x000088ED
  GlPixelUnpackBufferBindingExt* = 0x000088EF
  #***** GL_NV_fragment_program2 *****//

const 
  GlMaxProgramExecInstructionsNv* = 0x000088F4
  GlMaxProgramCallDepthNv* = 0x000088F5
  GlMaxProgramIfDepthNv* = 0x000088F6
  GlMaxProgramLoopDepthNv* = 0x000088F7
  GlMaxProgramLoopCountNv* = 0x000088F8
  #***** GL_NV_vertex_program2_option *****//
  # GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV  { already defined }
  # GL_MAX_PROGRAM_CALL_DEPTH_NV  { already defined }
  #***** GL_NV_vertex_program3 *****//
  # GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB  { already defined }
  #***** GL_ARB_draw_buffers *****//

const 
  GlMaxDrawBuffersArb* = 0x00008824
  GlDrawBuffer0Arb* = 0x00008825
  GlDrawBuffer1Arb* = 0x00008826
  GlDrawBuffer2Arb* = 0x00008827
  GlDrawBuffer3Arb* = 0x00008828
  GlDrawBuffer4Arb* = 0x00008829
  GlDrawBuffer5Arb* = 0x0000882A
  GlDrawBuffer6Arb* = 0x0000882B
  GlDrawBuffer7Arb* = 0x0000882C
  GlDrawBuffer8Arb* = 0x0000882D
  GlDrawBuffer9Arb* = 0x0000882E
  GlDrawBuffer10Arb* = 0x0000882F
  GlDrawBuffer11Arb* = 0x00008830
  GlDrawBuffer12Arb* = 0x00008831
  GlDrawBuffer13Arb* = 0x00008832
  GlDrawBuffer14Arb* = 0x00008833
  GlDrawBuffer15Arb* = 0x00008834

proc glDrawBuffersARB*(n: TGLsizei, bufs: PGLenum){.dynlib: dllname, 
    importc: "glDrawBuffersARB".}
  #***** GL_ARB_texture_rectangle *****//
const 
  GlTextureRectangleArb* = 0x000084F5
  GlTextureBindingRectangleArb* = 0x000084F6
  GlProxyTextureRectangleArb* = 0x000084F7
  GlMaxRectangleTextureSizeArb* = 0x000084F8
  #***** GL_ARB_color_buffer_float *****//

const 
  GlRgbaFloatModeArb* = 0x00008820
  GlClampVertexColorArb* = 0x0000891A
  GlClampFragmentColorArb* = 0x0000891B
  GlClampReadColorArb* = 0x0000891C
  GlFixedOnlyArb* = 0x0000891D
  WglTypeRgbaFloatArb* = 0x000021A0

proc glClampColorARB*(target: TGLenum, clamp: TGLenum){.dynlib: dllname, 
    importc: "glClampColorARB".}
  #***** GL_ARB_half_float_pixel *****//
const 
  GlHalfFloatArb* = 0x0000140B
  #***** GL_ARB_texture_float *****//

const 
  GlTextureRedTypeArb* = 0x00008C10
  GlTextureGreenTypeArb* = 0x00008C11
  GlTextureBlueTypeArb* = 0x00008C12
  GlTextureAlphaTypeArb* = 0x00008C13
  GlTextureLuminanceTypeArb* = 0x00008C14
  GlTextureIntensityTypeArb* = 0x00008C15
  GlTextureDepthTypeArb* = 0x00008C16
  GlUnsignedNormalizedArb* = 0x00008C17
  GlRgba32fArb* = 0x00008814
  GlRgb32fArb* = 0x00008815
  GlAlpha32fArb* = 0x00008816
  GlIntensity32fArb* = 0x00008817
  GlLuminance32fArb* = 0x00008818
  GlLuminanceAlpha32fArb* = 0x00008819
  GlRgba16fArb* = 0x0000881A
  GlRgb16fArb* = 0x0000881B
  GlAlpha16fArb* = 0x0000881C
  GlIntensity16fArb* = 0x0000881D
  GlLuminance16fArb* = 0x0000881E
  GlLuminanceAlpha16fArb* = 0x0000881F
  #***** GL_EXT_texture_compression_dxt1 *****//
  # GL_COMPRESSED_RGB_S3TC_DXT1_EXT  { already defined }
  # GL_COMPRESSED_RGBA_S3TC_DXT1_EXT  { already defined }
  #***** GL_ARB_pixel_buffer_object *****//

const 
  GlPixelPackBufferArb* = 0x000088EB
  GlPixelUnpackBufferArb* = 0x000088EC
  GlPixelPackBufferBindingArb* = 0x000088ED
  GlPixelUnpackBufferBindingArb* = 0x000088EF
  #***** GL_EXT_framebuffer_object *****//

const 
  GlFramebufferExt* = 0x00008D40
  GlRenderbufferExt* = 0x00008D41
  GlStencilIndexExt* = 0x00008D45
  GlStencilIndex1Ext* = 0x00008D46
  GlStencilIndex4Ext* = 0x00008D47
  GlStencilIndex8Ext* = 0x00008D48
  GlStencilIndex16Ext* = 0x00008D49
  GlRenderbufferWidthExt* = 0x00008D42
  GlRenderbufferHeightExt* = 0x00008D43
  GlRenderbufferInternalFormatExt* = 0x00008D44
  GlFramebufferAttachmentObjectTypeExt* = 0x00008CD0
  GlFramebufferAttachmentObjectNameExt* = 0x00008CD1
  GlFramebufferAttachmentTextureLevelExt* = 0x00008CD2
  GlFramebufferAttachmentTextureCubeMapFaceExt* = 0x00008CD3
  GlFramebufferAttachmentTexture3dZoffsetExt* = 0x00008CD4
  GlColorAttachment0Ext* = 0x00008CE0
  GlColorAttachment1Ext* = 0x00008CE1
  GlColorAttachment2Ext* = 0x00008CE2
  GlColorAttachment3Ext* = 0x00008CE3
  GlColorAttachment4Ext* = 0x00008CE4
  GlColorAttachment5Ext* = 0x00008CE5
  GlColorAttachment6Ext* = 0x00008CE6
  GlColorAttachment7Ext* = 0x00008CE7
  GlColorAttachment8Ext* = 0x00008CE8
  GlColorAttachment9Ext* = 0x00008CE9
  GlColorAttachment10Ext* = 0x00008CEA
  GlColorAttachment11Ext* = 0x00008CEB
  GlColorAttachment12Ext* = 0x00008CEC
  GlColorAttachment13Ext* = 0x00008CED
  GlColorAttachment14Ext* = 0x00008CEE
  GlColorAttachment15Ext* = 0x00008CEF
  GlDepthAttachmentExt* = 0x00008D00
  GlStencilAttachmentExt* = 0x00008D20
  GlFramebufferCompleteExt* = 0x00008CD5
  GlFramebufferIncompleteAttachmentExt* = 0x00008CD6
  GlFramebufferIncompleteMissingAttachmentExt* = 0x00008CD7
  GlFramebufferIncompleteDuplicateAttachmentExt* = 0x00008CD8
  GlFramebufferIncompleteDimensionsExt* = 0x00008CD9
  GlFramebufferIncompleteFormatsExt* = 0x00008CDA
  GlFramebufferIncompleteDrawBufferExt* = 0x00008CDB
  GlFramebufferIncompleteReadBufferExt* = 0x00008CDC
  GlFramebufferUnsupportedExt* = 0x00008CDD
  GlFramebufferStatusErrorExt* = 0x00008CDE
  GlFramebufferBindingExt* = 0x00008CA6
  GlRenderbufferBindingExt* = 0x00008CA7
  GlMaxColorAttachmentsExt* = 0x00008CDF
  GlMaxRenderbufferSizeExt* = 0x000084E8
  GlInvalidFramebufferOperationExt* = 0x00000506

proc glIsRenderbufferEXT*(renderbuffer: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsRenderbufferEXT".}
proc glBindRenderbufferEXT*(target: TGLenum, renderbuffer: TGLuint){.
    dynlib: dllname, importc: "glBindRenderbufferEXT".}
proc glDeleteRenderbuffersEXT*(n: TGLsizei, renderbuffers: PGLuint){.
    dynlib: dllname, importc: "glDeleteRenderbuffersEXT".}
proc glGenRenderbuffersEXT*(n: TGLsizei, renderbuffers: PGLuint){.
    dynlib: dllname, importc: "glGenRenderbuffersEXT".}
proc glRenderbufferStorageEXT*(target: TGLenum, internalformat: TGLenum, 
                               width: TGLsizei, height: TGLsizei){.
    dynlib: dllname, importc: "glRenderbufferStorageEXT".}
proc glGetRenderbufferParameterivEXT*(target: TGLenum, pname: TGLenum, 
                                      params: PGLint){.dynlib: dllname, 
    importc: "glGetRenderbufferParameterivEXT".}
proc glIsFramebufferEXT*(framebuffer: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsFramebufferEXT".}
proc glBindFramebufferEXT*(target: TGLenum, framebuffer: TGLuint){.
    dynlib: dllname, importc: "glBindFramebufferEXT".}
proc glDeleteFramebuffersEXT*(n: TGLsizei, framebuffers: PGLuint){.
    dynlib: dllname, importc: "glDeleteFramebuffersEXT".}
proc glGenFramebuffersEXT*(n: TGLsizei, framebuffers: PGLuint){.dynlib: dllname, 
    importc: "glGenFramebuffersEXT".}
proc glCheckFramebufferStatusEXT*(target: TGLenum): TGLenum{.dynlib: dllname, 
    importc: "glCheckFramebufferStatusEXT".}
proc glFramebufferTexture1DEXT*(target: TGLenum, attachment: TGLenum, 
                                textarget: TGLenum, texture: TGLuint, 
                                level: TGLint){.dynlib: dllname, 
    importc: "glFramebufferTexture1DEXT".}
proc glFramebufferTexture2DEXT*(target: TGLenum, attachment: TGLenum, 
                                textarget: TGLenum, texture: TGLuint, 
                                level: TGLint){.dynlib: dllname, 
    importc: "glFramebufferTexture2DEXT".}
proc glFramebufferTexture3DEXT*(target: TGLenum, attachment: TGLenum, 
                                textarget: TGLenum, texture: TGLuint, 
                                level: TGLint, zoffset: TGLint){.
    dynlib: dllname, importc: "glFramebufferTexture3DEXT".}
proc glFramebufferRenderbufferEXT*(target: TGLenum, attachment: TGLenum, 
                                   renderbuffertarget: TGLenum, 
                                   renderbuffer: TGLuint){.dynlib: dllname, 
    importc: "glFramebufferRenderbufferEXT".}
proc glGetFramebufferAttachmentParameterivEXT*(target: TGLenum, 
    attachment: TGLenum, pname: TGLenum, params: PGLint){.dynlib: dllname, 
    importc: "glGetFramebufferAttachmentParameterivEXT".}
proc glGenerateMipmapEXT*(target: TGLenum){.dynlib: dllname, 
    importc: "glGenerateMipmapEXT".}
  #***** GL_version_1_4 *****//
const 
  GlBlendDstRgb* = 0x000080C8
  GlBlendSrcRgb* = 0x000080C9
  GlBlendDstAlpha* = 0x000080CA
  GlBlendSrcAlpha* = 0x000080CB
  GlPointSizeMin* = 0x00008126
  GlPointSizeMax* = 0x00008127
  GlPointFadeThresholdSize* = 0x00008128
  GlPointDistanceAttenuation* = 0x00008129
  GlGenerateMipmap* = 0x00008191
  GlGenerateMipmapHint* = 0x00008192
  GlDepthComponent16* = 0x000081A5
  GlDepthComponent24* = 0x000081A6
  GlDepthComponent32* = 0x000081A7
  GlMirroredRepeat* = 0x00008370
  GlFogCoordinateSource* = 0x00008450
  GlFogCoordinate* = 0x00008451
  GlFragmentDepth* = 0x00008452
  GlCurrentFogCoordinate* = 0x00008453
  GlFogCoordinateArrayType* = 0x00008454
  GlFogCoordinateArrayStride* = 0x00008455
  GlFogCoordinateArrayPointer* = 0x00008456
  GlFogCoordinateArray* = 0x00008457
  GlColorSum* = 0x00008458
  GlCurrentSecondaryColor* = 0x00008459
  GlSecondaryColorArraySize* = 0x0000845A
  GlSecondaryColorArrayType* = 0x0000845B
  GlSecondaryColorArrayStride* = 0x0000845C
  GlSecondaryColorArrayPointer* = 0x0000845D
  GlSecondaryColorArray* = 0x0000845E
  GlMaxTextureLodBias* = 0x000084FD
  GlTextureFilterControl* = 0x00008500
  GlTextureLodBias* = 0x00008501
  GlIncrWrap* = 0x00008507
  GlDecrWrap* = 0x00008508
  GlTextureDepthSize* = 0x0000884A
  GlDepthTextureMode* = 0x0000884B
  GlTextureCompareMode* = 0x0000884C
  GlTextureCompareFunc* = 0x0000884D
  GlCompareRToTexture* = 0x0000884E

proc glBlendFuncSeparate*(sfactorRGB: TGLenum, dfactorRGB: TGLenum, 
                          sfactorAlpha: TGLenum, dfactorAlpha: TGLenum){.
    dynlib: dllname, importc: "glBlendFuncSeparate".}
proc glFogCoordf*(coord: TGLfloat){.dynlib: dllname, importc: "glFogCoordf".}
proc glFogCoordfv*(coord: PGLfloat){.dynlib: dllname, importc: "glFogCoordfv".}
proc glFogCoordd*(coord: TGLdouble){.dynlib: dllname, importc: "glFogCoordd".}
proc glFogCoorddv*(coord: PGLdouble){.dynlib: dllname, importc: "glFogCoorddv".}
proc glFogCoordPointer*(thetype: TGLenum, stride: TGLsizei, pointer: PGLvoid){.
    dynlib: dllname, importc: "glFogCoordPointer".}
proc glMultiDrawArrays*(mode: TGLenum, first: PGLint, count: PGLsizei, 
                        primcount: TGLsizei){.dynlib: dllname, 
    importc: "glMultiDrawArrays".}
proc glMultiDrawElements*(mode: TGLenum, count: PGLsizei, thetype: TGLenum, 
                          indices: PGLvoid, primcount: TGLsizei){.
    dynlib: dllname, importc: "glMultiDrawElements".}
proc glPointParameterf*(pname: TGLenum, param: TGLfloat){.dynlib: dllname, 
    importc: "glPointParameterf".}
proc glPointParameterfv*(pname: TGLenum, params: PGLfloat){.dynlib: dllname, 
    importc: "glPointParameterfv".}
proc glPointParameteri*(pname: TGLenum, param: TGLint){.dynlib: dllname, 
    importc: "glPointParameteri".}
proc glPointParameteriv*(pname: TGLenum, params: PGLint){.dynlib: dllname, 
    importc: "glPointParameteriv".}
proc glSecondaryColor3b*(red: TGLByte, green: TGLByte, blue: TGLByte){.
    dynlib: dllname, importc: "glSecondaryColor3b".}
proc glSecondaryColor3bv*(v: PGLbyte){.dynlib: dllname, 
                                       importc: "glSecondaryColor3bv".}
proc glSecondaryColor3d*(red: TGLdouble, green: TGLdouble, blue: TGLdouble){.
    dynlib: dllname, importc: "glSecondaryColor3d".}
proc glSecondaryColor3dv*(v: PGLdouble){.dynlib: dllname, 
    importc: "glSecondaryColor3dv".}
proc glSecondaryColor3f*(red: TGLfloat, green: TGLfloat, blue: TGLfloat){.
    dynlib: dllname, importc: "glSecondaryColor3f".}
proc glSecondaryColor3fv*(v: PGLfloat){.dynlib: dllname, 
                                        importc: "glSecondaryColor3fv".}
proc glSecondaryColor3i*(red: TGLint, green: TGLint, blue: TGLint){.
    dynlib: dllname, importc: "glSecondaryColor3i".}
proc glSecondaryColor3iv*(v: PGLint){.dynlib: dllname, 
                                      importc: "glSecondaryColor3iv".}
proc glSecondaryColor3s*(red: TGLshort, green: TGLshort, blue: TGLshort){.
    dynlib: dllname, importc: "glSecondaryColor3s".}
proc glSecondaryColor3sv*(v: PGLshort){.dynlib: dllname, 
                                        importc: "glSecondaryColor3sv".}
proc glSecondaryColor3ub*(red: TGLubyte, green: TGLubyte, blue: TGLubyte){.
    dynlib: dllname, importc: "glSecondaryColor3ub".}
proc glSecondaryColor3ubv*(v: PGLubyte){.dynlib: dllname, 
    importc: "glSecondaryColor3ubv".}
proc glSecondaryColor3ui*(red: TGLuint, green: TGLuint, blue: TGLuint){.
    dynlib: dllname, importc: "glSecondaryColor3ui".}
proc glSecondaryColor3uiv*(v: PGLuint){.dynlib: dllname, 
                                        importc: "glSecondaryColor3uiv".}
proc glSecondaryColor3us*(red: TGLushort, green: TGLushort, blue: TGLushort){.
    dynlib: dllname, importc: "glSecondaryColor3us".}
proc glSecondaryColor3usv*(v: PGLushort){.dynlib: dllname, 
    importc: "glSecondaryColor3usv".}
proc glSecondaryColorPointer*(size: TGLint, thetype: TGLenum, stride: TGLsizei, 
                              pointer: PGLvoid){.dynlib: dllname, 
    importc: "glSecondaryColorPointer".}
proc glWindowPos2d*(x: TGLdouble, y: TGLdouble){.dynlib: dllname, 
    importc: "glWindowPos2d".}
proc glWindowPos2dv*(v: PGLdouble){.dynlib: dllname, importc: "glWindowPos2dv".}
proc glWindowPos2f*(x: TGLfloat, y: TGLfloat){.dynlib: dllname, 
    importc: "glWindowPos2f".}
proc glWindowPos2fv*(v: PGLfloat){.dynlib: dllname, importc: "glWindowPos2fv".}
proc glWindowPos2i*(x: TGLint, y: TGLint){.dynlib: dllname, 
    importc: "glWindowPos2i".}
proc glWindowPos2iv*(v: PGLint){.dynlib: dllname, importc: "glWindowPos2iv".}
proc glWindowPos2s*(x: TGLshort, y: TGLshort){.dynlib: dllname, 
    importc: "glWindowPos2s".}
proc glWindowPos2sv*(v: PGLshort){.dynlib: dllname, importc: "glWindowPos2sv".}
proc glWindowPos3d*(x: TGLdouble, y: TGLdouble, z: TGLdouble){.dynlib: dllname, 
    importc: "glWindowPos3d".}
proc glWindowPos3dv*(v: PGLdouble){.dynlib: dllname, importc: "glWindowPos3dv".}
proc glWindowPos3f*(x: TGLfloat, y: TGLfloat, z: TGLfloat){.dynlib: dllname, 
    importc: "glWindowPos3f".}
proc glWindowPos3fv*(v: PGLfloat){.dynlib: dllname, importc: "glWindowPos3fv".}
proc glWindowPos3i*(x: TGLint, y: TGLint, z: TGLint){.dynlib: dllname, 
    importc: "glWindowPos3i".}
proc glWindowPos3iv*(v: PGLint){.dynlib: dllname, importc: "glWindowPos3iv".}
proc glWindowPos3s*(x: TGLshort, y: TGLshort, z: TGLshort){.dynlib: dllname, 
    importc: "glWindowPos3s".}
proc glWindowPos3sv*(v: PGLshort){.dynlib: dllname, importc: "glWindowPos3sv".}
  #***** GL_version_1_5 *****//
const 
  GlBufferSize* = 0x00008764
  GlBufferUsage* = 0x00008765
  GlQueryCounterBits* = 0x00008864
  GlCurrentQuery* = 0x00008865
  GlQueryResult* = 0x00008866
  GlQueryResultAvailable* = 0x00008867
  GlArrayBuffer* = 0x00008892
  GlElementArrayBuffer* = 0x00008893
  GlArrayBufferBinding* = 0x00008894
  GlElementArrayBufferBinding* = 0x00008895
  GlVertexArrayBufferBinding* = 0x00008896
  GlNormalArrayBufferBinding* = 0x00008897
  GlColorArrayBufferBinding* = 0x00008898
  GlIndexArrayBufferBinding* = 0x00008899
  GlTextureCoordArrayBufferBinding* = 0x0000889A
  GlEdgeFlagArrayBufferBinding* = 0x0000889B
  GlSecondaryColorArrayBufferBinding* = 0x0000889C
  GlFogCoordinateArrayBufferBinding* = 0x0000889D
  GlWeightArrayBufferBinding* = 0x0000889E
  GlVertexAttribArrayBufferBinding* = 0x0000889F
  GlReadOnly* = 0x000088B8
  GlWriteOnly* = 0x000088B9
  GlReadWrite* = 0x000088BA
  GlBufferAccess* = 0x000088BB
  GlBufferMapped* = 0x000088BC
  GlBufferMapPointer* = 0x000088BD
  GlStreamDraw* = 0x000088E0
  GlStreamRead* = 0x000088E1
  GlStreamCopy* = 0x000088E2
  GlStaticDraw* = 0x000088E4
  GlStaticRead* = 0x000088E5
  GlStaticCopy* = 0x000088E6
  GlDynamicDraw* = 0x000088E8
  GlDynamicRead* = 0x000088E9
  GlDynamicCopy* = 0x000088EA
  GlSamplesPassed* = 0x00008914
  GlFogCoordSrc* = 0x00008450
  GlFogCoord* = 0x00008451
  GlCurrentFogCoord* = 0x00008453
  GlFogCoordArrayType* = 0x00008454
  GlFogCoordArrayStride* = 0x00008455
  GlFogCoordArrayPointer* = 0x00008456
  GlFogCoordArray* = 0x00008457
  GlFogCoordArrayBufferBinding* = 0x0000889D
  GlSrc0Rgb* = 0x00008580
  GlSrc1Rgb* = 0x00008581
  GlSrc2Rgb* = 0x00008582
  GlSrc0Alpha* = 0x00008588
  GlSrc1Alpha* = 0x00008589
  GlSrc2Alpha* = 0x0000858A

proc glGenQueries*(n: TGLsizei, ids: PGLuint){.dynlib: dllname, 
    importc: "glGenQueries".}
proc glDeleteQueries*(n: TGLsizei, ids: PGLuint){.dynlib: dllname, 
    importc: "glDeleteQueries".}
proc glIsQuery*(id: TGLuint): TGLboolean{.dynlib: dllname, importc: "glIsQuery".}
proc glBeginQuery*(target: TGLenum, id: TGLuint){.dynlib: dllname, 
    importc: "glBeginQuery".}
proc glEndQuery*(target: TGLenum){.dynlib: dllname, importc: "glEndQuery".}
proc glGetQueryiv*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetQueryiv".}
proc glGetQueryObjectiv*(id: TGLuint, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetQueryObjectiv".}
proc glGetQueryObjectuiv*(id: TGLuint, pname: TGLenum, params: PGLuint){.
    dynlib: dllname, importc: "glGetQueryObjectuiv".}
proc glBindBuffer*(target: TGLenum, buffer: TGLuint){.dynlib: dllname, 
    importc: "glBindBuffer".}
proc glDeleteBuffers*(n: TGLsizei, buffers: PGLuint){.dynlib: dllname, 
    importc: "glDeleteBuffers".}
proc glGenBuffers*(n: TGLsizei, buffers: PGLuint){.dynlib: dllname, 
    importc: "glGenBuffers".}
proc glIsBuffer*(buffer: TGLuint): TGLboolean{.dynlib: dllname, 
    importc: "glIsBuffer".}
proc glBufferData*(target: TGLenum, size: GLsizeiptr, data: PGLvoid, 
                   usage: TGLenum){.dynlib: dllname, importc: "glBufferData".}
proc glBufferSubData*(target: TGLenum, offset: GLintptr, size: GLsizeiptr, 
                      data: PGLvoid){.dynlib: dllname, 
                                      importc: "glBufferSubData".}
proc glGetBufferSubData*(target: TGLenum, offset: GLintptr, size: GLsizeiptr, 
                         data: PGLvoid){.dynlib: dllname, 
    importc: "glGetBufferSubData".}
proc glMapBuffer*(target: TGLenum, access: TGLenum): PGLvoid{.dynlib: dllname, 
    importc: "glMapBuffer".}
proc glUnmapBuffer*(target: TGLenum): TGLboolean{.dynlib: dllname, 
    importc: "glUnmapBuffer".}
proc glGetBufferParameteriv*(target: TGLenum, pname: TGLenum, params: PGLint){.
    dynlib: dllname, importc: "glGetBufferParameteriv".}
proc glGetBufferPointerv*(target: TGLenum, pname: TGLenum, params: PGLvoid){.
    dynlib: dllname, importc: "glGetBufferPointerv".}
  #***** GL_version_2_0 *****//
const 
  GlBlendEquationRgb* = 0x00008009
  GlVertexAttribArrayEnabled* = 0x00008622
  GlVertexAttribArraySize* = 0x00008623
  GlVertexAttribArrayStride* = 0x00008624
  GlVertexAttribArrayType* = 0x00008625
  GlCurrentVertexAttrib* = 0x00008626
  GlVertexProgramPointSize* = 0x00008642
  GlVertexProgramTwoSide* = 0x00008643
  GlVertexAttribArrayPointer* = 0x00008645
  GlStencilBackFunc* = 0x00008800
  GlStencilBackFail* = 0x00008801
  GlStencilBackPassDepthFail* = 0x00008802
  GlStencilBackPassDepthPass* = 0x00008803
  GlMaxDrawBuffers* = 0x00008824
  GlDrawBuffer0* = 0x00008825
  GlDrawBuffer1* = 0x00008826
  GlDrawBuffer2* = 0x00008827
  GlDrawBuffer3* = 0x00008828
  GlDrawBuffer4* = 0x00008829
  GlDrawBuffer5* = 0x0000882A
  GlDrawBuffer6* = 0x0000882B
  GlDrawBuffer7* = 0x0000882C
  GlDrawBuffer8* = 0x0000882D
  GlDrawBuffer9* = 0x0000882E
  GlDrawBuffer10* = 0x0000882F
  GlDrawBuffer11* = 0x00008830
  GlDrawBuffer12* = 0x00008831
  GlDrawBuffer13* = 0x00008832
  GlDrawBuffer14* = 0x00008833
  GlDrawBuffer15* = 0x00008834
  GlBlendEquationAlpha* = 0x0000883D
  GlPointSprite* = 0x00008861
  GlCoordReplace* = 0x00008862
  GlMaxVertexAttribs* = 0x00008869
  GlVertexAttribArrayNormalized* = 0x0000886A
  GlMaxTextureCoords* = 0x00008871
  GlMaxTextureImageUnits* = 0x00008872
  GlFragmentShader* = 0x00008B30
  GlVertexShader* = 0x00008B31
  GlMaxFragmentUniformComponents* = 0x00008B49
  GlMaxVertexUniformComponents* = 0x00008B4A
  GlMaxVaryingFloats* = 0x00008B4B
  GlMaxVertexTextureImageUnits* = 0x00008B4C
  GlMaxCombinedTextureImageUnits* = 0x00008B4D
  GlShaderType* = 0x00008B4F
  GlFloatVec2* = 0x00008B50
  GlFloatVec3* = 0x00008B51
  GlFloatVec4* = 0x00008B52
  GlIntVec2* = 0x00008B53
  GlIntVec3* = 0x00008B54
  GlIntVec4* = 0x00008B55
  GlBool* = 0x00008B56
  GlBoolVec2* = 0x00008B57
  GlBoolVec3* = 0x00008B58
  GlBoolVec4* = 0x00008B59
  GlFloatMat2* = 0x00008B5A
  GlFloatMat3* = 0x00008B5B
  GlFloatMat4* = 0x00008B5C
  GlSampler1d* = 0x00008B5D
  GlSampler2d* = 0x00008B5E
  GlSampler3d* = 0x00008B5F
  GlSamplerCube* = 0x00008B60
  GlSampler1dShadow* = 0x00008B61
  GlSampler2dShadow* = 0x00008B62
  GlDeleteStatus* = 0x00008B80
  GlCompileStatus* = 0x00008B81
  GlLinkStatus* = 0x00008B82
  GlValidateStatus* = 0x00008B83
  GlInfoLogLength* = 0x00008B84
  GlAttachedShaders* = 0x00008B85
  GlActiveUniforms* = 0x00008B86
  GlActiveUniformMaxLength* = 0x00008B87
  GlShaderSourceLength* = 0x00008B88
  GlActiveAttributes* = 0x00008B89
  GlActiveAttributeMaxLength* = 0x00008B8A
  GlFragmentShaderDerivativeHint* = 0x00008B8B
  GlShadingLanguageVersion* = 0x00008B8C
  GlCurrentProgram* = 0x00008B8D
  GlPointSpriteCoordOrigin* = 0x00008CA0
  GlLowerLeft* = 0x00008CA1
  GlUpperLeft* = 0x00008CA2
  GlStencilBackRef* = 0x00008CA3
  GlStencilBackValueMask* = 0x00008CA4
  GlStencilBackWritemask* = 0x00008CA5

{.pop.}
